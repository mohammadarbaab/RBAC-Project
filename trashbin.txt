 const handleDelete = (id) => {
    dispatch(removeUser(id));
  };
 

const handleSubmit = (e) => {
  e.preventDefault();

  if (formMode === "add") {
    dispatch(addUser(currentUser))
      .then(() => {
        Swal.fire({
          title: 'Success!',
          text: 'User added successfully.',
          icon: 'success',
          confirmButtonText: 'OK'
        });
      })
      .catch((error) => {
        Swal.fire({
          title: 'Error!',
          text: 'Something went wrong.',
          icon: 'error',
          confirmButtonText: 'Try Again'
        });
      });
  } else {
    dispatch(editUser({ id: currentUser.id, user: currentUser }));
  }

  setCurrentUser({
    name: "",
    email: "",
    role: "",
    status: "active",
    permissions: [],
  });
  setFormMode("add");
};
 


  import Swal from 'sweetalert2'; // Import SweetAlert2 at the top
 
const handleSubmit = (e) => {
    e.preventDefault();

    if (formMode === "add") {
      dispatch(addUser(currentUser));
    } else {
      dispatch(editUser({ id: currentUser.id, user: currentUser }));
    }

    setCurrentUser({
      name: "",
      email: "",
      role: "",
      status: "active",
      permissions: [],
    });
    setFormMode("add");
  };
 
 <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>
      {/* Previous Button */}
      <button
        onClick={() => handlePagination(currentPage - 1)}
        disabled={currentPage === 1}
        style={{
          margin: "5px",
          backgroundColor: currentPage === 1 ? "lightgray" : "gray",
          color: "white",
          border: "none",
          padding: "5px 10px",
          cursor: currentPage === 1 ? "not-allowed" : "pointer",
        }}
      >
        Prev
      </button>

      {/* Page Info */}
      <span
        style={{
          margin: "0 10px",
          fontSize: "16px",
          color: "black",
        }}
      >
        Page {currentPage} of {totalPages}
      </span>

      {/* Next Button */}
      <button
        onClick={() => handlePagination(currentPage + 1)}
        disabled={currentPage === totalPages}
        style={{
          margin: "5px",
          backgroundColor: currentPage === totalPages ? "lightgray" : "gray",
          color: "white",
          border: "none",
          padding: "5px 10px",
          cursor: currentPage === totalPages ? "not-allowed" : "pointer",
        }}
      >
        Next
      </button>
    </div>
 

  products,
  itemsPerPage,
 

  // Total pages calculation
  const totalPages = Math.ceil(products.length / itemsPerPage);
 
export default function Pagination({ totalItems, itemsPerPage, currentPage, paginate }) {
    const totalPages = Math.ceil(totalItems / itemsPerPage);
  
    return (
      <div className="flex justify-center items-center mt-6 space-x-4">
        <button
          onClick={() => paginate(currentPage - 1)}
          disabled={currentPage === 1}
          className="px-4 py-2 bg-indigo-600 text-white rounded-md disabled:bg-gray-400"
        >
          Previous
        </button>
        <span className="text-lg font-medium">
          Page {currentPage} of {totalPages}
        </span>
        <button
          onClick={() => paginate(currentPage + 1)}
          disabled={currentPage === totalPages}
          className="px-4 py-2 bg-indigo-600 text-white rounded-md disabled:bg-gray-400"
        >
          Next
        </button>
      </div>
    );
  }
  
 
filteredUsers
 
filteredUsers
 
e) => setSearchQuery(e.target.value)
 

  const [searchQuery, setSearchQuery] = useState(""); // State for search input
  const [filteredUsers, setFilteredUsers] = useState(users); // State for filtered users list
 
./Pagination
 
export default function Pagination({ totalItems, itemsPerPage, currentPage, paginate }) {
    const totalPages = Math.ceil(totalItems / itemsPerPage);
  
    return (
      <div className="flex justify-center items-center mt-6 space-x-4">
        <button
          onClick={() => paginate(currentPage - 1)}
          disabled={currentPage === 1}
          className="px-4 py-2 bg-indigo-600 text-white rounded-md disabled:bg-gray-400"
        >
          Previous
        </button>
        <span className="text-lg font-medium">
          Page {currentPage} of {totalPages}
        </span>
        <button
          onClick={() => paginate(currentPage + 1)}
          disabled={currentPage === totalPages}
          className="px-4 py-2 bg-indigo-600 text-white rounded-md disabled:bg-gray-400"
        >
          Next
        </button>
      </div>
    );
  }
  
 
import React, { useEffect, useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import {
  fetchAllUsersAsync,
  selectAllUserLists,
} from "../UsersLists/components/userListsSlice"; // Import your slice actions and selector

function UserLists() {
  const dispatch = useDispatch();
  const users = useSelector(selectAllUserLists); // Get users list from Redux state
  const status = useSelector((state) => state.userLists.status); // To handle loading state
  const error = useSelector((state) => state.userLists.error); // To handle error state
  const [searchQuery, setSearchQuery] = useState(""); // State for search input
  const [filteredUsers, setFilteredUsers] = useState(users); // State for filtered users list




  // pagination code 
  
  
  // Fetch users on component mount
  useEffect(() => {
    if (status === "idle") {
      dispatch(fetchAllUsersAsync()); // Dispatch the async thunk to fetch users
    }
  }, [dispatch, status]);

  // Filter users based on search query
  useEffect(() => {
    if (searchQuery === "") {
      setFilteredUsers(users); // If no search query, show all users
    } else {
      setFilteredUsers(
        users.filter((user) =>
          user.name.toLowerCase().includes(searchQuery.toLowerCase())
        )
      ); // Filter users by name
    }
  }, [searchQuery, users]);

  return (
    <div className="p-8 min-h-screen">
      <h1 className="text-4xl font-bold mb-8 text-center text-gray-800">
        Employees
      </h1>

      {/* Search Bar */}
      <div className="mb-6 max-w-md mx-auto">
        <input
          type="text"
          placeholder="Search by name..."
          value={searchQuery}
          onChange={(e) => setSearchQuery(e.target.value)}
          className="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 text-lg"
        />
      </div>

      {/* Display the user list */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 p-8 mx-auto max-w-6xl">
        {filteredUsers.length > 0 ? (
          filteredUsers.map((user) => (
            <div
              key={user.id}
              className="relative bg-white rounded-xl p-6 border border-gray-200 shadow-md hover:shadow-lg transition-all duration-300 ease-in-out transform hover:scale-105"
              style={{
                borderImage: "linear-gradient(to right, #6EE7B7, #3B82F6) 1", // Gradient border effect
              }}
            >
              {/* Status Badge */}
              <div
                className={`absolute top-4 right-4 px-4 py-1 text-xs font-medium uppercase rounded-full ${
                  user.status === "active"
                    ? "bg-green-200 text-green-800 shadow-md"
                    : "bg-red-200 text-red-800 shadow-md"
                }`}
              >
                {user.status === "active" ? "Active" : "Inactive"}
              </div>

              {/* Avatar and Name */}
              <div className="flex items-center gap-4 mb-6">
                <div className="w-16 h-16 flex items-center justify-center rounded-full bg-gradient-to-r from-indigo-500 to-purple-600 text-white font-semibold text-2xl shadow-md">
                  {user.name[0].toUpperCase()}
                </div>
                <h2 className="text-2xl font-semibold text-gray-800">
                  {user.name}
                </h2>
              </div>

              {/* Details */}
              <div className="text-gray-600 text-sm space-y-2">
                <p className="flex items-center gap-2">
                  <span className="material-icons text-gray-500">badge</span>
                  {user.id}
                </p>
                <p className="flex items-center gap-2">
                  <span className="material-icons text-gray-500">email</span>
                  {user.email}
                </p>
                <p className="flex items-center gap-2">
                  <span className="material-icons text-gray-500">person</span>
                  {user.role}
                </p>
              </div>

              {/* Permissions */}
              <div className="mt-4">
                <h3 className="text-sm font-semibold text-gray-700 mb-2">
                  Permissions
                </h3>
                <div className="flex flex-wrap gap-3">
                  {user.permissions && user.permissions.length > 0 ? (
                    user.permissions.map((permission, index) => (
                      <span
                        key={index}
                        className="px-4 py-1 text-sm font-medium text-white bg-blue-500 rounded-full transition-all duration-200 ease-in-out hover:bg-blue-600 cursor-pointer"
                      >
                        {permission}
                      </span>
                    ))
                  ) : (
                    <span className="px-4 py-1 text-sm font-medium text-white bg-gray-400 rounded-full">
                      No Permissions
                    </span>
                  )}
                </div>
              </div>
            </div>
          ))
        ) : (
          <p className="text-center text-gray-600 col-span-full">
            No users found
          </p>
        )}
      </div>

    </div>
  );
}

export default UserLists;

 
export default function Pagination({ totalItems, itemsPerPage, currentPage, paginate }) {
    const totalPages = Math.ceil(totalItems / itemsPerPage);
  
    return (
      <div className="flex justify-center items-center mt-6 space-x-4">
        <button
          onClick={() => paginate(currentPage - 1)}
          disabled={currentPage === 1}
          className="px-4 py-2 bg-indigo-600 text-white rounded-md disabled:bg-gray-400"
        >
          Previous
        </button>
        <span className="text-lg font-medium">
          Page {currentPage} of {totalPages}
        </span>
        <button
          onClick={() => paginate(currentPage + 1)}
          disabled={currentPage === totalPages}
          className="px-4 py-2 bg-indigo-600 text-white rounded-md disabled:bg-gray-400"
        >
          Next
        </button>
      </div>
    );
  }
  
 
import React, { useEffect, useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import {
  fetchAllUsersAsync,
  selectAllUserLists,
} from "../UsersLists/components/userListsSlice"; // Import your slice actions and selector

function UserLists() {
  const dispatch = useDispatch();
  const users = useSelector(selectAllUserLists); // Get users list from Redux state
  const status = useSelector((state) => state.userLists.status); // To handle loading state
  const error = useSelector((state) => state.userLists.error); // To handle error state
  const [searchQuery, setSearchQuery] = useState(""); // State for search input
  const [filteredUsers, setFilteredUsers] = useState(users); // State for filtered users list




  // pagination code 
  
  
  // Fetch users on component mount
  useEffect(() => {
    if (status === "idle") {
      dispatch(fetchAllUsersAsync()); // Dispatch the async thunk to fetch users
    }
  }, [dispatch, status]);

  // Filter users based on search query
  useEffect(() => {
    if (searchQuery === "") {
      setFilteredUsers(users); // If no search query, show all users
    } else {
      setFilteredUsers(
        users.filter((user) =>
          user.name.toLowerCase().includes(searchQuery.toLowerCase())
        )
      ); // Filter users by name
    }
  }, [searchQuery, users]);

  return (
    <div className="p-8 min-h-screen">
      <h1 className="text-4xl font-bold mb-8 text-center text-gray-800">
        Employees
      </h1>

      {/* Search Bar */}
      <div className="mb-6 max-w-md mx-auto">
        <input
          type="text"
          placeholder="Search by name..."
          value={searchQuery}
          onChange={(e) => setSearchQuery(e.target.value)}
          className="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 text-lg"
        />
      </div>

      {/* Display the user list */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 p-8 mx-auto max-w-6xl">
        {filteredUsers.length > 0 ? (
          filteredUsers.map((user) => (
            <div
              key={user.id}
              className="relative bg-white rounded-xl p-6 border border-gray-200 shadow-md hover:shadow-lg transition-all duration-300 ease-in-out transform hover:scale-105"
              style={{
                borderImage: "linear-gradient(to right, #6EE7B7, #3B82F6) 1", // Gradient border effect
              }}
            >
              {/* Status Badge */}
              <div
                className={`absolute top-4 right-4 px-4 py-1 text-xs font-medium uppercase rounded-full ${
                  user.status === "active"
                    ? "bg-green-200 text-green-800 shadow-md"
                    : "bg-red-200 text-red-800 shadow-md"
                }`}
              >
                {user.status === "active" ? "Active" : "Inactive"}
              </div>

              {/* Avatar and Name */}
              <div className="flex items-center gap-4 mb-6">
                <div className="w-16 h-16 flex items-center justify-center rounded-full bg-gradient-to-r from-indigo-500 to-purple-600 text-white font-semibold text-2xl shadow-md">
                  {user.name[0].toUpperCase()}
                </div>
                <h2 className="text-2xl font-semibold text-gray-800">
                  {user.name}
                </h2>
              </div>

              {/* Details */}
              <div className="text-gray-600 text-sm space-y-2">
                <p className="flex items-center gap-2">
                  <span className="material-icons text-gray-500">badge</span>
                  {user.id}
                </p>
                <p className="flex items-center gap-2">
                  <span className="material-icons text-gray-500">email</span>
                  {user.email}
                </p>
                <p className="flex items-center gap-2">
                  <span className="material-icons text-gray-500">person</span>
                  {user.role}
                </p>
              </div>

              {/* Permissions */}
              <div className="mt-4">
                <h3 className="text-sm font-semibold text-gray-700 mb-2">
                  Permissions
                </h3>
                <div className="flex flex-wrap gap-3">
                  {user.permissions && user.permissions.length > 0 ? (
                    user.permissions.map((permission, index) => (
                      <span
                        key={index}
                        className="px-4 py-1 text-sm font-medium text-white bg-blue-500 rounded-full transition-all duration-200 ease-in-out hover:bg-blue-600 cursor-pointer"
                      >
                        {permission}
                      </span>
                    ))
                  ) : (
                    <span className="px-4 py-1 text-sm font-medium text-white bg-gray-400 rounded-full">
                      No Permissions
                    </span>
                  )}
                </div>
              </div>
            </div>
          ))
        ) : (
          <p className="text-center text-gray-600 col-span-full">
            No users found
          </p>
        )}
      </div>

    </div>
  );
}

export default UserLists;

 
./Paginatio
 
export default function Pagination({ totalItems, itemsPerPage, currentPage, paginate }) {
    const totalPages = Math.ceil(totalItems / itemsPerPage);
  
    return (
      <div className="flex justify-center items-center mt-6 space-x-4">
        <button
          onClick={() => paginate(currentPage - 1)}
          disabled={currentPage === 1}
          className="px-4 py-2 bg-indigo-600 text-white rounded-md disabled:bg-gray-400"
        >
          Previous
        </button>
        <span className="text-lg font-medium">
          Page {currentPage} of {totalPages}
        </span>
        <button
          onClick={() => paginate(currentPage + 1)}
          disabled={currentPage === totalPages}
          className="px-4 py-2 bg-indigo-600 text-white rounded-md disabled:bg-gray-400"
        >
          Next
        </button>
      </div>
    );
  }
  
 
import React, { useEffect, useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import {
  fetchAllUsersAsync,
  selectAllUserLists,
} from "../UsersLists/components/userListsSlice"; // Import your slice actions and selector

function UserLists() {
  const dispatch = useDispatch();
  const users = useSelector(selectAllUserLists); // Get users list from Redux state
  const status = useSelector((state) => state.userLists.status); // To handle loading state
  const error = useSelector((state) => state.userLists.error); // To handle error state
  const [searchQuery, setSearchQuery] = useState(""); // State for search input
  const [filteredUsers, setFilteredUsers] = useState(users); // State for filtered users list




  // pagination code 
  
  
  // Fetch users on component mount
  useEffect(() => {
    if (status === "idle") {
      dispatch(fetchAllUsersAsync()); // Dispatch the async thunk to fetch users
    }
  }, [dispatch, status]);

  // Filter users based on search query
  useEffect(() => {
    if (searchQuery === "") {
      setFilteredUsers(users); // If no search query, show all users
    } else {
      setFilteredUsers(
        users.filter((user) =>
          user.name.toLowerCase().includes(searchQuery.toLowerCase())
        )
      ); // Filter users by name
    }
  }, [searchQuery, users]);

  return (
    <div className="p-8 min-h-screen">
      <h1 className="text-4xl font-bold mb-8 text-center text-gray-800">
        Employees
      </h1>

      {/* Search Bar */}
      <div className="mb-6 max-w-md mx-auto">
        <input
          type="text"
          placeholder="Search by name..."
          value={searchQuery}
          onChange={(e) => setSearchQuery(e.target.value)}
          className="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 text-lg"
        />
      </div>

      {/* Display the user list */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 p-8 mx-auto max-w-6xl">
        {filteredUsers.length > 0 ? (
          filteredUsers.map((user) => (
            <div
              key={user.id}
              className="relative bg-white rounded-xl p-6 border border-gray-200 shadow-md hover:shadow-lg transition-all duration-300 ease-in-out transform hover:scale-105"
              style={{
                borderImage: "linear-gradient(to right, #6EE7B7, #3B82F6) 1", // Gradient border effect
              }}
            >
              {/* Status Badge */}
              <div
                className={`absolute top-4 right-4 px-4 py-1 text-xs font-medium uppercase rounded-full ${
                  user.status === "active"
                    ? "bg-green-200 text-green-800 shadow-md"
                    : "bg-red-200 text-red-800 shadow-md"
                }`}
              >
                {user.status === "active" ? "Active" : "Inactive"}
              </div>

              {/* Avatar and Name */}
              <div className="flex items-center gap-4 mb-6">
                <div className="w-16 h-16 flex items-center justify-center rounded-full bg-gradient-to-r from-indigo-500 to-purple-600 text-white font-semibold text-2xl shadow-md">
                  {user.name[0].toUpperCase()}
                </div>
                <h2 className="text-2xl font-semibold text-gray-800">
                  {user.name}
                </h2>
              </div>

              {/* Details */}
              <div className="text-gray-600 text-sm space-y-2">
                <p className="flex items-center gap-2">
                  <span className="material-icons text-gray-500">badge</span>
                  {user.id}
                </p>
                <p className="flex items-center gap-2">
                  <span className="material-icons text-gray-500">email</span>
                  {user.email}
                </p>
                <p className="flex items-center gap-2">
                  <span className="material-icons text-gray-500">person</span>
                  {user.role}
                </p>
              </div>

              {/* Permissions */}
              <div className="mt-4">
                <h3 className="text-sm font-semibold text-gray-700 mb-2">
                  Permissions
                </h3>
                <div className="flex flex-wrap gap-3">
                  {user.permissions && user.permissions.length > 0 ? (
                    user.permissions.map((permission, index) => (
                      <span
                        key={index}
                        className="px-4 py-1 text-sm font-medium text-white bg-blue-500 rounded-full transition-all duration-200 ease-in-out hover:bg-blue-600 cursor-pointer"
                      >
                        {permission}
                      </span>
                    ))
                  ) : (
                    <span className="px-4 py-1 text-sm font-medium text-white bg-gray-400 rounded-full">
                      No Permissions
                    </span>
                  )}
                </div>
              </div>
            </div>
          ))
        ) : (
          <p className="text-center text-gray-600 col-span-full">
            No users found
          </p>
        )}
      </div>

    </div>
  );
}

export default UserLists;

 
import React, { useEffect, useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import {
  fetchAllUsersAsync,
  selectAllUserLists,
} from "../UsersLists/components/userListsSlice"; // Import your slice actions and selector

function UserLists() {
  const dispatch = useDispatch();
  const users = useSelector(selectAllUserLists); // Get users list from Redux state
  const status = useSelector((state) => state.userLists.status); // To handle loading state
  const error = useSelector((state) => state.userLists.error); // To handle error state
  const [searchQuery, setSearchQuery] = useState(""); // State for search input
  const [filteredUsers, setFilteredUsers] = useState(users); // State for filtered users list




  // pagination code 
  
  
  // Fetch users on component mount
  useEffect(() => {
    if (status === "idle") {
      dispatch(fetchAllUsersAsync()); // Dispatch the async thunk to fetch users
    }
  }, [dispatch, status]);

  // Filter users based on search query
  useEffect(() => {
    if (searchQuery === "") {
      setFilteredUsers(users); // If no search query, show all users
    } else {
      setFilteredUsers(
        users.filter((user) =>
          user.name.toLowerCase().includes(searchQuery.toLowerCase())
        )
      ); // Filter users by name
    }
  }, [searchQuery, users]);

  return (
    <div className="p-8 min-h-screen">
      <h1 className="text-4xl font-bold mb-8 text-center text-gray-800">
        Employees
      </h1>

      {/* Search Bar */}
      <div className="mb-6 max-w-md mx-auto">
        <input
          type="text"
          placeholder="Search by name..."
          value={searchQuery}
          onChange={(e) => setSearchQuery(e.target.value)}
          className="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 text-lg"
        />
      </div>

      {/* Display the user list */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 p-8 mx-auto max-w-6xl">
        {filteredUsers.length > 0 ? (
          filteredUsers.map((user) => (
            <div
              key={user.id}
              className="relative bg-white rounded-xl p-6 border border-gray-200 shadow-md hover:shadow-lg transition-all duration-300 ease-in-out transform hover:scale-105"
              style={{
                borderImage: "linear-gradient(to right, #6EE7B7, #3B82F6) 1", // Gradient border effect
              }}
            >
              {/* Status Badge */}
              <div
                className={`absolute top-4 right-4 px-4 py-1 text-xs font-medium uppercase rounded-full ${
                  user.status === "active"
                    ? "bg-green-200 text-green-800 shadow-md"
                    : "bg-red-200 text-red-800 shadow-md"
                }`}
              >
                {user.status === "active" ? "Active" : "Inactive"}
              </div>

              {/* Avatar and Name */}
              <div className="flex items-center gap-4 mb-6">
                <div className="w-16 h-16 flex items-center justify-center rounded-full bg-gradient-to-r from-indigo-500 to-purple-600 text-white font-semibold text-2xl shadow-md">
                  {user.name[0].toUpperCase()}
                </div>
                <h2 className="text-2xl font-semibold text-gray-800">
                  {user.name}
                </h2>
              </div>

              {/* Details */}
              <div className="text-gray-600 text-sm space-y-2">
                <p className="flex items-center gap-2">
                  <span className="material-icons text-gray-500">badge</span>
                  {user.id}
                </p>
                <p className="flex items-center gap-2">
                  <span className="material-icons text-gray-500">email</span>
                  {user.email}
                </p>
                <p className="flex items-center gap-2">
                  <span className="material-icons text-gray-500">person</span>
                  {user.role}
                </p>
              </div>

              {/* Permissions */}
              <div className="mt-4">
                <h3 className="text-sm font-semibold text-gray-700 mb-2">
                  Permissions
                </h3>
                <div className="flex flex-wrap gap-3">
                  {user.permissions && user.permissions.length > 0 ? (
                    user.permissions.map((permission, index) => (
                      <span
                        key={index}
                        className="px-4 py-1 text-sm font-medium text-white bg-blue-500 rounded-full transition-all duration-200 ease-in-out hover:bg-blue-600 cursor-pointer"
                      >
                        {permission}
                      </span>
                    ))
                  ) : (
                    <span className="px-4 py-1 text-sm font-medium text-white bg-gray-400 rounded-full">
                      No Permissions
                    </span>
                  )}
                </div>
              </div>
            </div>
          ))
        ) : (
          <p className="text-center text-gray-600 col-span-full">
            No users found
          </p>
        )}
      </div>

    </div>
  );
}

export default UserLists;

 

import Pagination from "../../Pages/Pagination";
 
import React, { useEffect, useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import {
  fetchAllUsersAsync,
  selectAllUserLists,
} from "../UsersLists/components/userListsSlice"; // Import your slice actions and selector
import Pagination from "../../Pages/Pagination";

function UserLists() {
  const dispatch = useDispatch();
  const users = useSelector(selectAllUserLists); // Get users list from Redux state
  const status = useSelector((state) => state.userLists.status); // To handle loading state
  const error = useSelector((state) => state.userLists.error); // To handle error state
  const [searchQuery, setSearchQuery] = useState(""); // State for search input
  const [filteredUsers, setFilteredUsers] = useState(users); // State for filtered users list




  // pagination code 
  const usersPagination = [/* an array of users (length greater than 6) */]; 
  const [currentPage, setCurrentPage] = useState(1);
  const itemsPerPage = 6;

  const indexOfLastItem = currentPage * itemsPerPage;
  const indexOfFirstItem = indexOfLastItem - itemsPerPage;
  const currentUsers = users.slice(indexOfFirstItem, indexOfLastItem);

  const paginate = (pageNumber) => setCurrentPage(pageNumber);


  // Fetch users on component mount
  useEffect(() => {
    if (status === "idle") {
      dispatch(fetchAllUsersAsync()); // Dispatch the async thunk to fetch users
    }
  }, [dispatch, status]);

  // Filter users based on search query
  useEffect(() => {
    if (searchQuery === "") {
      setFilteredUsers(users); // If no search query, show all users
    } else {
      setFilteredUsers(
        users.filter((user) =>
          user.name.toLowerCase().includes(searchQuery.toLowerCase())
        )
      ); // Filter users by name
    }
  }, [searchQuery, users]);

  return (
    <div className="p-8 min-h-screen">
      <h1 className="text-4xl font-bold mb-8 text-center text-gray-800">
        Employees
      </h1>

      {/* Search Bar */}
      <div className="mb-6 max-w-md mx-auto">
        <input
          type="text"
          placeholder="Search by name..."
          value={searchQuery}
          onChange={(e) => setSearchQuery(e.target.value)}
          className="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 text-lg"
        />
      </div>

      {/* Display the user list */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 p-8 mx-auto max-w-6xl">
        {filteredUsers.length > 0 ? (
          filteredUsers.map((user) => (
            <div
              key={user.id}
              className="relative bg-white rounded-xl p-6 border border-gray-200 shadow-md hover:shadow-lg transition-all duration-300 ease-in-out transform hover:scale-105"
              style={{
                borderImage: "linear-gradient(to right, #6EE7B7, #3B82F6) 1", // Gradient border effect
              }}
            >
              {/* Status Badge */}
              <div
                className={`absolute top-4 right-4 px-4 py-1 text-xs font-medium uppercase rounded-full ${
                  user.status === "active"
                    ? "bg-green-200 text-green-800 shadow-md"
                    : "bg-red-200 text-red-800 shadow-md"
                }`}
              >
                {user.status === "active" ? "Active" : "Inactive"}
              </div>

              {/* Avatar and Name */}
              <div className="flex items-center gap-4 mb-6">
                <div className="w-16 h-16 flex items-center justify-center rounded-full bg-gradient-to-r from-indigo-500 to-purple-600 text-white font-semibold text-2xl shadow-md">
                  {user.name[0].toUpperCase()}
                </div>
                <h2 className="text-2xl font-semibold text-gray-800">
                  {user.name}
                </h2>
              </div>

              {/* Details */}
              <div className="text-gray-600 text-sm space-y-2">
                <p className="flex items-center gap-2">
                  <span className="material-icons text-gray-500">badge</span>
                  {user.id}
                </p>
                <p className="flex items-center gap-2">
                  <span className="material-icons text-gray-500">email</span>
                  {user.email}
                </p>
                <p className="flex items-center gap-2">
                  <span className="material-icons text-gray-500">person</span>
                  {user.role}
                </p>
              </div>

              {/* Permissions */}
              <div className="mt-4">
                <h3 className="text-sm font-semibold text-gray-700 mb-2">
                  Permissions
                </h3>
                <div className="flex flex-wrap gap-3">
                  {user.permissions && user.permissions.length > 0 ? (
                    user.permissions.map((permission, index) => (
                      <span
                        key={index}
                        className="px-4 py-1 text-sm font-medium text-white bg-blue-500 rounded-full transition-all duration-200 ease-in-out hover:bg-blue-600 cursor-pointer"
                      >
                        {permission}
                      </span>
                    ))
                  ) : (
                    <span className="px-4 py-1 text-sm font-medium text-white bg-gray-400 rounded-full">
                      No Permissions
                    </span>
                  )}
                </div>
              </div>
            </div>
          ))
        ) : (
          <p className="text-center text-gray-600 col-span-full">
            No users found
          </p>
        )}
      </div>
      <Pagination
        totalItems={users.length}
        itemsPerPage={itemsPerPage}
        currentPage={currentPage}
        paginate={paginate}
      />
    </div>
  );
}

export default UserLists;

 
export default function Pagination({ totalItems, itemsPerPage, currentPage, paginate }) {
    const totalPages = Math.ceil(totalItems / itemsPerPage); // Total pages calculate karega
  
    return (
      <div className="flex justify-center items-center mt-6 space-x-4">
        <button
          onClick={() => paginate(currentPage - 1)} // Previous page
          disabled={currentPage === 1} // Disable button agar first page ho
          className="px-4 py-2 bg-indigo-600 text-white rounded-md disabled:bg-gray-400"
        >
          Previous
        </button>
        <span className="text-lg font-medium">
          Page {currentPage} of {totalPages} {/* Current page and total pages */}
        </span>
        <button
          onClick={() => paginate(currentPage + 1)} // Next page
          disabled={currentPage === totalPages} // Disable button agar last page ho
          className="px-4 py-2 bg-indigo-600 text-white rounded-md disabled:bg-gray-400"
        >
          Next
        </button>
      </div>
    );
  }
  
 
import React, { useEffect, useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import {
  fetchAllUsersAsync,
  selectAllUserLists,
} from "../UsersLists/components/userListsSlice"; // Import your slice actions and selector
import Pagination from "../../Pages/Pagination";

function UserLists() {
  const dispatch = useDispatch();
  const users = useSelector(selectAllUserLists); // Get users list from Redux state
  const status = useSelector((state) => state.userLists.status); // To handle loading state
  const error = useSelector((state) => state.userLists.error); // To handle error state
  const [searchQuery, setSearchQuery] = useState(""); // State for search input
  const [filteredUsers, setFilteredUsers] = useState(users); // State for filtered users list

  // pagination code 
  
  // Fetch users on component mount
  useEffect(() => {
    if (status === "idle") {
      dispatch(fetchAllUsersAsync()); // Dispatch the async thunk to fetch users
    }
  }, [dispatch, status]);

  // Filter users based on search query
  useEffect(() => {
    if (searchQuery === "") {
      setFilteredUsers(users); // If no search query, show all users
    } else {
      setFilteredUsers(
        users.filter((user) =>
          user.name.toLowerCase().includes(searchQuery.toLowerCase())
        )
      ); // Filter users by name
    }
  }, [searchQuery, users]);

  return (
    <div className="p-8 min-h-screen">
      <h1 className="text-4xl font-bold mb-8 text-center text-gray-800">
        Employees
      </h1>

      {/* Search Bar */}
      <div className="mb-6 max-w-md mx-auto">
        <input
          type="text"
          placeholder="Search by name..."
          value={searchQuery}
          onChange={(e) => setSearchQuery(e.target.value)}
          className="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 text-lg"
        />
      </div>

      {/* Display the user list */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 p-8 mx-auto max-w-6xl">
        {filteredUsers.length > 0 ? (
          filteredUsers.map((user) => (
            <div
              key={user.id}
              className="relative bg-white rounded-xl p-6 border border-gray-200 shadow-md hover:shadow-lg transition-all duration-300 ease-in-out transform hover:scale-105"
              style={{
                borderImage: "linear-gradient(to right, #6EE7B7, #3B82F6) 1", // Gradient border effect
              }}
            >
              {/* Status Badge */}
              <div
                className={`absolute top-4 right-4 px-4 py-1 text-xs font-medium uppercase rounded-full ${
                  user.status === "active"
                    ? "bg-green-200 text-green-800 shadow-md"
                    : "bg-red-200 text-red-800 shadow-md"
                }`}
              >
                {user.status === "active" ? "Active" : "Inactive"}
              </div>

              {/* Avatar and Name */}
              <div className="flex items-center gap-4 mb-6">
                <div className="w-16 h-16 flex items-center justify-center rounded-full bg-gradient-to-r from-indigo-500 to-purple-600 text-white font-semibold text-2xl shadow-md">
                  {user.name[0].toUpperCase()}
                </div>
                <h2 className="text-2xl font-semibold text-gray-800">
                  {user.name}
                </h2>
              </div>

              {/* Details */}
              <div className="text-gray-600 text-sm space-y-2">
                <p className="flex items-center gap-2">
                  <span className="material-icons text-gray-500">badge</span>
                  {user.id}
                </p>
                <p className="flex items-center gap-2">
                  <span className="material-icons text-gray-500">email</span>
                  {user.email}
                </p>
                <p className="flex items-center gap-2">
                  <span className="material-icons text-gray-500">person</span>
                  {user.role}
                </p>
              </div>

              {/* Permissions */}
              <div className="mt-4">
                <h3 className="text-sm font-semibold text-gray-700 mb-2">
                  Permissions
                </h3>
                <div className="flex flex-wrap gap-3">
                  {user.permissions && user.permissions.length > 0 ? (
                    user.permissions.map((permission, index) => (
                      <span
                        key={index}
                        className="px-4 py-1 text-sm font-medium text-white bg-blue-500 rounded-full transition-all duration-200 ease-in-out hover:bg-blue-600 cursor-pointer"
                      >
                        {permission}
                      </span>
                    ))
                  ) : (
                    <span className="px-4 py-1 text-sm font-medium text-white bg-gray-400 rounded-full">
                      No Permissions
                    </span>
                  )}
                </div>
              </div>
            </div>
          ))
        ) : (
          <p className="text-center text-gray-600 col-span-full">
            No users found
          </p>
        )}
      </div>

    </div>
  );
}

export default UserLists;

 


  const indexOfLastUser = currentPage * usersPerPage; // Current page ka last user index
  const indexOfFirstUser = indexOfLastUser - usersPerPage; // Current page ka first user index
  const currentUsers = filteredUsers.slice(indexOfFirstUser, indexOfLastUser); // Current page ke users
  const paginate = (pageNumber) => setCurrentPage(pageNumber); // Page ko update karega

 

      <Pagination
  totalItems={filteredUsers.length} // Total items ko pass karein
  itemsPerPage={usersPerPage} // Har page par kitni items dikhani hain
  currentPage={currentPage} // Current page number
  paginate={paginate} // Paginate function ko pass karein
/>
 

      {/* <Pagination
        totalItems={users.length}
        itemsPerPage={usersPerPage}
        currentPage={currentPage}
        paginate={paginate}
      /> */}
 
export default function Pagination({ totalItems, itemsPerPage, currentPage, paginate }) {
  const totalPages = Math.ceil(totalItems / itemsPerPage);

  return (
    <div className="flex justify-center items-center mt-6 space-x-4">
      <button
        onClick={() => paginate(currentPage - 1)}
        disabled={currentPage === 1}
        className="px-4 py-2 bg-indigo-600 text-white rounded-md disabled:bg-gray-400"
      >
        Previous
      </button>
      <span className="text-lg font-medium">
        Page {currentPage} of {totalPages}
      </span>
      <button
        onClick={() => paginate(currentPage + 1)}
        disabled={currentPage === totalPages}
        className="px-4 py-2 bg-indigo-600 text-white rounded-md disabled:bg-gray-400"
      >
        Next
      </button>
    </div>
  );
}
 

      {/* <Pagination
        totalItems={users.length}
        itemsPerPage={usersPerPage}
        currentPage={currentPage}
        paginate={paginate}
      /> */}
 


  const paginate = (pageNumber) => setCurrentPage(pageNumber);
 

  const indexOfLastUser = currentPage * usersPerPage;
  const indexOfFirstUser = indexOfLastUser - usersPerPage;
 

  const [currentPage, setCurrentPage] = useState(1);
  const usersPerPage = 6;
 
import React, { useEffect, useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import {
  fetchAllUsersAsync,
  selectAllUserLists,
} from "../UsersLists/components/userListsSlice"; // Import your slice actions and selector
import Pagination from "../../Pages/Pagination";

function UserLists() {
  const dispatch = useDispatch();
  const users = useSelector(selectAllUserLists); // Get users list from Redux state
  const status = useSelector((state) => state.userLists.status); // To handle loading state
  const error = useSelector((state) => state.userLists.error); // To handle error state
  const [currentPage, setCurrentPage] = useState(1);
  const usersPerPage = 6;
  const [searchQuery, setSearchQuery] = useState(""); // State for search input
  const [filteredUsers, setFilteredUsers] = useState(users); // State for filtered users list

  // Fetch users on component mount
  useEffect(() => {
    if (status === "idle") {
      dispatch(fetchAllUsersAsync()); // Dispatch the async thunk to fetch users
    }
  }, [dispatch, status]);

  // Filter users based on search query
  useEffect(() => {
    if (searchQuery === "") {
      setFilteredUsers(users); // If no search query, show all users
    } else {
      setFilteredUsers(
        users.filter((user) =>
          user.name.toLowerCase().includes(searchQuery.toLowerCase())
        )
      ); // Filter users by name
    }
  }, [searchQuery, users]);

  const indexOfLastUser = currentPage * usersPerPage;
  const indexOfFirstUser = indexOfLastUser - usersPerPage;
  

  const paginate = (pageNumber) => setCurrentPage(pageNumber);
  return (
    <div className="p-8 min-h-screen">
      <h1 className="text-4xl font-bold mb-8 text-center text-gray-800">
        Employees
      </h1>

      {/* Search Bar */}
      <div className="mb-6 max-w-md mx-auto">
        <input
          type="text"
          placeholder="Search by name..."
          value={searchQuery}
          onChange={(e) => setSearchQuery(e.target.value)}
          className="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 text-lg"
        />
      </div>

      {/* Display the user list */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 p-8 mx-auto max-w-6xl">
        {filteredUsers.length > 0 ? (
          filteredUsers.map((user) => (
            <div
              key={user.id}
              className="relative bg-white rounded-xl p-6 border border-gray-200 shadow-md hover:shadow-lg transition-all duration-300 ease-in-out transform hover:scale-105"
              style={{
                borderImage: "linear-gradient(to right, #6EE7B7, #3B82F6) 1", // Gradient border effect
              }}
            >
              {/* Status Badge */}
              <div
                className={`absolute top-4 right-4 px-4 py-1 text-xs font-medium uppercase rounded-full ${
                  user.status === "active"
                    ? "bg-green-200 text-green-800 shadow-md"
                    : "bg-red-200 text-red-800 shadow-md"
                }`}
              >
                {user.status === "active" ? "Active" : "Inactive"}
              </div>

              {/* Avatar and Name */}
              <div className="flex items-center gap-4 mb-6">
                <div className="w-16 h-16 flex items-center justify-center rounded-full bg-gradient-to-r from-indigo-500 to-purple-600 text-white font-semibold text-2xl shadow-md">
                  {user.name[0].toUpperCase()}
                </div>
                <h2 className="text-2xl font-semibold text-gray-800">{user.name}</h2>
              </div>

              {/* Details */}
              <div className="text-gray-600 text-sm space-y-2">
                <p className="flex items-center gap-2">
                  <span className="material-icons text-gray-500">badge</span>
                  {user.id}
                </p>
                <p className="flex items-center gap-2">
                  <span className="material-icons text-gray-500">email</span>
                  {user.email}
                </p>
                <p className="flex items-center gap-2">
                  <span className="material-icons text-gray-500">person</span>
                  {user.role}
                </p>
              </div>

              {/* Permissions */}
              <div className="mt-4">
                <h3 className="text-sm font-semibold text-gray-700 mb-2">Permissions</h3>
                <div className="flex flex-wrap gap-3">
                  {user.permissions && user.permissions.length > 0 ? (
                    user.permissions.map((permission, index) => (
                      <span
                        key={index}
                        className="px-4 py-1 text-sm font-medium text-white bg-blue-500 rounded-full transition-all duration-200 ease-in-out hover:bg-blue-600 cursor-pointer"
                      >
                        {permission}
                      </span>
                    ))
                  ) : (
                    <span className="px-4 py-1 text-sm font-medium text-white bg-gray-400 rounded-full">
                      No Permissions
                    </span>
                  )}
                </div>
              </div>
            </div>
          ))
        ) : (
          <p className="text-center text-gray-600 col-span-full">No users found</p>
        )}
      </div>
      <Pagination
        totalItems={users.length}
        itemsPerPage={usersPerPage}
        currentPage={currentPage}
        paginate={paginate}
      />
    </div>
  );
}

export default UserLists;

 

  const currentUsers = users.slice(indexOfFirstUser, indexOfLastUser);
 
import React, { useState, useEffect } from "react";
import { useDispatch, useSelector } from "react-redux";
import {
  fetchAllUsersAsync,
  selectAllUserLists,
} from "../UsersLists/components/userListsSlice";
 
import React, { useState } from "react";

function Pagination() {
  const [currentPage, setCurrentPage] = useState(1);
  const usersPerPage = 6; // Number of items per page
  const totalUsers = users.length; // Total users from your data

  const paginate = (pageNumber) => {
    setCurrentPage(pageNumber);
  };
  

  return <div></div>;
}

export default Pagination;

 
// userLists.js
import React, { useEffect } from "react";
import { useDispatch, useSelector } from "react-redux";
import {
  fetchAllUsersAsync,
  selectAllUserLists,
} from "../UsersLists/components/userListsSlice"; // Import your slice actions and selector

function UserLists() {
  const dispatch = useDispatch();
  const users = useSelector(selectAllUserLists); // Get users list from Redux state
  const status = useSelector((state) => state.userLists.status); // To handle loading state
  const error = useSelector((state) => state.userLists.error); // To handle error state

  // Fetch users on component mount
  useEffect(() => {
    if (status === "idle") {
      dispatch(fetchAllUsersAsync()); // Dispatch the async thunk to fetch users
    }
  }, [dispatch, status]);

  return (
    <div className="p-8 min-h-screen">
      <h1 className="text-4xl font-bold mb-8 text-center text-gray-800">
        Employees
      </h1>

      {/* Display the user list */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 p-8 mx-auto max-w-6xl">
        {users.map((user) => (
          <div
            key={user.id}
            className="relative bg-white rounded-xl p-6 border border-gray-200 shadow-md hover:shadow-lg transition-all duration-300 ease-in-out transform hover:scale-105"
            style={{
              borderImage: "linear-gradient(to right, #6EE7B7, #3B82F6) 1", // Gradient border effect
            }}
          >
            {/* Status Badge */}
            <div
              className={`absolute top-4 right-4 px-4 py-1 text-xs font-medium uppercase rounded-full ${
                user.status === "active"
                  ? "bg-green-200 text-green-800 shadow-md"
                  : "bg-red-200 text-red-800 shadow-md"
              }`}
            >
              {user.status === "active" ? "Active" : "Inactive"}
            </div>

            {/* Avatar and Name */}
            <div className="flex items-center gap-4 mb-6">
              <div className="w-16 h-16 flex items-center justify-center rounded-full bg-gradient-to-r from-indigo-500 to-purple-600 text-white font-semibold text-2xl shadow-md">
                {user.name[0].toUpperCase()}
              </div>
              <h2 className="text-2xl font-semibold text-gray-800">
                {user.name}
              </h2>
            </div>

            {/* Details */}
            <div className="text-gray-600 text-sm space-y-2">
            <p className="flex items-center gap-2">
                <span className="material-icons text-gray-500">Id:</span>
                {user.id}
              </p>
              <p className="flex items-center gap-2">
                <span className="material-icons text-gray-500">Id:</span>
                {user.name}
              </p>
              <p className="flex items-center gap-2">
                <span className="material-icons text-gray-500">Email:</span>
                {user.email}
              </p>
              <p className="flex items-center gap-2">
                <span className="material-icons text-gray-500">Role:</span>
                {user.role}
              </p>
            </div>

            {/* Permissions */}
            <div className="mt-4">
              <h3 className="text-sm font-semibold text-gray-700 mb-2">
                Permissions
              </h3>
              <div className="flex flex-wrap gap-3">
                {user.permissions && user.permissions.length > 0 ? (
                  user.permissions.map((permission, index) => (
                    <span
                      key={index}
                      className="px-4 py-1 text-sm font-medium text-white bg-blue-500 rounded-full transition-all duration-200 ease-in-out hover:bg-blue-600 cursor-pointer"
                    >
                      {permission}
                    </span>
                  ))
                ) : (
                  <span className="px-4 py-1 text-sm font-medium text-white bg-gray-400 rounded-full">
                    No Permissions
                  </span>
                )}
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
}

export default UserLists;

 
../../../public/download.png
 

import avtar from "../../../public/download.png"
 
https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80
 
<h2>Logout</h2>
 
  <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 p-4 mx-auto max-w-5xl">
      {users.map((user) => (
        <div
          key={user.id}
          className="relative bg-white rounded-lg p-6 border border-gray-200 shadow-sm hover:shadow-lg transition-shadow duration-300"
          style={{
            borderImage: "linear-gradient(to right, #6EE7B7, #3B82F6) 1", // Gradient border effect
          }}
        >
          {/* Status Badge */}
          <div
            className={`absolute top-3 right-3 px-2 py-1 text-xs font-medium uppercase rounded-md ${
              user.status === "active"
                ? "bg-green-100 text-green-600"
                : "bg-red-100 text-red-600"
            }`}
          >
            {user.status === "active" ? "Active" : "Inactive"}
          </div>
  
          {/* Avatar and Name */}
          <div className="flex items-center gap-4">
            <div className="w-12 h-12 flex items-center justify-center rounded-full bg-purple-200 text-white font-bold text-lg">
              {user.name[0].toUpperCase()}
            </div>
            <h2 className="text-lg font-semibold text-gray-800">{user.name}</h2>
          </div>
  
          {/* Details */}
          <div className="mt-4 text-gray-600 text-sm">
            <p className="flex items-center gap-2">
              <span className="material-icons text-gray-500">badge</span>
              {user.id}
            </p>
            <p className="flex items-center gap-2 mt-2">
              <span className="material-icons text-gray-500">email</span>
              {user.email}
            </p>
            <p className="flex items-center gap-2 mt-2">
              <span className="material-icons text-gray-500">person</span>
              {user.role}
            </p>
          </div>
  
          {/* Permissions */}
          <div className="mt-4">
            <h3 className="text-sm font-semibold text-gray-700">Permissions</h3>
            <div className="flex flex-wrap gap-2 mt-2">
              {/* Display permissions as chips */}
              {user.permissions && user.permissions.length > 0 ? (
                user.permissions.map((permission, index) => (
                  <span
                    key={index}
                    className="px-3 py-1 text-sm font-medium text-white bg-blue-500 rounded-full"
                  >
                    {permission}
                  </span>
                ))
              ) : (
                <span className="px-3 py-1 text-sm font-medium text-white bg-gray-400 rounded-full">
                  No Permissions
                </span>
              )}
            </div>
          </div>
        </div>
      ))}
    </div>
 

      <form
        onSubmit={handleSubmit}
        className="bg-white shadow-md rounded-lg p-6 space-y-4"
      >
        <div className="flex flex-col space-y-2">
          <input
            type="text"
            placeholder="Name"
            value={currentUser.name}
            onChange={(e) =>
              setCurrentUser({ ...currentUser, name: e.target.value })
            }
            className="px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500"
          />
          <input
            type="email"
            placeholder="Email"
            value={currentUser.email}
            onChange={(e) =>
              setCurrentUser({ ...currentUser, email: e.target.value })
            }
            className="px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500"
          />
          <select
            value={currentUser.role}
            onChange={(e) =>
              setCurrentUser({ ...currentUser, role: e.target.value })
            }
            className="px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500"
          >
            <option value="">Select Role</option>
            <option value="user">User</option>
            <option value="admin">Admin</option>
          </select>

          <select
            value={currentUser.status}
            onChange={(e) =>
              setCurrentUser({ ...currentUser, status: e.target.value })
            }
            className="px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500"
          >
            <option value="active">Active</option>
            <option value="inactive">Inactive</option>
          </select>

          {/* Permissions Selection */}
          <div>
            <h3 className="text-lg font-semibold">Permissions</h3>
            <div className="flex flex-col space-y-2">
              <label>
                <input
                  type="checkbox"
                  value="view"
                  checked={currentUser.permissions.includes("view")}
                  onChange={handlePermissionChange}
                  className="mr-2"
                />
                View
              </label>
            </div>
          </div>
        </div>

        <button
          type="submit"
          className={`w-full py-2 rounded-md ${
            currentUser.name &&
            currentUser.email &&
            currentUser.role &&
            currentUser.status &&
            currentUser.permissions.length > 0
              ? "bg-indigo-600 text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500"
              : "bg-gray-300 text-gray-500 cursor-not-allowed"
          }`}
          disabled={
            !(
              currentUser.name &&
              currentUser.email &&
              currentUser.role &&
              currentUser.status &&
              currentUser.permissions.length > 0
            )
          }
        >
          {formMode === "add" ? "Add User" : "Update User"}
        </button>
      </form>
 
 <button
          type="submit"
          className="w-full py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500"
        >
          {formMode === "add" ? "Add User" : "Update User"}
        </button>
 
<label>
                <input
                  type="checkbox"
                  value="edit"
                  checked={currentUser.permissions.includes("edit")}
                  onChange={handlePermissionChange}
                  className="mr-2"
                />
                Edit
              </label>
              <label>
                <input
                  type="checkbox"
                  value="delete"
                  checked={currentUser.permissions.includes("delete")}
                  onChange={handlePermissionChange}
                  className="mr-2"
                />
                Delete
              </label>
 
,
        "edit"
 
,
        "delete"
 
  "employe": [
    {
      "id": "9093",
      "name": "jonh",
      "email": "jon@gmail.com",
      "role": "user",
      "status": "active",
      "permissions": [
        "view",
        "edit"
      ]
    },
    {
      "id": "b7ab",
      "name": "muneeb",
      "email": "muneeba@gmail.com",
      "role": "user",
      "status": "inactive",
      "permissions": [
        "view"
      ]
    },
    {
      "id": "57cb",
      "name": "nazi",
      "email": "nazi@gmail.com",
      "role": "user",
      "status": "active",
      "permissions": [
        "edit",
        "delete"
      ]
    },
    {
      "id": "716e",
      "name": "sufiya",
      "email": "sufiya@gmail.com",
      "role": "user",
      "status": "active",
      "permissions": [
        "view"
      ]
    }
  ]
 
 <div className="p-8 min-h-screen">
      <h1 className="text-4xl font-bold mb-8 text-center text-gray-800">
        Employees
      </h1>

      {/* Display the user list */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 p-4 mx-auto max-w-5xl ">
        {users.map((user) => (
          <div
            key={user.id}
            className="relative bg-white rounded-lg p-4 border border-gray-200 shadow-sm hover:shadow-lg transition-shadow duration-300"
            style={{
              borderImage: "linear-gradient(to right, #6EE7B7, #3B82F6) 1", // Gradient border effect
            }}
          >
            {/* Status badge */}
            {/* <div
              className={` absolute top-3 right-3 px-2 py-1 text-xs font-medium uppercase rounded-md ${
                user.isActive
                  ? "bg-green-100 text-green-600"
                  : "bg-red-100 text-red-600"
              }`}
            >
              {user.isActive ? "Active" : "Inactive"}
            </div> */}
            

            {/* Avatar and name */}
            <div className="flex items-center gap-4">
              <div className="w-12 h-12 flex items-center justify-center rounded-full bg-purple-200 text-white font-bold text-lg">
                {user.name[0].toUpperCase()}
              </div>
              <h2 className="text-lg font-semibold text-gray-800">
                {user.name}
              </h2>
            </div>

            {/* Details */}
            <div className="mt-4 text-gray-600 text-sm">
              <p className="flex items-center gap-2">
                <span className="material-icons text-gray-500">badge</span>
                {user.id}
              </p>
              <p className="flex items-center gap-2 mt-2">
                <span className="material-icons text-gray-500">email</span>
                {user.email}
              </p>
              <p className="flex items-center gap-2 mt-2">
                <span className="material-icons text-gray-500">person</span>
                {user.role}
              </p>
            </div>
          </div>
        ))}
      </div>
    </div>
 

            <div
              className={` absolute top-3 right-3 px-2 py-1 text-xs font-medium uppercase rounded-md ${
                user.isActive
                  ? "bg-green-100 text-green-600"
                  : "bg-red-100 text-red-600"
              }`}
            >
              {user.isActive ? "Active" : "Inactive"}
            </div>
 
 <div className="p-8 min-h-screen">
      <h1 className="text-4xl font-bold mb-8 text-center text-gray-800">
        Employees
      </h1>

      {/* Display the user list */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 p-4 mx-auto max-w-5xl ">
        {users.map((user) => (
          <div
            key={user.id}
            className="relative bg-white rounded-lg p-4 border border-gray-200 shadow-sm hover:shadow-lg transition-shadow duration-300"
            style={{
              borderImage: "linear-gradient(to right, #6EE7B7, #3B82F6) 1", // Gradient border effect
            }}
          >
            {/* Status badge */}
            <div
              className={`absolute top-3 right-3 px-2 py-1 text-xs font-medium uppercase rounded-md ${
                user.status === "active"
                  ? "bg-green-100 text-green-600"
                  : "bg-red-100 text-red-600"
              }`}
            >
              {user.status === "active" ? "Active" : "Inactive"}
            </div>

            {/* Avatar and name */}
            <div className="flex items-center gap-4">
              <div className="w-12 h-12 flex items-center justify-center rounded-full bg-purple-200 text-white font-bold text-lg">
                {user.name[0].toUpperCase()}
              </div>
              <h2 className="text-lg font-semibold text-gray-800">
                {user.name}
              </h2>
            </div>

            {/* Details */}
            <div className="mt-4 text-gray-600 text-sm">
              <p className="flex items-center gap-2">
                <span className="material-icons text-gray-500">badge</span>
                {user.id}
              </p>
              <p className="flex items-center gap-2 mt-2">
                <span className="material-icons text-gray-500">email</span>
                {user.email}
              </p>
              <p className="flex items-center gap-2 mt-2">
                <span className="material-icons text-gray-500">person</span>
                {user.role}
              </p>
            </div>
          </div>
        ))}
      </div>
    </div>
 

join
 
 {users.map((user) => (
              <tr key={user.id} className="border-b hover:bg-gray-50">
                <td className="px-6 py-4 text-sm text-gray-700">{user.name}</td>
                <td className="px-6 py-4 text-sm text-gray-700">{user.email}</td>
                <td className="px-6 py-4 text-sm text-gray-700">{user.role}</td>
                <td className="px-6 py-4 text-sm text-gray-700">
                  {user.status === "active" ? (
                    <span className="text-green-500">Active</span>
                  ) : (
                    <span className="text-red-500">Inactive</span>
                  )}
                </td>
                <td className="px-6 py-4 text-sm text-gray-700">
                  {user.permissions.join(", ")}
                </td>
                <td className="px-6 py-4 text-sm">
                  <div className="flex flex-col sm:flex-row sm:space-x-2">
                    <button
                      onClick={() => handleEdit(user)}
                      className="bg-yellow-500 text-white px-4 py-2 rounded-md hover:bg-yellow-600 focus:outline-none focus:ring-2 focus:ring-yellow-500 w-full sm:w-auto mb-2 sm:mb-0"
                    >
                      Edit
                    </button>
                    <button
                      onClick={() => handleDelete(user.id)}
                      className="bg-red-500 text-white px-4 py-2 rounded-md hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 w-full sm:w-auto"
                    >
                      Delete
                    </button>
                  </div>
                </td>
              </tr>
            ))}
 
<td className="px-6 py-4 text-sm text-gray-700">
                  {user.permissions.join(", ")}
                </td>
 
user.permissions.join(", ")
 
"employe": [
    {
      "id": "9093",
      "name": "jonh",
      "email": "jon@gmail.com",
      "role": "user",
      "status": "active"
    },
    {
      "id": "b7ab",
      "name": "muneeb",
      "email": "muneeba@gmail.com",
      "role": "user",
      "status": "inactive"
    },
    {
      "id": "57cb",
      "name": "nazi",
      "email": "nazi@gmail.com",
      "role": "user",
      "status": "active"
    }
  ]
 
"employe": [
    {
      "id": "9093",
      "name": "jonh",
      "email": "jon@gmail.com",
      "role": "user",
      "status": "active"
    },
    {
      "id": "b7ab",
      "name": "muneeb",
      "email": "muneeba@gmail.com",
      "role": "user",
      "status": "inactive"
    },
    {
      "id": "57cb",
      "name": "nazi",
      "email": "nazi@gmail.com",
      "role": "user",
      "status": "active"
    }
  ]
 
import React, { useEffect, useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import { getUsers, addUser, editUser, removeUser } from "../userSlice";

function UserManagement() {
  const dispatch = useDispatch();
  const { users, status, error } = useSelector((state) => state.user);

  const [formMode, setFormMode] = useState("add");
  const [currentUser, setCurrentUser] = useState({
    name: "",
    email: "",
    role: "",
    status: "active", // Default status
  });

  // Fetch users on component mount
  useEffect(() => {
    dispatch(getUsers());
  }, [dispatch]);

  const handleSubmit = (e) => {
    e.preventDefault();

    if (formMode === "add") {
      dispatch(addUser(currentUser));
    } else {
      dispatch(editUser({ id: currentUser.id, user: currentUser }));
    }

    setCurrentUser({ name: "", email: "", role: "", status: "active" });
    setFormMode("add");
  };

  const handleEdit = (user) => {
    setFormMode("edit");
    setCurrentUser(user);
  };

  const handleDelete = (id) => {
    dispatch(removeUser(id));
  };

  return (
    <div className="max-w-4xl mx-auto p-6">
      <h2 className="text-3xl font-semibold text-center mb-6">
        User Management
      </h2>

      <form
        onSubmit={handleSubmit}
        className="bg-white shadow-md rounded-lg p-6 space-y-4"
      >
        <div className="flex flex-col space-y-2">
          <input
            type="text"
            placeholder="Name"
            value={currentUser.name}
            onChange={(e) =>
              setCurrentUser({ ...currentUser, name: e.target.value })
            }
            className="px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500"
          />
          <input
            type="email"
            placeholder="Email"
            value={currentUser.email}
            onChange={(e) =>
              setCurrentUser({ ...currentUser, email: e.target.value })
            }
            className="px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500"
          />
          <select
            value={currentUser.role}
            onChange={(e) =>
              setCurrentUser({ ...currentUser, role: e.target.value })
            }
            className="px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500"
          >
            <option value="">Select Role</option>
            <option value="user">User</option>
            <option value="admin">Admin</option>
          </select>

          {/* Add status field */}
          <select
            value={currentUser.status}
            onChange={(e) =>
              setCurrentUser({ ...currentUser, status: e.target.value })
            }
            className="px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500"
          >
            <option value="active">Active</option>
            <option value="inactive">Inactive</option>
          </select>
        </div>
        <button
          type="submit"
          className="w-full py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500"
        >
          {formMode === "add" ? "Add User" : "Update User"}
        </button>
      </form>

      {status === "loading" && (
        <p className="text-center text-gray-500 mt-4">Loading...</p>
      )}
      {status === "failed" && (
        <p className="text-center text-red-500 mt-4">Error: {error}</p>
      )}

      <div className="overflow-x-auto mt-6">
        <table className="w-full table-auto border-collapse border border-gray-200">
          <thead className="bg-gray-100">
            <tr>
              <th className="px-6 py-3 text-left text-sm font-semibold text-gray-700">
                Name
              </th>
              <th className="px-6 py-3 text-left text-sm font-semibold text-gray-700">
                Email
              </th>
              <th className="px-6 py-3 text-left text-sm font-semibold text-gray-700">
                Role
              </th>
              <th className="px-6 py-3 text-left text-sm font-semibold text-gray-700">
                Status
              </th>
              <th className="px-6 py-3 text-left text-sm font-semibold text-gray-700">
                Actions
              </th>
            </tr>
          </thead>
          <tbody>
            {users.map((user) => (
              <tr key={user.id} className="border-b hover:bg-gray-50">
                <td className="px-6 py-4 text-sm text-gray-700">{user.name}</td>
                <td className="px-6 py-4 text-sm text-gray-700">{user.email}</td>
                <td className="px-6 py-4 text-sm text-gray-700">{user.role}</td>
                <td className="px-6 py-4 text-sm text-gray-700">
                  {user.status === "active" ? (
                    <span className="text-green-500">Active</span>
                  ) : (
                    <span className="text-red-500">Inactive</span>
                  )}
                </td>
                <td className="px-6 py-4 text-sm">
                  <div className="flex flex-col sm:flex-row sm:space-x-2">
                    <button
                      onClick={() => handleEdit(user)}
                      className="bg-yellow-500 text-white px-4 py-2 rounded-md hover:bg-yellow-600 focus:outline-none focus:ring-2 focus:ring-yellow-500 w-full sm:w-auto mb-2 sm:mb-0"
                    >
                      Edit
                    </button>
                    <button
                      onClick={() => handleDelete(user.id)}
                      className="bg-red-500 text-white px-4 py-2 rounded-md hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 w-full sm:w-auto"
                    >
                      Delete
                    </button>
                  </div>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
  );
}

export default UserManagement;

 
import React, { useEffect, useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import { getUsers, addUser, editUser, removeUser } from "../userSlice";
function UserManagement() {
  const dispatch = useDispatch();
  const { users, status, error } = useSelector((state) => state.user);

  const [formMode, setFormMode] = useState("add");
  const [currentUser, setCurrentUser] = useState({
    name: "",
    email: "",
    role: "",
  });

  // Fetch users on component mount
  useEffect(() => {
    dispatch(getUsers());
  }, [dispatch]);

  const handleSubmit = (e) => {
    e.preventDefault();

    if (formMode === "add") {
      dispatch(addUser(currentUser));
    } else {
      dispatch(editUser({ id: currentUser.id, user: currentUser }));
    }

    setCurrentUser({ name: "", email: "", role: "" });
    setFormMode("add");
  };

  const handleEdit = (user) => {
    setFormMode("edit");
    setCurrentUser(user);
  };

  const handleDelete = (id) => {
    dispatch(removeUser(id));
  };

  return (
    <div className="max-w-4xl mx-auto p-6">
      <h2 className="text-3xl font-semibold text-center mb-6">
        User Management
      </h2>

      <form
        onSubmit={handleSubmit}
        className="bg-white shadow-md rounded-lg p-6 space-y-4"
      >
        <div className="flex flex-col space-y-2">
          <input
            type="text"
            placeholder="Name"
            value={currentUser.name}
            onChange={(e) =>
              setCurrentUser({ ...currentUser, name: e.target.value })
            }
            className="px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500"
          />
          <input
            type="email"
            placeholder="Email"
            value={currentUser.email}
            onChange={(e) =>
              setCurrentUser({ ...currentUser, email: e.target.value })
            }
            className="px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500"
          />
          <select
            value={currentUser.role}
            onChange={(e) =>
              setCurrentUser({ ...currentUser, role: e.target.value })
            }
            className="px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500"
          >
            <option value="">Select Role</option>
            <option value="user">User</option>
            <option value="admin">Admin</option>
          </select>
        </div>
        <button
          type="submit"
          className="w-full py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500"
        >
          {formMode === "add" ? "Add User" : "Update User"}
        </button>
      </form>

      {status === "loading" && (
        <p className="text-center text-gray-500 mt-4">Loading...</p>
      )}
      {status === "failed" && (
        <p className="text-center text-red-500 mt-4">Error: {error}</p>
      )}

      <div className="overflow-x-auto mt-6">
    <table className="w-full table-auto border-collapse border border-gray-200">
      <thead className="bg-gray-100">
        <tr>
          <th className="px-6 py-3 text-left text-sm font-semibold text-gray-700">
            Name
          </th>
          <th className="px-6 py-3 text-left text-sm font-semibold text-gray-700">
            Email
          </th>
          <th className="px-6 py-3 text-left text-sm font-semibold text-gray-700">
            Role
          </th>
          <th className="px-6 py-3 text-left text-sm font-semibold text-gray-700">
            Actions
          </th>
        </tr>
      </thead>
      <tbody>
        {users.map((user) => (
          <tr key={user.id} className="border-b hover:bg-gray-50">
            <td className="px-6 py-4 text-sm text-gray-700">{user.name}</td>
            <td className="px-6 py-4 text-sm text-gray-700">{user.email}</td>
            <td className="px-6 py-4 text-sm text-gray-700">{user.role}</td>
            <td className="px-6 py-4 text-sm">
              <div className="flex flex-col sm:flex-row sm:space-x-2">
                <button
                  onClick={() => handleEdit(user)}
                  className="bg-yellow-500 text-white px-4 py-2 rounded-md hover:bg-yellow-600 focus:outline-none focus:ring-2 focus:ring-yellow-500 w-full sm:w-auto mb-2 sm:mb-0"
                >
                  Edit
                </button>
                <button
                  onClick={() => handleDelete(user.id)}
                  className="bg-red-500 text-white px-4 py-2 rounded-md hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 w-full sm:w-auto"
                >
                  Delete
                </button>
              </div>
            </td>
          </tr>
        ))}
      </tbody>
    </table>
  </div>
    </div>
  );
}

export default UserManagement;

 

              borderWidth: "5px", // Border width to make the border visible
    borderRadius: "15px", // Apply rounded corners
 
<div
            key={user.id}
            className=" relative bg-white rounded-lg p-4 border border-gray-200 shadow-sm hover:shadow-lg transition-shadow duration-300"
            style={{
              borderImage: "linear-gradient(to right, #6EE7B7, #3B82F6) 1 rounded-lg",
            }}
          >
 

              borderRadius: "15px"
 

    backgroundOrigin: "border-box",  // Ensures gradient is applied only to the border area
 
<div
            key={user.id}
            className=" relative bg-white rounded-lg p-4 border border-gray-200 shadow-sm hover:shadow-lg transition-shadow duration-300"
            style={{
              borderImage: "linear-gradient(to right, #6EE7B7, #3B82F6) 1",
              borderRadius: "15px"
            }}
          >
 
<div
            key={user.id}
            className=" relative bg-white rounded-lg p-4 border border-gray-200 shadow-sm hover:shadow-lg transition-shadow duration-300"
            style={{
              borderImage: "linear-gradient(to right, #6EE7B7, #3B82F6) 1",
              borderRadius: "15px"
            }}
          >
 

    background: "linear-gradient(to right, #6EE7B7, #3B82F6)",  // Gradient background
 
<div
            key={user.id}
            className=" relative bg-white rounded-lg p-4 border border-gray-200 shadow-sm hover:shadow-lg transition-shadow duration-300"
            style={{
              borderImage: "linear-gradient(to right, #6EE7B7, #3B82F6) 1",
            }}
          >
 
<div
            key={user.id}
            className=" relative bg-white rounded-lg p-4 border border-gray-200 shadow-sm hover:shadow-lg transition-shadow duration-300"
            style={{
              borderImage: "linear-gradient(to right, #6EE7B7, #3B82F6) 1",
            }}
          >
 
 style={{
              borderImage: "linear-gradient(to right, #6EE7B7, #3B82F6) 1",
            }}
 
borderRadius: "15px"
 
 relative bg-white rounded-lg p-4 border border-gray-200 shadow-sm hover:shadow-lg transition-shadow duration-300
 
borderRadius:"20px" // Gradient border effect
 
grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 p-4
 

  @media screen and (max-width: 1024px) {
    .content {
      background: transparent;
    }
  }
 
White background for content
 

  
  /* Main wrapper with background */
  .background-wrapper {
    position: relative;
    background: #f5f5fa; /* Light purple background or customize as needed */
    min-height: 100vh; /* Full viewport height */
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden; /* Prevent extra scroll from designs */
    margin: 0; /* Remove space on the left and right */
    padding: 0; /* Ensure no padding */
  }
  
  /* Left-top curve design */
  .curve-design {
    position: absolute;
    top: -50px;
    left: -50px;
    width: 200px;
    height: 200px;
    background: #9e77ed; /* Purple shade for curve */
    /* border-radius: 50%;  */
    z-index: 1;
  }
  
  /* Right-bottom background design */
  .background-wrapper::after {
    content: "";
    position: absolute;
    bottom: -50px;
    right: -50px;
    width: 200px;
    height: 200px;
    background: #9e77ed; /* Lighter purple for bottom */
    /* border-radius: 50%; */
    z-index: 1;
  }
  
  /* Content container */
  .content {
    position: relative;
    z-index: 2; /* Ensure content is above the designs */
    width: 95%;
    max-width: 1200px; /* Restrict maximum width */
    /* padding: 20px;  */
    background: #ffffff; /* White background for content */
    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1); /* Subtle shadow */
    border-radius: 10px; /* Rounded corners for content */
    margin-top: 30px;
    margin-bottom: 30px;
  }
 
bg-white
 
<h1 className="text-4xl font-bold mb-8 text-center text-gray-800">
        User List
      </h1>
 
<img
                  alt="Your Company"
                  src="https://tailwindui.com/plus/img/logos/mark.svg?color=indigo&shade=500"
                  className="h-8 w-auto"
                />
 
{navigation.map((item) =>
            item[user.role] ? (
              <Link
                key={item.name}
                to={item.link}
                className={classNames(
                  item.current
                    ? "bg-gray-900 text-black-500"
                    : "text-black hover:bg-green-700 hover:text-white",
                  "rounded-md px-3 py-2 text-sm font-medium"
                )}
                aria-current={item.current ? "page" : undefined}
              >
                {item.name}
              </Link>
            ) : null
          )}
 
import {
  Disclosure,
  DisclosureButton,
  DisclosurePanel,
  Menu,
  MenuButton,
  MenuItem,
  MenuItems,
} from "@headlessui/react";
import { Bars3Icon, BellIcon, XMarkIcon } from "@heroicons/react/24/outline";
import { Link } from "react-router-dom";
import { selectLoggedInUser } from "../auth/authSlice";
import { useSelector } from "react-redux";

const navigation = [
  // { name: "Dashboard", href: "#", current: true },
  // { name: "Team", href: "#", current: false },
  // { name: "Projects", href: "#", current: false },
  { name: "Admin", link: "/admin", admin: true },
];

const userNavigation = [
  // { name: "Your Profile", link: "/profile" },
  // { name: "My Orders", link: "/orders" },
  { name: "Sign out", link: "/logout" },
];

function classNames(...classes) {
  return classes.filter(Boolean).join(" ");
}

export default function Navbar() {
  const user = useSelector(selectLoggedInUser);
  return (
    <Disclosure
      as="nav"
      className="bg-white-800 shadow-md shadow-gray-300 drop-shadow-lg"
    >
      <div className="mx-auto max-w-7xl px-2 sm:px-6 lg:px-8">
        <div className="relative flex h-16 items-center justify-between">
          <div className="absolute inset-y-0 left-0 flex items-center sm:hidden">
            {/* Mobile menu button*/}
            <DisclosureButton className="group relative inline-flex items-center justify-center rounded-md p-2 text-gray-400 hover:bg-gray-700 hover:text-white focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white">
              <span className="absolute -inset-0.5" />
              <span className="sr-only">Open main menu</span>
              <Bars3Icon
                aria-hidden="true"
                className="block size-6 group-data-[open]:hidden"
              />
              <XMarkIcon
                aria-hidden="true"
                className="hidden size-6 group-data-[open]:block"
              />
            </DisclosureButton>
          </div>
          <div className="flex flex-1 items-center justify-center sm:items-stretch sm:justify-start">
            <div className="flex shrink-0 items-center">
              <Link to="/">
                <img
                  alt="Your Company"
                  src="https://tailwindui.com/plus/img/logos/mark.svg?color=indigo&shade=500"
                  className="h-8 w-auto"
                />
              </Link>
            </div>
          </div>
          <div className="absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0">
            <div className="hidden sm:mr-2 sm:block">
              <div className="ml-10 flex items-baseline space-x-4">
                {navigation.map((item) =>
                  item[user.role] ? (
                    <Link
                      key={item.name}
                      to={item.link}
                      className={classNames(
                        item.current
                          ? "bg-gray-900 text-black-500"
                          : "text-black hover:bg-green-700 hover:text-white",
                        "rounded-md px-3 py-2 text-sm font-medium"
                      )}
                      aria-current={item.current ? "page" : undefined}
                    >
                      {item.name}
                    </Link>
                  ) : null
                )}
              </div>
            </div>
            {/* <button
              type="button"
              className="relative rounded-full bg-gray-800 p-1 text-gray-400 hover:text-white focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-800"
            >
              <span className="absolute -inset-1.5" />
              <span className="sr-only">View notifications</span>
              <BellIcon aria-hidden="true" className="size-6" />
            </button> */}

            {/* Profile dropdown */}
            <Menu as="div" className="relative ml-3">
              <div>
                <MenuButton className="relative flex rounded-full bg-gray-800 text-sm focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-800">
                  <span className="absolute -inset-1.5" />
                  <span className="sr-only">Open user menu</span>
                  <img
                    alt=""
                    src="https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80"
                    className="size-8 rounded-full"
                  />
                </MenuButton>
              </div>
              <MenuItems
                transition
                className="absolute right-0 z-10 mt-2 w-48 origin-top-right rounded-md bg-white py-1 shadow-lg ring-1 ring-black ring-opacity-5 transition focus:outline-none data-[closed]:scale-95 data-[closed]:transform data-[closed]:opacity-0 data-[enter]:duration-100 data-[leave]:duration-75 data-[enter]:ease-out data-[leave]:ease-in"
              >
                {userNavigation.map((item) => (
                  <MenuItem key={item.name}>
                    {({ focus }) => (
                      <Link
                        to={item.link}
                        href={item.href}
                        className={classNames(
                          focus ? "bg-gray-100" : "",
                          "block px-4 py-2 text-sm text-gray-700"
                        )}
                      >
                        {item.name}
                      </Link>
                    )}
                  </MenuItem>
                ))}
              </MenuItems>
            </Menu>
          </div>
        </div>
      </div>

      <DisclosurePanel className="sm:hidden">
        <div className="space-y-1 px-2 pb-3 pt-2">
          {navigation.map((item) =>
            item[user.role] ? (
              <Link
                key={item.name}
                to={item.link}
                className={classNames(
                  item.current
                    ? "bg-gray-900 text-black-500"
                    : "text-black hover:bg-green-700 hover:text-white",
                  "rounded-md px-3 py-2 text-sm font-medium"
                )}
                aria-current={item.current ? "page" : undefined}
              >
                {item.name}
              </Link>
            ) : null
          )}
        </div>
      </DisclosurePanel>
    </Disclosure>
  );
}

 
        <table className="mt-6 w-full table-auto border-collapse border border-gray-200">
          <thead className="bg-gray-100">
            <tr>
              <th className="px-6 py-3 text-left text-sm font-semibold text-gray-700">
                Name
              </th>
              <th className="px-6 py-3 text-left text-sm font-semibold text-gray-700">
                Email
              </th>
              <th className="px-6 py-3 text-left text-sm font-semibold text-gray-700">
                Role
              </th>
              <th className="px-6 py-3 text-left text-sm font-semibold text-gray-700">
                Actions
              </th>
            </tr>
          </thead>
          <tbody>
            {users.map((user) => (
              <tr key={user.id} className="border-b hover:bg-gray-50">
                <td className="px-6 py-4 text-sm text-gray-700">{user.name}</td>
                <td className="px-6 py-4 text-sm text-gray-700">{user.email}</td>
                <td className="px-6 py-4 text-sm text-gray-700">{user.role}</td>
                <td className="px-6 py-4 text-sm">
                  <button
                    onClick={() => handleEdit(user)}
                    className="bg-yellow-500 text-white px-4 py-2 rounded-md hover:bg-yellow-600 focus:outline-none focus:ring-2 focus:ring-yellow-500"
                  >
                    Edit
                  </button>
                  <button
                    onClick={() => handleDelete(user.id)}
                    className="ml-2 bg-red-500 text-white px-4 py-2 rounded-md hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500"
                  >
                    Delete
                  </button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
 
<div className="max-w-4xl mx-auto p-6">
      <h2 className="text-3xl font-semibold text-center mb-6">
        User Management
      </h2>

      <form
        onSubmit={handleSubmit}
        className="bg-white shadow-md rounded-lg p-6 space-y-4"
      >
        <div className="flex flex-col space-y-2">
          <input
            type="text"
            placeholder="Name"
            value={currentUser.name}
            onChange={(e) =>
              setCurrentUser({ ...currentUser, name: e.target.value })
            }
            className="px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500"
          />
          <input
            type="email"
            placeholder="Email"
            value={currentUser.email}
            onChange={(e) =>
              setCurrentUser({ ...currentUser, email: e.target.value })
            }
            className="px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500"
          />
          <select
            value={currentUser.role}
            onChange={(e) =>
              setCurrentUser({ ...currentUser, role: e.target.value })
            }
            className="px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500"
          >
            <option value="">Select Role</option>
            <option value="user">User</option>
            <option value="admin">Admin</option>
          </select>
        </div>
        <button
          type="submit"
          className="w-full py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500"
        >
          {formMode === "add" ? "Add User" : "Update User"}
        </button>
      </form>

      {status === "loading" && (
        <p className="text-center text-gray-500 mt-4">Loading...</p>
      )}
      {status === "failed" && (
        <p className="text-center text-red-500 mt-4">Error: {error}</p>
      )}

      <table className="mt-6 w-full table-auto border-collapse border border-gray-200">
        <thead className="bg-gray-100">
          <tr>
            <th className="px-6 py-3 text-left text-sm font-semibold text-gray-700">
              Name
            </th>
            <th className="px-6 py-3 text-left text-sm font-semibold text-gray-700">
              Email
            </th>
            <th className="px-6 py-3 text-left text-sm font-semibold text-gray-700">
              Role
            </th>
            <th className="px-6 py-3 text-left text-sm font-semibold text-gray-700">
              Actions
            </th>
          </tr>
        </thead>
        <tbody>
          {users.map((user) => (
            <tr key={user.id} className="border-b hover:bg-gray-50">
              <td className="px-6 py-4 text-sm text-gray-700">{user.name}</td>
              <td className="px-6 py-4 text-sm text-gray-700">{user.email}</td>
              <td className="px-6 py-4 text-sm text-gray-700">{user.role}</td>
              <td className="px-6 py-4 text-sm">
                <button
                  onClick={() => handleEdit(user)}
                  className="bg-yellow-500 text-white px-4 py-2 rounded-md hover:bg-yellow-600 focus:outline-none focus:ring-2 focus:ring-yellow-500"
                >
                  Edit
                </button>
                <button
                  onClick={() => handleDelete(user.id)}
                  className="ml-2 bg-red-500 text-white px-4 py-2 rounded-md hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500"
                >
                  Delete
                </button>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
 
{navigation.map((item) => (
            <DisclosureButton
              key={item.name}
              // as="a"
              href={item.link}
              aria-current={item.current ? "page" : undefined}
              className={classNames(
                item.current
                  ? "bg-gray-900 text-white"
                  : "text-gray-300 hover:bg-gray-700 hover:text-white",
                "block rounded-md px-3 py-2 text-base font-medium"
              )}
            >
              {item.name}
            </DisclosureButton>
          ))}
 
import {
  Disclosure,
  DisclosureButton,
  DisclosurePanel,
  Menu,
  MenuButton,
  MenuItem,
  MenuItems,
} from "@headlessui/react";
import { Bars3Icon, BellIcon, XMarkIcon } from "@heroicons/react/24/outline";
import { Link } from "react-router-dom";
import { selectLoggedInUser } from "../auth/authSlice";
import { useSelector } from "react-redux";

const navigation = [
  // { name: "Dashboard", href: "#", current: true },
  // { name: "Team", href: "#", current: false },
  // { name: "Projects", href: "#", current: false },
  { name: "Admin", link: "/admin", admin: true },
];

const userNavigation = [
  // { name: "Your Profile", link: "/profile" },
  // { name: "My Orders", link: "/orders" },
  { name: "Sign out", link: "/logout" },
];

function classNames(...classes) {
  return classes.filter(Boolean).join(" ");
}

export default function Navbar() {
  const user = useSelector(selectLoggedInUser);
  return (
    <Disclosure as="nav" className="bg-white-800 shadow-md shadow-gray-300 drop-shadow-lg">
      <div className="mx-auto max-w-7xl px-2 sm:px-6 lg:px-8">
        <div className="relative flex h-16 items-center justify-between">
          <div className="absolute inset-y-0 left-0 flex items-center sm:hidden">
            {/* Mobile menu button*/}
            <DisclosureButton className="group relative inline-flex items-center justify-center rounded-md p-2 text-gray-400 hover:bg-gray-700 hover:text-white focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white">
              <span className="absolute -inset-0.5" />
              <span className="sr-only">Open main menu</span>
              <Bars3Icon
                aria-hidden="true"
                className="block size-6 group-data-[open]:hidden"
              />
              <XMarkIcon
                aria-hidden="true"
                className="hidden size-6 group-data-[open]:block"
              />
            </DisclosureButton>
          </div>
          <div className="flex flex-1 items-center justify-center sm:items-stretch sm:justify-start">
            <div className="flex shrink-0 items-center">
              <Link to="/">
                <img
                  alt="Your Company"
                  src="https://tailwindui.com/plus/img/logos/mark.svg?color=indigo&shade=500"
                  className="h-8 w-auto"
                />
              </Link>
            </div>
          </div>
          <div className="absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0">
          <div className="hidden sm:mr-2 sm:block">
              <div className="ml-10 flex items-baseline space-x-4">
                {navigation.map((item) =>
                  item[user.role] ? (
                    <Link
                      key={item.name}
                      to={item.link}
                      className={classNames(
                        item.current
                          ? "bg-gray-900 text-black-500"
                          : "text-black hover:bg-green-700 hover:text-white",
                        "rounded-md px-3 py-2 text-sm font-medium"
                      )}
                      aria-current={item.current ? "page" : undefined}
                    >
                      {item.name}
                    </Link>
                  ) : null
                )}
              </div>
            </div>
            {/* <button
              type="button"
              className="relative rounded-full bg-gray-800 p-1 text-gray-400 hover:text-white focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-800"
            >
              <span className="absolute -inset-1.5" />
              <span className="sr-only">View notifications</span>
              <BellIcon aria-hidden="true" className="size-6" />
            </button> */}

            {/* Profile dropdown */}
            <Menu as="div" className="relative ml-3">
              <div>
                <MenuButton className="relative flex rounded-full bg-gray-800 text-sm focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-800">
                  <span className="absolute -inset-1.5" />
                  <span className="sr-only">Open user menu</span>
                  <img
                    alt=""
                    src="https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80"
                    className="size-8 rounded-full"
                  />
                </MenuButton>
              </div>
              <MenuItems
                transition
                className="absolute right-0 z-10 mt-2 w-48 origin-top-right rounded-md bg-white py-1 shadow-lg ring-1 ring-black ring-opacity-5 transition focus:outline-none data-[closed]:scale-95 data-[closed]:transform data-[closed]:opacity-0 data-[enter]:duration-100 data-[leave]:duration-75 data-[enter]:ease-out data-[leave]:ease-in"
              >
                {userNavigation.map((item) => (
                  <MenuItem key={item.name}>
                    {({ focus }) => (
                      <Link
                        to={item.name}
                        href={item.link}
                        className={classNames(
                          focus ? "bg-gray-100" : "",
                          "block px-4 py-2 text-sm text-gray-700"
                        )}
                      >
                        {item.name}
                      </Link>
                    )}
                  </MenuItem>
                ))}
              </MenuItems>
            </Menu>
          </div>
        </div>
      </div>

      <DisclosurePanel className="sm:hidden">
        <div className="space-y-1 px-2 pb-3 pt-2">
          {navigation.map((item) => (
            <DisclosureButton
              key={item.name}
              as="a"
              href={item.href}
              aria-current={item.current ? "page" : undefined}
              className={classNames(
                item.current
                  ? "bg-gray-900 text-white"
                  : "text-gray-300 hover:bg-gray-700 hover:text-white",
                "block rounded-md px-3 py-2 text-base font-medium"
              )}
            >
              {item.name}
            </DisclosureButton>
          ))}
        </div>
      </DisclosurePanel>
    </Disclosure>
  );
}

 
import {
  Disclosure,
  DisclosureButton,
  DisclosurePanel,
  Menu,
  MenuButton,
  MenuItem,
  MenuItems,
} from "@headlessui/react";
import { Bars3Icon, BellIcon, XMarkIcon } from "@heroicons/react/24/outline";
import { Link } from "react-router-dom";
import { selectLoggedInUser } from "../auth/authSlice";
import { useSelector } from "react-redux";

const navigation = [
  // { name: "Dashboard", href: "#", current: true },
  // { name: "Team", href: "#", current: false },
  // { name: "Projects", href: "#", current: false },
  { name: "Admin", link: "/admin", admin: true },
];

const userNavigation = [
  // { name: "Your Profile", link: "/profile" },
  // { name: "My Orders", link: "/orders" },
  { name: "Sign out", link: "/logout" },
];

function classNames(...classes) {
  return classes.filter(Boolean).join(" ");
}

export default function Navbar() {
  const user = useSelector(selectLoggedInUser);
  return (
    <Disclosure as="nav" className="bg-white-800 shadow-md shadow-gray-300 drop-shadow-lg">
      <div className="mx-auto max-w-7xl px-2 sm:px-6 lg:px-8">
        <div className="relative flex h-16 items-center justify-between">
          <div className="absolute inset-y-0 left-0 flex items-center sm:hidden">
            {/* Mobile menu button*/}
            <DisclosureButton className="group relative inline-flex items-center justify-center rounded-md p-2 text-gray-400 hover:bg-gray-700 hover:text-white focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white">
              <span className="absolute -inset-0.5" />
              <span className="sr-only">Open main menu</span>
              <Bars3Icon
                aria-hidden="true"
                className="block size-6 group-data-[open]:hidden"
              />
              <XMarkIcon
                aria-hidden="true"
                className="hidden size-6 group-data-[open]:block"
              />
            </DisclosureButton>
          </div>
          <div className="flex flex-1 items-center justify-center sm:items-stretch sm:justify-start">
            <div className="flex shrink-0 items-center">
              <Link to="/">
                <img
                  alt="Your Company"
                  src="https://tailwindui.com/plus/img/logos/mark.svg?color=indigo&shade=500"
                  className="h-8 w-auto"
                />
              </Link>
            </div>
          </div>
          <div className="absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0">
          <div className="hidden sm:mr-2 sm:block">
              <div className="ml-10 flex items-baseline space-x-4">
                {navigation.map((item) =>
                  item[user.role] ? (
                    <Link
                      key={item.name}
                      to={item.link}
                      className={classNames(
                        item.current
                          ? "bg-gray-900 text-black-500"
                          : "text-black hover:bg-green-700 hover:text-white",
                        "rounded-md px-3 py-2 text-sm font-medium"
                      )}
                      aria-current={item.current ? "page" : undefined}
                    >
                      {item.name}
                    </Link>
                  ) : null
                )}
              </div>
            </div>
            {/* <button
              type="button"
              className="relative rounded-full bg-gray-800 p-1 text-gray-400 hover:text-white focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-800"
            >
              <span className="absolute -inset-1.5" />
              <span className="sr-only">View notifications</span>
              <BellIcon aria-hidden="true" className="size-6" />
            </button> */}

            {/* Profile dropdown */}
            <Menu as="div" className="relative ml-3">
              <div>
                <MenuButton className="relative flex rounded-full bg-gray-800 text-sm focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-800">
                  <span className="absolute -inset-1.5" />
                  <span className="sr-only">Open user menu</span>
                  <img
                    alt=""
                    src="https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80"
                    className="size-8 rounded-full"
                  />
                </MenuButton>
              </div>
              <MenuItems
                transition
                className="absolute right-0 z-10 mt-2 w-48 origin-top-right rounded-md bg-white py-1 shadow-lg ring-1 ring-black ring-opacity-5 transition focus:outline-none data-[closed]:scale-95 data-[closed]:transform data-[closed]:opacity-0 data-[enter]:duration-100 data-[leave]:duration-75 data-[enter]:ease-out data-[leave]:ease-in"
              >
                {userNavigation.map((item) => (
                  <MenuItem key={item.name}>
                    {({ focus }) => (
                      <Link
                        to={item.name}
                        href={item.link}
                        className={classNames(
                          focus ? "bg-gray-100" : "",
                          "block px-4 py-2 text-sm text-gray-700"
                        )}
                      >
                        {item.name}
                      </Link>
                    )}
                  </MenuItem>
                ))}
              </MenuItems>
            </Menu>
          </div>
        </div>
      </div>

      <DisclosurePanel className="sm:hidden">
        <div className="space-y-1 px-2 pb-3 pt-2">
          {navigation.map((item) => (
            <DisclosureButton
              key={item.name}
              as="a"
              href={item.href}
              aria-current={item.current ? "page" : undefined}
              className={classNames(
                item.current
                  ? "bg-gray-900 text-white"
                  : "text-gray-300 hover:bg-gray-700 hover:text-white",
                "block rounded-md px-3 py-2 text-base font-medium"
              )}
            >
              {item.name}
            </DisclosureButton>
          ))}
        </div>
      </DisclosurePanel>
    </Disclosure>
  );
}

 
{({ focus }) => (
                      <Link
                        to={item.name}
                        href={item.link}
                        className={classNames(
                          focus ? "bg-gray-100" : "",
                          "block px-4 py-2 text-sm text-gray-700"
                        )}
                      >
                        {item.name}
                      </Link>
                    )}
 
                {userNavigation.map((item) => (
                  <MenuItem key={item.name}>
                    {({ focus }) => (
                      <Link
                        to={item.name}
                        href={item.link}
                        className={classNames(
                          focus ? "bg-gray-100" : "",
                          "block px-4 py-2 text-sm text-gray-700"
                        )}
                      >
                        {item.name}
                      </Link>
                    )}
 
{userNavigation.map((item) => (
                  <MenuItem key={item.name}>
                    {({ focus }) => (
                      <Link
                        // to={item.name}
                        to={item.link}
                        className={classNames(
                          focus ? "bg-gray-100" : "",
                          "block px-4 py-2 text-sm text-gray-700"
                        )}
                      >
                        {item.name}
                      </Link>
                    )}
                  </MenuItem>
                ))}
 
 {userNavigation.map((item) => (
                  <MenuItem key={item.name}>
                    {({ focus }) => (
                      <Link
                        // to={item.name}
                        to={item.link}
                        className={classNames(
                          focus ? "bg-gray-100" : "",
                          "block px-4 py-2 text-sm text-gray-700"
                        )}
                      >
                        {item.name}
                      </Link>
                    )}
                  </MenuItem>
                ))}
 
<Link
                        key={item.link}
                        to={item.link}
                        className={classNames(
                          focus ? "bg-gray-100" : "",
                          "block px-4 py-2 text-sm text-gray-700"
                        )}
                      >
                        {item.name}
                      </Link>
 
<img
              className="mx-auto h-10 w-auto"
              src="https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600"
              alt="SM Traders Logo"
            />
 

            {/* <img className="mx-auto h-24 w-auto" src="" alt="SM Traders Logo" /> */}
 
p-4
 
 <div
          className="bg-white p-4 shadow-md w-96"
          style={{ borderRadius: "40px" }}
        >
 
p-4
 
flex min-h-full flex-1 flex-col justify-center px-6 py-12 lg:px-8
 
import React, { useState } from "react";
import { useSelector, useDispatch } from "react-redux";
import {
  checkUserAsync,
  increment,
  incrementAsync,
  selectError,
  selectLoggedInUser,
} from "../authSlice.js";
import { Link, Navigate } from "react-router-dom";
import { useForm } from "react-hook-form";

export function Login() {
  // const count = useSelector();
  const dispatch = useDispatch();
  const error = useSelector(selectError);
  const user = useSelector(selectLoggedInUser);
  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm();

  return (
    <div>
      {user && <Navigate to="/" replace={true}></Navigate>}
      <div className="flex min-h-full flex-1 flex-col justify-center px-6 py-12 lg:px-8 ">
        <div className="flex justify-center items-center min-h-screen p-">
          <div className="border-[1px] border-[#9e77ed] p-4 sm:max-w-sm ">
            <div className="sm:mx-auto sm:w-full sm:max-w-sm  ">
              <img
                className="mx-auto h-10 w-auto"
                src="https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600"
                alt="SM Traders Logo"
              />
              <h2 className="mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900">
                Sign in to your account
              </h2>
            </div>

            <div className="mt-10 sm:mx-auto sm:w-full sm:max-w-sm">
              <form
                noValidate
                onSubmit={handleSubmit((data) => {
                  dispatch(
                    checkUserAsync({
                      email: data.email,
                      password: data.password,
                    })
                  );
                  console.log(data);
                })}
                className="space-y-6"
                action="#"
                method="POST"
              >
                <div>
                  <label
                    htmlFor="email"
                    className="block text-sm font-medium leading-6 text-gray-900"
                  >
                    Email address
                  </label>
                  <div className="mt-2">
                    <input
                      id="email"
                      name="email"
                      type="email"
                      autoComplete="email"
                      {...register("email", {
                        required: "email is required",
                        pattern: {
                          value: /\b[\w\.-]+@[\w\.-]+\.\w{2,4}\b/gi,
                          message: "email is not valid",
                        },
                      })}
                      required
                      className="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
                    />
                    {errors.email && (
                      <p className="text-red-500">{errors.email.message}</p>
                    )}
                  </div>
                </div>

                <div>
                  <div className="flex items-center justify-between">
                    <label
                      htmlFor="password"
                      className="block text-sm font-medium leading-6 text-gray-900"
                    >
                      Password
                    </label>
                    <div className="text-sm">
                      <Link
                        to="/forgot-password"
                        className="font-semibold text-indigo-600 hover:text-indigo-500"
                      >
                        Forgot password?
                      </Link>
                    </div>
                  </div>
                  <div className="mt-2">
                    <input
                      id="password"
                      {...register("password", {
                        required: "password is required",
                      })}
                      type="password"
                      className="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
                    />
                    {errors.password && (
                      <p className="text-red-500">{errors.password.message}</p>
                    )}
                  </div>
                  {error && <p className="text-red-500">{error.message}</p>}
                </div>

                <div>
                  <button
                    type="submit"
                    className="flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
                  >
                    Sign in
                  </button>
                </div>
              </form>

              <p className="mt-10 text-center text-sm text-gray-500">
                Not a member?{" "}
                <Link
                  to="/signup"
                  className="font-semibold leading-6 text-indigo-600 hover:text-indigo-500"
                >
                  Create a account
                </Link>
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}

 

      </div>
 

      <div className="flex min-h-full flex-1 flex-col justify-center px-6 py-12 lg:px-8 ">
 

      <div className="flex min-h-full flex-1 flex-col justify-center px-6 py-12 lg:px-8 ">
 

          </div>
 

          <div className="border-[1px] border-[#9e77ed] p-4 sm:max-w-sm ">
 
p-4
 
border-spacing-8
 

      </div>
 

      <div className="shadow-[0_4px_6px_#9e77ed] p-6">
 
 className="px-4"
 
/* Resetting body margin to remove space */
body {
    margin: 0; /* Remove body margin */
    padding: 0; /* Remove body padding */
    width: 100%; /* Full width of the viewport */
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
 
/* Main wrapper with background */

.background-wrapper {
    position: relative;
    background: #f5f5fa; /* Light purple background or customize as needed */
    min-height: 100vh; /* Full viewport height */
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden; /* Prevent extra scroll from designs */
  }
  
  
  /* Left-top curve design */
  .curve-design {
    position: absolute;
    top: -50px;
    left: -50px;
    width: 200px;
    height: 200px;
    background: #9e77ed; /* Purple shade for curve */
    border-radius: 50%; 
    z-index: 1;
  }
  
  /* Right-bottom background design */
  .background-wrapper::after {
    content: "";
    position: absolute;
    bottom: -50px;
    right: -50px;
    width: 200px;
    height: 200px;
    background: #9e77ed; /* Lighter purple for bottom */
    border-radius: 50%;
    z-index: 1;
  }
  
  /* Content container */
  .content {
    position: relative;
    z-index: 2; /* Ensure content is above the designs */
    width: 95%;
    max-width: 1200px; /* Restrict maximum width */
    padding: 20px;
    background: #ffffff; /* White background for content */
    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1); /* Subtle shadow */
    border-radius: 10px; /* Rounded corners for content */
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
    margin-top: 30px;
    margin-bottom: 30px;
  }
  
 

    width: 100vw;
 

    width: 100vw;
 

    overflow: hidden; /* Prevent extra scroll from designs */
 

    margin: 0; /* Remove margin */
    padding: 0; /* Remove padding */
 
.background-wrapper {
    position: relative;
    background: #f5f5fa; /* Light purple background or customize as needed */
    min-height: 100vh; /* Full viewport height */
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden; /* Prevent extra scroll from designs */
  }
 
box-shadow: 0 0 10px black;
 

    box-shadow: 0 0 10px #9e77ed(0, 0, 0, 0.2);
 

    margin: 0;
    padding: 0;
 

    padding: 12px;
 

    /* box-shadow: 0 0 10px rgba(0, 0, 0, 0.2); */
 
rgba
 

    box-shadow: #9e77ed;
 

    margin: 0;
    padding: 0;
 

    margin: 0;
    padding: 0;
 

    padding-top: 25px;
    padding-bottom: 20px;
 
.inner-div {
    /* padding-top: 20px; */
  }
 

    padding: 25px 20px; /* Add padding to the inner div */
 
.background-wrapper {
    position: relative;
    background: #f5f5fa; /* Light purple background or customize as needed */
    min-height: 100vh; /* Full viewport height */
    display: flex;
    justify-content: center;
    align-items: center;
    padding-top: 25px;
    padding-bottom: 20px;
    overflow: hidden; /* Prevent extra scroll from designs */
  }
 
<div className={{style:"margin:0"}}>
 

    margin: 0;
    padding: 0;
 

    padding-top: 25px;
 

    margin-top: 20px;
 

  margin-top: ;
 
#b59dfb
 

    border-right: 20px solid white;
 
border-bottom-right-radius: -50%;
 

    border-bottom: le;
 
GlobaleLayout
 
CurvedBackground
 
CurvedBackground
 
/* Main wrapper with background */
.background-wrapper {
    position: relative;
    background: #f5f5fa; /* Light purple background or customize as needed */
    min-height: 100vh; /* Full viewport height */
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden; /* Prevent extra scroll from designs */
  }
  
  /* Left-top curve design */
  .curve-design {
    position: absolute;
    top: -50px;
    left: -50px;
    width: 200px;
    height: 200px;
    background: #9e77ed; /* Purple shade for curve */
    border-radius: 50%; /* Makes it circular */
    z-index: 1;
  }
  
  /* Right-bottom background design */
  .background-wrapper::after {
    content: "";
    position: absolute;
    bottom: -50px;
    right: -50px;
    width: 200px;
    height: 200px;
    background: #b59dfb; /* Lighter purple for bottom */
    border-radius: 50%;
    z-index: 1;
  }
  
  /* Content container */
  .content {
    position: relative;
    z-index: 2; /* Ensure content is above the designs */
    width: 90%;
    max-width: 1200px; /* Restrict maximum width */
    padding: 20px;
    background: #ffffff; /* White background for content */
    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1); /* Subtle shadow */
    border-radius: 10px; /* Rounded corners for content */
  }
  
 
import React from "react";
import "./GlobleLayout.css"; // CSS file for styles

const BackgroundWrapper = ({ children }) => {
  return (
    <div className="background-wrapper">
      <div className="curve-design"></div>
      <div className="content">
        {children}
      </div>
    </div>
  );
};

export default BackgroundWrapper;

 
./BackgroundWrapper.css
 
import React from "react";

const GlobalLayout = ({ children }) => {
  return (
    <div className="relative min-h-screen bg-gray-100 overflow-hidden">
      {/* Top-left curve */}
      <div className="absolute top-0 left-0 w-1/2 h-1/3 bg-blue-500 rounded-bl-full"></div>

      {/* Bottom-left curve */}
      <div className="absolute bottom-0 left-0 w-1/2 h-1/3 bg-blue-500 rounded-tl-full"></div>

      {/* Main content area */}
      <div className="relative z-10">{children}</div>
    </div>
  );
};

export default GlobalLayout;

 

      </GlobalLayout>
 

      <GlobalLayout>
 
className="bg-white-800 shadow-md ">
 

      <Navbar />
 
import React from "react";
import { Login } from "./Features/auth/components/Login";
import "./index.css";
import Protected from "./Features/auth/components/Protected";
import { Signup } from "./Features/auth/components/Signup";
import { createBrowserRouter, RouterProvider } from "react-router-dom";
import Home from "./Pages/Home";
import Logout from "./Features/auth/components/Logout";
import ProtectedAdmin from "./Features/auth/components/ProtectedAdmin";
import AdminHome from "./Features/admin/components/AdminHome";

const router = createBrowserRouter([
  {
    path: "/",
    element: (
      <Protected>
        <Home />
      </Protected>
    ),
  },
  {
    path: "/login",
    element: <Login></Login>,
  },
  {
    path: "/signup",
    element: <Signup></Signup>,
  },
  {
    path: "/logout",
    element: <Logout></Logout>,
  },
  {
    path: "/admin",
    element: (
      <ProtectedAdmin>
        <AdminHome></AdminHome>
      </ProtectedAdmin>
    ),
  },
]);

function App() {
  return (
    <div>
      <RouterProvider router={router} />
    </div>
  );
}

export default App;
 

    </div>
 

    <div className={{style:"bg-cyan-300"}}>
 
<div className="hidden sm:ml-6 sm:block">
 
 bg-gray-50
 

  background-color: aqua;
 
import {
  Disclosure,
  DisclosureButton,
  DisclosurePanel,
  Menu,
  MenuButton,
  MenuItem,
  MenuItems,
} from "@headlessui/react";
import { Bars3Icon, BellIcon, XMarkIcon } from "@heroicons/react/24/outline";
import { Link } from "react-router-dom";
import { selectLoggedInUser } from "../auth/authSlice";
import { useSelector } from "react-redux";

const navigation = [
  // { name: "Dashboard", href: "#", current: true },
  // { name: "Team", href: "#", current: false },
  // { name: "Projects", href: "#", current: false },
  { name: "Admin", link: "/admin", admin: true },
];

const userNavigation = [
  { name: "Your Profile", link: "/profile" },
  { name: "My Orders", link: "/orders" },
  { name: "Sign out", link: "/logout" },
];

function classNames(...classes) {
  return classes.filter(Boolean).join(" ");
}

export default function Navbar() {
  const user = useSelector(selectLoggedInUser);
  return (
    <Disclosure as="nav" className="bg-white border-b border-gray-200 shadow-md">
    <div className="mx-auto max-w-7xl px-2 sm:px-6 lg:px-8">
      <div className="relative flex h-16 items-center justify-between">
        <div className="absolute inset-y-0 left-0 flex items-center sm:hidden">
          {/* Mobile menu button */}
          <Disclosure.Button className="group relative inline-flex items-center justify-center rounded-md p-2 text-gray-500 hover:bg-gray-100 hover:text-black focus:outline-none focus:ring-2 focus:ring-inset focus:ring-black">
            <span className="sr-only">Open main menu</span>
            <Bars3Icon
              aria-hidden="true"
              className="block size-6 group-data-[open]:hidden"
            />
            <XMarkIcon
              aria-hidden="true"
              className="hidden size-6 group-data-[open]:block"
            />
          </Disclosure.Button>
        </div>
        <div className="flex flex-1 items-center justify-center sm:items-stretch sm:justify-start">
          <div className="flex shrink-0 items-center">
            <Link to="/">
              <img
                alt="Your Company"
                src="https://tailwindui.com/plus/img/logos/mark.svg?color=indigo&shade=500"
                className="h-8 w-auto"
              />
            </Link>
          </div>
          <div className="hidden sm:ml-6 sm:block">
            <div className="ml-10 flex items-baseline space-x-4">
              {navigation.map((item) =>
                item[user.role] ? (
                  <Link
                    key={item.name}
                    to={item.link}
                    className={classNames(
                      item.current
                        ? "bg-gray-100 text-black"
                        : "text-black hover:bg-gray-100 hover:text-black",
                      "rounded-md px-3 py-2 text-sm font-medium"
                    )}
                    aria-current={item.current ? "page" : undefined}
                  >
                    {item.name}
                  </Link>
                ) : null
              )}
            </div>
          </div>
        </div>
        <div className="absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0">
          <button
            type="button"
            className="relative rounded-full bg-white p-1 text-gray-500 hover:text-black focus:outline-none focus:ring-2 focus:ring-black focus:ring-offset-2 focus:ring-offset-white"
          >
            <span className="sr-only">View notifications</span>
            <BellIcon aria-hidden="true" className="size-6" />
          </button>
  
          {/* Profile dropdown */}
          <Menu as="div" className="relative ml-3">
            <div>
              <Menu.Button className="relative flex rounded-full bg-white text-sm focus:outline-none focus:ring-2 focus:ring-black focus:ring-offset-2 focus:ring-offset-white">
                <span className="sr-only">Open user menu</span>
                <img
                  alt=""
                  src="https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80"
                  className="size-8 rounded-full"
                />
              </Menu.Button>
            </div>
            <Menu.Items className="absolute right-0 z-10 mt-2 w-48 origin-top-right rounded-md bg-white py-1 shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none">
              {userNavigation.map((item) => (
                <Menu.Item key={item.name}>
                  {({ active }) => (
                    <Link
                      to={item.link}
                      className={classNames(
                        active ? "bg-gray-100" : "",
                        "block px-4 py-2 text-sm text-black"
                      )}
                    >
                      {item.name}
                    </Link>
                  )}
                </Menu.Item>
              ))}
            </Menu.Items>
          </Menu>
        </div>
      </div>
    </div>
  
    <Disclosure.Panel className="sm:hidden">
      <div className="space-y-1 px-2 pb-3 pt-2">
        {navigation.map((item) => (
          <Disclosure.Button
            key={item.name}
            as="a"
            href={item.href}
            aria-current={item.current ? "page" : undefined}
            className={classNames(
              item.current
                ? "bg-gray-100 text-black"
                : "text-black hover:bg-gray-100",
              "block rounded-md px-3 py-2 text-base font-medium"
            )}
          >
            {item.name}
          </Disclosure.Button>
        ))}
      </div>
    </Disclosure.Panel>
  </Disclosure>
  
  );
}

 

    <Disclosure as="nav" className="bg-white border-b border-gray-200 ">
 

    </div>
 

    <div className="shadow-md">
 
shadow-md
 
 <Disclosure as="nav" className="bg-white border-b border-gray-200 shadow-md">
    <div className="mx-auto max-w-7xl px-2 sm:px-6 lg:px-8">
      <div className="relative flex h-16 items-center justify-between">
        <div className="absolute inset-y-0 left-0 flex items-center sm:hidden">
          {/* Mobile menu button */}
          <Disclosure.Button className="group relative inline-flex items-center justify-center rounded-md p-2 text-gray-500 hover:bg-gray-100 hover:text-black focus:outline-none focus:ring-2 focus:ring-inset focus:ring-black">
            <span className="sr-only">Open main menu</span>
            <Bars3Icon
              aria-hidden="true"
              className="block size-6 group-data-[open]:hidden"
            />
            <XMarkIcon
              aria-hidden="true"
              className="hidden size-6 group-data-[open]:block"
            />
          </Disclosure.Button>
        </div>
        <div className="flex flex-1 items-center justify-center sm:items-stretch sm:justify-start">
          <div className="flex shrink-0 items-center">
            <Link to="/">
              <img
                alt="Your Company"
                src="https://tailwindui.com/plus/img/logos/mark.svg?color=indigo&shade=500"
                className="h-8 w-auto"
              />
            </Link>
          </div>
          <div className="hidden sm:ml-6 sm:block">
            <div className="ml-10 flex items-baseline space-x-4">
              {navigation.map((item) =>
                item[user.role] ? (
                  <Link
                    key={item.name}
                    to={item.link}
                    className={classNames(
                      item.current
                        ? "bg-gray-100 text-black"
                        : "text-black hover:bg-gray-100 hover:text-black",
                      "rounded-md px-3 py-2 text-sm font-medium"
                    )}
                    aria-current={item.current ? "page" : undefined}
                  >
                    {item.name}
                  </Link>
                ) : null
              )}
            </div>
          </div>
        </div>
        <div className="absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0">
          <button
            type="button"
            className="relative rounded-full bg-white p-1 text-gray-500 hover:text-black focus:outline-none focus:ring-2 focus:ring-black focus:ring-offset-2 focus:ring-offset-white"
          >
            <span className="sr-only">View notifications</span>
            <BellIcon aria-hidden="true" className="size-6" />
          </button>
  
          {/* Profile dropdown */}
          <Menu as="div" className="relative ml-3">
            <div>
              <Menu.Button className="relative flex rounded-full bg-white text-sm focus:outline-none focus:ring-2 focus:ring-black focus:ring-offset-2 focus:ring-offset-white">
                <span className="sr-only">Open user menu</span>
                <img
                  alt=""
                  src="https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80"
                  className="size-8 rounded-full"
                />
              </Menu.Button>
            </div>
            <Menu.Items className="absolute right-0 z-10 mt-2 w-48 origin-top-right rounded-md bg-white py-1 shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none">
              {userNavigation.map((item) => (
                <Menu.Item key={item.name}>
                  {({ active }) => (
                    <Link
                      to={item.link}
                      className={classNames(
                        active ? "bg-gray-100" : "",
                        "block px-4 py-2 text-sm text-black"
                      )}
                    >
                      {item.name}
                    </Link>
                  )}
                </Menu.Item>
              ))}
            </Menu.Items>
          </Menu>
        </div>
      </div>
    </div>
  
    <Disclosure.Panel className="sm:hidden">
      <div className="space-y-1 px-2 pb-3 pt-2">
        {navigation.map((item) => (
          <Disclosure.Button
            key={item.name}
            as="a"
            href={item.href}
            aria-current={item.current ? "page" : undefined}
            className={classNames(
              item.current
                ? "bg-gray-100 text-black"
                : "text-black hover:bg-gray-100",
              "block rounded-md px-3 py-2 text-base font-medium"
            )}
          >
            {item.name}
          </Disclosure.Button>
        ))}
      </div>
    </Disclosure.Panel>
  </Disclosure>
 
"bg-white border-b border-gray-200
 
 <Disclosure as="nav" className="bg-white-800">
      <div className="mx-auto max-w-7xl px-2 sm:px-6 lg:px-8">
        <div className="relative flex h-16 items-center justify-between">
          <div className="absolute inset-y-0 left-0 flex items-center sm:hidden">
            {/* Mobile menu button*/}
            <DisclosureButton className="group relative inline-flex items-center justify-center rounded-md p-2 text-gray-400 hover:bg-gray-700 hover:text-white focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white">
              <span className="absolute -inset-0.5" />
              <span className="sr-only">Open main menu</span>
              <Bars3Icon
                aria-hidden="true"
                className="block size-6 group-data-[open]:hidden"
              />
              <XMarkIcon
                aria-hidden="true"
                className="hidden size-6 group-data-[open]:block"
              />
            </DisclosureButton>
          </div>
          <div className="flex flex-1 items-center justify-center sm:items-stretch sm:justify-start">
            <div className="flex shrink-0 items-center">
              <Link to="/">
                <img
                  alt="Your Company"
                  src="https://tailwindui.com/plus/img/logos/mark.svg?color=indigo&shade=500"
                  className="h-8 w-auto"
                />
              </Link>
            </div>
            <div className="hidden sm:ml-6 sm:block">
              <div className="ml-10 flex items-baseline space-x-4">
                {navigation.map((item) =>
                  item[user.role] ? (
                    <Link
                      key={item.name}
                      to={item.link}
                      className={classNames(
                        item.current
                          ? "bg-gray-900 text-white"
                          : "text-gray-300 hover:bg-gray-700 hover:text-white",
                        "rounded-md px-3 py-2 text-sm font-medium"
                      )}
                      aria-current={item.current ? "page" : undefined}
                    >
                      {item.name}
                    </Link>
                  ) : null
                )}
              </div>
            </div>
          </div>
          <div className="absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0">
            <button
              type="button"
              className="relative rounded-full bg-gray-800 p-1 text-gray-400 hover:text-white focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-800"
            >
              <span className="absolute -inset-1.5" />
              <span className="sr-only">View notifications</span>
              <BellIcon aria-hidden="true" className="size-6" />
            </button>

            {/* Profile dropdown */}
            <Menu as="div" className="relative ml-3">
              <div>
                <MenuButton className="relative flex rounded-full bg-gray-800 text-sm focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-800">
                  <span className="absolute -inset-1.5" />
                  <span className="sr-only">Open user menu</span>
                  <img
                    alt=""
                    src="https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80"
                    className="size-8 rounded-full"
                  />
                </MenuButton>
              </div>
              <MenuItems
                transition
                className="absolute right-0 z-10 mt-2 w-48 origin-top-right rounded-md bg-white py-1 shadow-lg ring-1 ring-black ring-opacity-5 transition focus:outline-none data-[closed]:scale-95 data-[closed]:transform data-[closed]:opacity-0 data-[enter]:duration-100 data-[leave]:duration-75 data-[enter]:ease-out data-[leave]:ease-in"
              >
                {userNavigation.map((item) => (
                  <MenuItem key={item.name}>
                    {({ focus }) => (
                      <Link
                        to={item.link}
                        href={item.href}
                        className={classNames(
                          focus ? "bg-gray-100" : "",
                          "block px-4 py-2 text-sm text-gray-700"
                        )}
                      >
                        {item.name}
                      </Link>
                    )}
                  </MenuItem>
                ))}
              </MenuItems>
            </Menu>
          </div>
        </div>
      </div>

      <DisclosurePanel className="sm:hidden">
        <div className="space-y-1 px-2 pb-3 pt-2">
          {navigation.map((item) => (
            <DisclosureButton
              key={item.name}
              as="a"
              href={item.href}
              aria-current={item.current ? "page" : undefined}
              className={classNames(
                item.current
                  ? "bg-gray-900 text-white"
                  : "text-gray-300 hover:bg-gray-700 hover:text-white",
                "block rounded-md px-3 py-2 text-base font-medium"
              )}
            >
              {item.name}
            </DisclosureButton>
          ))}
        </div>
      </DisclosurePanel>
    </Disclosure>
 
bg-gray-800
 

    <div className="p-6 bg-gray-50 min-h-screen">
  <h1 className="text-4xl font-bold mb-8 text-center text-gray-800">
    User List
  </h1>

  {/* Show error if status is "failed" */}
  {status === "failed" && (
    <p className="text-red-500 text-center mb-4 text-lg">
      Error: {error}
    </p>
  )}

  {/* Display the user list */}
  <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
    {users.map((user) => (
      <div
        key={user.id}
        className="bg-white shadow-lg rounded-xl p-6 border border-transparent hover:shadow-2xl hover:border-blue-400 transition duration-300 relative"
      >
        {/* Gradient Border */}
        <div className="absolute inset-0 rounded-xl bg-gradient-to-r from-blue-500 to-indigo-500 opacity-25 pointer-events-none"></div>

        {/* User Icon or Avatar */}
        <div className="absolute top-4 right-4 bg-gradient-to-r from-blue-400 to-indigo-500 text-white rounded-full w-12 h-12 flex items-center justify-center font-bold shadow-lg">
          {user.name[0].toUpperCase()}
        </div>

        {/* User Details */}
        <h2 className="text-xl font-semibold text-gray-800 mb-2">
          {user.name}
        </h2>
        <p className="text-gray-600 mb-1">
          <strong>ID:</strong> {user.id}
        </p>
        <p className="text-gray-600 mb-1">
          <strong>Email:</strong> {user.email}
        </p>
        <p className="text-gray-600 mb-3">
          <strong>Role:</strong> {user.role}
        </p>

        {/* Button */}
        <button className="mt-auto text-white bg-gradient-to-r from-blue-500 to-indigo-500 hover:from-indigo-500 hover:to-blue-500 font-medium py-2 px-4 rounded-lg transition duration-200">
          View Profile
        </button>
      </div>
    ))}
  </div>
</div>
 

    <div className="p-6 bg-gray-50 min-h-screen">
    <h1 className="text-4xl font-bold mb-8 text-center text-gray-800">
      User List
    </h1>
  
    {/* Show error if status is "failed" */}
    {status === "failed" && (
      <p className="text-red-500 text-center mb-4 text-lg">
        Error: {error}
      </p>
    )}
  
    {/* Display the user list */}
    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
      {users.map((user) => (
        <div
          key={user.id}
          className="bg-white shadow-lg rounded-lg p-6 border border-gray-200 hover:shadow-xl transition duration-300 relative"
        >
          {/* Icon or avatar */}
          <div className="absolute top-4 right-4 bg-blue-100 text-blue-600 rounded-full w-10 h-10 flex items-center justify-center font-bold">
            {user.name[0].toUpperCase()}
          </div>
  
          <h2 className="text-xl font-semibold text-gray-800 mb-2">
            {user.name}
          </h2>
          <p className="text-gray-500 mb-1">
            <strong>ID:</strong> {user.id}
          </p>
          <p className="text-gray-500 mb-1">
            <strong>Email:</strong> {user.email}
          </p>
          <p className="text-gray-500 mb-3">
            <strong>Role:</strong> {user.role}
          </p>
  
          {/* Button for actions */}
          <button className="mt-auto text-white bg-blue-600 hover:bg-blue-700 font-medium py-2 px-4 rounded-md transition duration-200">
            View Profile
          </button>
        </div>
      ))}
    </div>
  </div>
 
 <div className="p-6 bg-gray-100 min-h-screen">
  <h1 className="text-3xl font-bold mb-6 text-center">User List</h1>

  {/* Show error if status is "failed" */}
  {status === "failed" && (
    <p className="text-red-500 text-center mb-4">Error: {error}</p>
  )}

  {/* Display the user list */}
  <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
    {users.map((user) => (
      <div
        key={user.id}
        className="bg-white shadow-md rounded-lg p-4 border border-gray-200 hover:shadow-lg transition duration-300"
      >
        <h2 className="text-lg font-semibold text-gray-800">
          Name: <span className="font-medium">{user.name}</span>
        </h2>
        <p className="text-gray-600">
          <strong>ID:</strong> {user.id}
        </p>
        <p className="text-gray-600">
          <strong>Email:</strong> {user.email}
        </p>
        <p className="text-gray-600">
          <strong>Role:</strong> {user.role}
        </p>
      </div>
    ))}
  </div>
</div>
 
"job": "app dev"
 
<div>
      <h1>User List</h1>
      {/* {status === "loading" && <p>Loading...</p>} */}
      {status === "failed" && <p>Error: {error}</p>}

      <ul>
        {users.map((user) => (
          <>
            <li key={user.id}>
              id: {user.id} - name: {user.name} - email: {user.email} - role:  {user.role}
            </li>
          </>
        ))}
      </ul>
    </div>
 

          <li key={user.id}></li>
 
{user.name} - {user.email}
 
{user.name} - 
 
 - {user.email}
 
../Features/admin/userListsSlice
 

      Home
 
export function fetchAllUsers(amount = 1) {
    return new Promise(async (resolve) => {
      const response = await fetch("http://localhost:8080/employe");
      // TODO :Server will filter delted products
      const data = await response.json();
      resolve({ data });
    });
  }
 
import React from 'react'

function userLists() {
  return (
    <div>
      
    </div>
  )
}

export default userLists

 
import { createAsyncThunk, createSlice } from "@reduxjs/toolkit";
import { fetchAllUsers } from "./userListsApi";

const initialState = {
    usersList: [],
    status: "idle",
  };

  export const fetchAllUsersAsync = createAsyncThunk(
    "product/fetchAllProducts",
    async (amount) => {
      const response = await fetchAllUsers(amount);
  
      return response.data;
    }
  );

  export const userListsSlice=createSlice({
    name: 'userLists',
    initialState,
  reducers: {
    // 
  },
  }
  extraReducers: (builder) => {
    builder
      .addCase(fetchAllUsersAsync.pending, (state) => {
        state.status = "loading";
      })
      //this error where i stuck
      // .addCase(fetchAllProductsAsync.fulfilled, (state, action) => {
      //   state.status = 'idle';
      //   state.products += action.payload;
      // });
      .addCase(fetchAllUsersAsync.fulfilled, (state, action) => {
        state.status = "idle";
      });
}


export const selectAllUserLists = (state) => state.usersList.employe;


  
 
Products
 

        state.products = [...state.products, ...action.payload];
 
ProductsAsync
 
ProductsAsync
 

    increment: (state) => {
      state.value += 1;
    },
    clearSelectedProduct:(state)=>{
      state.selectedProduct=null
    }
 
Products
 
Products
 

    categories: [],
    brands: [],
    selectedProduct: null,
 

fetchAllUsers
 
products
 
Products
 
import React, { useEffect, useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import { getUsers, addUser, editUser, removeUser } from "../userSlice";
function UserManagement() {
  const dispatch = useDispatch();
  const { users, status, error } = useSelector((state) => state.user);

  const [formMode, setFormMode] = useState("add");
  const [currentUser, setCurrentUser] = useState({
    name: "",
    email: "",
    role: "",
  });

  // Fetch users on component mount
  useEffect(() => {
    dispatch(getUsers());
  }, [dispatch]);

  const handleSubmit = (e) => {
    e.preventDefault();

    if (formMode === "add") {
      dispatch(addUser(currentUser));
    } else {
      dispatch(editUser({ id: currentUser.id, user: currentUser }));
    }

    setCurrentUser({ name: "", email: "", role: "" });
    setFormMode("add");
  };

  const handleEdit = (user) => {
    setFormMode("edit");
    setCurrentUser(user);
  };

  const handleDelete = (id) => {
    dispatch(removeUser(id));
  };

  return (
    <div className="max-w-4xl mx-auto p-6">
      <h2 className="text-3xl font-semibold text-center mb-6">
        User Management
      </h2>

      <form
        onSubmit={handleSubmit}
        className="bg-white shadow-md rounded-lg p-6 space-y-4"
      >
        <div className="flex flex-col space-y-2">
          <input
            type="text"
            placeholder="Name"
            value={currentUser.name}
            onChange={(e) =>
              setCurrentUser({ ...currentUser, name: e.target.value })
            }
            className="px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500"
          />
          <input
            type="email"
            placeholder="Email"
            value={currentUser.email}
            onChange={(e) =>
              setCurrentUser({ ...currentUser, email: e.target.value })
            }
            className="px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500"
          />
          <select
            value={currentUser.role}
            onChange={(e) =>
              setCurrentUser({ ...currentUser, role: e.target.value })
            }
            className="px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500"
          >
            <option value="">Select Role</option>
            <option value="user">User</option>
            <option value="admin">Admin</option>
          </select>
        </div>
        <button
          type="submit"
          className="w-full py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500"
        >
          {formMode === "add" ? "Add User" : "Update User"}
        </button>
      </form>

      {status === "loading" && (
        <p className="text-center text-gray-500 mt-4">Loading...</p>
      )}
      {status === "failed" && (
        <p className="text-center text-red-500 mt-4">Error: {error}</p>
      )}

      <table className="mt-6 w-full table-auto border-collapse border border-gray-200">
        <thead className="bg-gray-100">
          <tr>
            <th className="px-6 py-3 text-left text-sm font-semibold text-gray-700">
              Name
            </th>
            <th className="px-6 py-3 text-left text-sm font-semibold text-gray-700">
              Email
            </th>
            <th className="px-6 py-3 text-left text-sm font-semibold text-gray-700">
              Role
            </th>
            <th className="px-6 py-3 text-left text-sm font-semibold text-gray-700">
              Actions
            </th>
          </tr>
        </thead>
        <tbody>
          {users.map((user) => (
            <tr key={user.id} className="border-b hover:bg-gray-50">
              <td className="px-6 py-4 text-sm text-gray-700">{user.name}</td>
              <td className="px-6 py-4 text-sm text-gray-700">{user.email}</td>
              <td className="px-6 py-4 text-sm text-gray-700">{user.role}</td>
              <td className="px-6 py-4 text-sm">
                <button
                  onClick={() => handleEdit(user)}
                  className="bg-yellow-500 text-white px-4 py-2 rounded-md hover:bg-yellow-600 focus:outline-none focus:ring-2 focus:ring-yellow-500"
                >
                  Edit
                </button>
                <button
                  onClick={() => handleDelete(user.id)}
                  className="ml-2 bg-red-500 text-white px-4 py-2 rounded-md hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500"
                >
                  Delete
                </button>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
}

export default UserManagement;

 
{
  "users": [
    {
      "id": "e7dc",
      "email": "admin@gmail.com",
      "password": "Admin@321",
      "addresses": [],
      "role": "admin"
    },
    {
      "id": "76f8",
      "email": "kazmiwrite@gmail.com",
      "password": "Sufiya@321",
      "addresses": [],
      "role": "user"
    }
  ],
  "employe": [
    {
      "id": "2",
      "name": "fiya",
      "email": "fiyaa@gmail.com",
      "job": "app dev"
    },
    {
      "id": "9093",
      "name": "jon",
      "email": "jon@gmail.com",
      "role": "admin"
    }
  ]
}
 
import React, { useEffect, useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import { getUsers, addUser, editUser, removeUser } from "../userSlice";
function UserManagement() {
  const dispatch = useDispatch();
  const { users, status, error } = useSelector((state) => state.user);

  const [formMode, setFormMode] = useState("add");
  const [currentUser, setCurrentUser] = useState({
    name: "",
    email: "",
    role: "",
  });

  // Fetch users on component mount
  useEffect(() => {
    dispatch(getUsers());
  }, [dispatch]);

  const handleSubmit = (e) => {
    e.preventDefault();

    if (formMode === "add") {
      dispatch(addUser(currentUser));
    } else {
      dispatch(editUser({ id: currentUser.id, user: currentUser }));
    }

    setCurrentUser({ name: "", email: "", role: "" });
    setFormMode("add");
  };

  const handleEdit = (user) => {
    setFormMode("edit");
    setCurrentUser(user);
  };

  const handleDelete = (id) => {
    dispatch(removeUser(id));
  };

  return (
    <div className="max-w-4xl mx-auto p-6">
      <h2 className="text-3xl font-semibold text-center mb-6">
        User Management
      </h2>

      <form
        onSubmit={handleSubmit}
        className="bg-white shadow-md rounded-lg p-6 space-y-4"
      >
        <div className="flex flex-col space-y-2">
          <input
            type="text"
            placeholder="Name"
            value={currentUser.name}
            onChange={(e) =>
              setCurrentUser({ ...currentUser, name: e.target.value })
            }
            className="px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500"
          />
          <input
            type="email"
            placeholder="Email"
            value={currentUser.email}
            onChange={(e) =>
              setCurrentUser({ ...currentUser, email: e.target.value })
            }
            className="px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500"
          />
          <select
            value={currentUser.role}
            onChange={(e) =>
              setCurrentUser({ ...currentUser, role: e.target.value })
            }
            className="px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500"
          >
            <option value="">Select Role</option>
            <option value="user">User</option>
            <option value="admin">Admin</option>
          </select>
        </div>
        <button
          type="submit"
          className="w-full py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500"
        >
          {formMode === "add" ? "Add User" : "Update User"}
        </button>
      </form>

      {status === "loading" && (
        <p className="text-center text-gray-500 mt-4">Loading...</p>
      )}
      {status === "failed" && (
        <p className="text-center text-red-500 mt-4">Error: {error}</p>
      )}

      <table className="mt-6 w-full table-auto border-collapse border border-gray-200">
        <thead className="bg-gray-100">
          <tr>
            <th className="px-6 py-3 text-left text-sm font-semibold text-gray-700">
              Name
            </th>
            <th className="px-6 py-3 text-left text-sm font-semibold text-gray-700">
              Email
            </th>
            <th className="px-6 py-3 text-left text-sm font-semibold text-gray-700">
              Role
            </th>
            <th className="px-6 py-3 text-left text-sm font-semibold text-gray-700">
              Actions
            </th>
          </tr>
        </thead>
        <tbody>
          {users.map((user) => (
            <tr key={user.id} className="border-b hover:bg-gray-50">
              <td className="px-6 py-4 text-sm text-gray-700">{user.name}</td>
              <td className="px-6 py-4 text-sm text-gray-700">{user.email}</td>
              <td className="px-6 py-4 text-sm text-gray-700">{user.role}</td>
              <td className="px-6 py-4 text-sm">
                <button
                  onClick={() => handleEdit(user)}
                  className="bg-yellow-500 text-white px-4 py-2 rounded-md hover:bg-yellow-600 focus:outline-none focus:ring-2 focus:ring-yellow-500"
                >
                  Edit
                </button>
                <button
                  onClick={() => handleDelete(user.id)}
                  className="ml-2 bg-red-500 text-white px-4 py-2 rounded-md hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500"
                >
                  Delete
                </button>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
}

export default UserManagement;

 
<div>
      <h2>User Management</h2>
      <form onSubmit={handleSubmit}>
        <input
          type="text"
          placeholder="Name"
          value={currentUser.name}
          onChange={(e) => setCurrentUser({ ...currentUser, name: e.target.value })}
        />
        <input
          type="email"
          placeholder="Email"
          value={currentUser.email}
          onChange={(e) => setCurrentUser({ ...currentUser, email: e.target.value })}
        />
        <select
          value={currentUser.role}
          onChange={(e) => setCurrentUser({ ...currentUser, role: e.target.value })}
        >
          <option value="">Select Role</option>
          <option value="user">User</option>
          <option value="admin">Admin</option>
        </select>
        <button type="submit">{formMode === "add" ? "Add User" : "Update User"}</button>
      </form>

      {status === "loading" && <p>Loading...</p>}
      {status === "failed" && <p>Error: {error}</p>}

      <table border="1">
        <thead>
          <tr>
            <th>Name</th>
            <th>Email</th>
            <th>Role</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody>
          {users.map((user) => (
            <tr key={user.id}>
              <td>{user.name}</td>
              <td>{user.email}</td>
              <td>{user.role}</td>
              <td>
                <button onClick={() => handleEdit(user)}>Edit</button>
                <button onClick={() => handleDelete(user.id)}>Delete</button>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
 
../features/authSlice.js
 
../features/userSlice.js
 

import { configureStore, createReducer } from "@reduxjs/toolkit";
import userReducer from "../Features/auth/authSlice.js";
import authReducer from "../Features/auth/authSlice.js";

export const store = configureStore({
  reducer: {
    auth: authReducer,
    user: userReducer,
  },
});

 

      hello
 
e7dc
 
./Features/admin/AdminHome
 
import React from "react";
import { Login } from "./Features/auth/components/Login";
import "./index.css";
import Protected from "./Features/auth/components/Protected";
import { Signup } from "./Features/auth/components/Signup";
import { createBrowserRouter, RouterProvider } from "react-router-dom";
import Home from "./Pages/Home";
import Logout from "./Features/auth/components/Logout";
import ProtectedAdmin from "./Features/auth/components/ProtectedAdmin";
import AdminHome from "./Features/admin/components/AdminHome";

const router = createBrowserRouter([
  {
    path: "/",
    element: (
      <Protected>
        <Home />
      </Protected>
    ),
  },
  {
    path: "/login",
    element: <Login></Login>,
  },
  {
    path: "/signup",
    element: <Signup></Signup>,
  },
  {
    path: "/logout",
    element: <Logout></Logout>,
  },
  {
    path: "/admin",
    element: (
      <ProtectedAdmin>
        <AdminHome></AdminHome>
      </ProtectedAdmin>
    ),
  },
]);

function App() {
  return (
    <div>
      <RouterProvider router={router} />
    </div>
  );
}

export default App;

 
import { configureStore, createReducer } from "@reduxjs/toolkit";
import userReducer from "../Features/auth/authSlice.js";
import authReducer from "../Features/admin/userSlice.js";

export const store = configureStore({
  reducer: {
    auth: authReducer,
    user: userReducer,
  },
});

 
import React from "react";
import Navbar from "../Features/Navbar/Navbar";
// import AdminPanel from "../Features/Components/AdminPanel";
// import { ProductList } from "./../features/productslist/components/ProductList";

function Home() {
  return (
    <div>
      <Navbar></Navbar>
      Home
    </div>
  );
}

export default Home;

 
import { createAsyncThunk, createSlice } from "@reduxjs/toolkit";
import { checkUser, createUser, signOut } from "./authApi.js";
import { updateUser } from "./authApi.js";

const initialState = {
  loggedInUser: null,
  status: "idle",
  error: null,
};

// createUserAsync
export const createUserAsync = createAsyncThunk(
  "user/createUser",
  async (userData) => {
    const response = await createUser(userData);

    return response.data;
  }
);

export const checkUserAsync = createAsyncThunk(
  "user/checkUser",
  async (loginInfo) => {
    const response = await checkUser(loginInfo);

    return response.data;
  }
);

export const updateUserAsync = createAsyncThunk(
  "cart/updateUserAsync",
  async (update) => {
    const response = await updateUser(update);

    return response.data;
  }
);

export const signOutAsync = createAsyncThunk(
  "user/signOut",
  async (loginInfo) => {
    const response = await signOut(loginInfo);

    return response.data;
  }
);

export const authSlice = createSlice({
  name: "user",
  initialState,
  reducers: {
    // increment: (state) => {
    //   state.value += 1;
    // },
  },
  extraReducers: (builder) => {
    builder
      .addCase(createUserAsync.pending, (state) => {
        state.status = "loading";
      })
      .addCase(createUserAsync.fulfilled, (state, action) => {
        state.status = "idle";
        state.loggedInUser = action.payload;
      })
      .addCase(createUserAsync.rejected, (state, action) => {
        state.status = "idle";
        state.error = action.error;
      })
      .addCase(checkUserAsync.pending, (state) => {
        state.status = "loading";
      })
      .addCase(checkUserAsync.fulfilled, (state, action) => {
        state.status = "idle";
        state.loggedInUser = action.payload;
      })
      .addCase(checkUserAsync.rejected, (state, action) => {
        state.status = "idle";
        state.error = action.error;
      })
      .addCase(updateUserAsync.pending, (state) => {
        state.status = "loading";
      })
      .addCase(updateUserAsync.fulfilled, (state, action) => {
        state.status = "idle";
        state.loggedInUser = action.payload;
      })
      .addCase(updateUserAsync.rejected, (state, action) => {
        state.status = "idle";
        state.error = action.error;
      })
      .addCase(signOutAsync.pending, (state) => {
        state.status = "loading";
      })
      .addCase(signOutAsync.fulfilled, (state, action) => {
        state.status = "idle";
        state.loggedInUser = null;
      });
  },
});

export const selectLoggedInUser = (state) => state.auth.loggedInUser;
export const selectError = (state) => state.auth.error;
export const { increment } = authSlice.actions;

export default authSlice.reducer;
 
export function createUser(userData) {
  return new Promise(async (resolve) => {
    const response = await fetch("http://localhost:8080/users", {
      method: "POST",
      body: JSON.stringify(userData),
      headers: { "content-type": "application/json" },
    });
    const data = await response.json();
    resolve({ data });
  });
}


// A mock function to mimic making an async request for data
export function checkUser(loginInfo) {
    return new Promise(async (resolve, reject) => {
      const email = loginInfo.email;
      const password = loginInfo.password;
      const response = await fetch("http://localhost:8080/users?email=" + email);
      const data = await response.json();
      // console.log({ data });
      if (data.length) {
        if (password === data[0].password) {
          resolve({ data: data[0] });
        } else {
          reject({ message: "wrong cred" });
        }
      } else {
        reject({ message: "user not found" });
      }
    });
  }
  
  export function signOut(userId) {
    return new Promise(async (resolve) => {
      resolve({ data: "success" });
    });
  }

  export function updateUser(update) {
    return new Promise(async (resolve) => {
      const response = await fetch("http://localhost:8080/users/"+update.id, {
        method: "PATCH",
        body: JSON.stringify(update),
        headers: { "content-type": "application/json" },
      });
      const data = await response.json();
      resolve({ data });
    });
  }
  
 
import React, { useState } from "react";
import { useSelector, useDispatch } from "react-redux";
import { selectLoggedInUser, createUserAsync } from "../authSlice.js";
import { Link } from "react-router-dom";
import { useForm } from "react-hook-form";
import { Navigate } from "react-router-dom";
// import logo from '../../../../src/images/mbc.png'

export function Signup() {
  // const count = useSelector();
  const dispatch = useDispatch();
  const {
    register,
    handleSubmit,
    watch,
    formState: { errors },
  } = useForm();

  const user = useSelector(selectLoggedInUser);
  console.log(user);
  return (
    <>
      {user && <Navigate to="/" replace={true}></Navigate>}
      {user?.email}
      <div className="flex min-h-full flex-1 flex-col justify-center items-center px-6 py-12 lg:px-8 ">
        <div
          className="bg-white p-4 shadow-md w-96"
          style={{ borderRadius: "40px" }}
        >
          <div className="sm:mx-auto sm:w-full sm:max-w-sm">
            <img className="mx-auto h-24 w-auto" src="" alt="SM Traders Logo" />
            <h2 className="mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900">
              Create a account
            </h2>
          </div>

          <div className="mt-10 sm:mx-auto sm:w-full sm:max-w-sm">
            <form
              noValidate
              className="space-y-6"
              onSubmit={handleSubmit((data) => {
                dispatch(
                  createUserAsync({
                    email: data.email,
                    password: data.password,
                    addresses: [],
                    role: "user",
                  })
                );
                console.log(data);
              })}
              method="POST"
            >
              <div>
                <label
                  htmlFor="email"
                  className="block text-sm font-medium leading-6 text-gray-900"
                >
                  Email address
                </label>
                <div className="mt-2">
                  <input
                    id="email"
                    {...register("email", {
                      required: "email is required",
                      pattern: {
                        value: /\b[\w\.-]+@[\w\.-]+\.\w{2,4}\b/gi,
                        message: "email is not valid",
                      },
                    })}
                    type="email"
                    autoComplete="email"
                    className="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
                  />
                  {errors.email && (
                    <p className="text-red-500">{errors.email.message}</p>
                  )}
                </div>
              </div>

              <div>
                <div className="flex items-center justify-between">
                  <label
                    htmlFor="password"
                    className="block text-sm font-medium leading-6 text-gray-900"
                  >
                    Password
                  </label>
                  <div className="text-sm">
                    <a
                      href="#"
                      className="font-semibold text-indigo-600 hover:text-indigo-500"
                    >
                      Forgot password?
                    </a>
                  </div>
                </div>
                <div className="mt-2">
                  <input
                    id="password"
                    {...register("password", {
                      required: "password is required",
                      pattern: {
                        value:
                          /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/gm,
                        message: `at least 8 characters\n
- must contain at least 1 uppercase letter, 1 lowercase letter, and 1 number\n
- Can contain special characters`,
                      },
                    })}
                    type="password"
                    className="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
                  />
                  {errors.password && (
                    <p className="text-red-500">{errors.password.message}</p>
                  )}
                </div>
              </div>
              <div>
                <div className="flex items-center justify-between">
                  <label
                    htmlFor="password"
                    className="block text-sm font-medium leading-6 text-gray-900"
                  >
                    Confirm Password
                  </label>
                  <div className="text-sm">
                    <Link
                      to="/forgot-password"
                      className="font-semibold text-indigo-600 hover:text-indigo-500"
                    >
                      Forgot password?
                    </Link>
                  </div>
                </div>
                <div className="mt-2">
                  <input
                    id="confirm-password"
                    {...register("confirmPassword", {
                      required: "password not matching",
                      validate: (value, formValues) =>
                        value === formValues.password ||
                        "password not matching",
                    })}
                    type="password"
                    className="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
                  />
                  {errors.confirmPassword && (
                    <p className="text-red-500">
                      {errors.confirmPassword.message}
                    </p>
                  )}
                </div>
              </div>

              <div>
                <button
                  type="submit"
                  className="flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
                >
                  Sign in
                </button>
              </div>
            </form>

            <p className="mt-10 text-center text-sm text-gray-500">
              Not a member?{" "}
              <Link
                to="/login"
                className="font-semibold leading-6 text-indigo-600 hover:text-indigo-500"
              >
                Login
              </Link>
            </p>
          </div>
        </div>
      </div>
    </>
  );
}

 
import React from "react";
import { useSelector } from "react-redux";
import { selectLoggedInUser } from "../authSlice";
import { Navigate  } from "react-router-dom";

function ProtectedAdmin({ children }) {
  const user = useSelector(selectLoggedInUser);
  if (!user) {
    return <Navigate to="/login" replace={true}/>;
  }
  if (user && user.role!=='admin') {
    return <Navigate to="/" replace={true}/>;
  }
  return children;
}

export default ProtectedAdmin;

 
import React from "react";
import { useSelector } from "react-redux";
import { selectLoggedInUser } from "../authSlice.js";
import { Navigate } from "react-router-dom";

function Protected({ children }) {
  const user = useSelector(selectLoggedInUser);
  if (!user) {
    return <Navigate to="/login" replace={true} />;
  }
  return children;
}

export default Protected;

 
import React, { useState } from "react";
import { useSelector, useDispatch } from "react-redux";
import {
  checkUserAsync,
  increment,
  incrementAsync,
  selectError,
  selectLoggedInUser,
} from "../authSlice.js";
import { Link, Navigate } from "react-router-dom";
import { useForm } from "react-hook-form";

export function Login() {
  // const count = useSelector();
  const dispatch = useDispatch();
  const error = useSelector(selectError);
  const user = useSelector(selectLoggedInUser);
  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm();

  return (
    <div>
      {user && <Navigate to="/" replace={true}></Navigate>}
      <div className="flex min-h-full flex-1 flex-col justify-center px-6 py-12 lg:px-8">
        <div className="sm:mx-auto sm:w-full sm:max-w-sm">
          <img
            className="mx-auto h-10 w-auto"
            src="https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600"
            alt="SM Traders Logo"
          />
          <h2 className="mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900">
            Sign in to your account
          </h2>
        </div>

        <div className="mt-10 sm:mx-auto sm:w-full sm:max-w-sm">
          <form
            noValidate
            onSubmit={handleSubmit((data) => {
              dispatch(
                checkUserAsync({ email: data.email, password: data.password })
              );
              console.log(data);
            })}
            className="space-y-6"
            action="#"
            method="POST"
          >
            <div>
              <label
                htmlFor="email"
                className="block text-sm font-medium leading-6 text-gray-900"
              >
                Email address
              </label>
              <div className="mt-2">
                <input
                  id="email"
                  name="email"
                  type="email"
                  autoComplete="email"
                  {...register("email", {
                    required: "email is required",
                    pattern: {
                      value: /\b[\w\.-]+@[\w\.-]+\.\w{2,4}\b/gi,
                      message: "email is not valid",
                    },
                  })}
                  required
                  className="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
                />
                {errors.email && (
                  <p className="text-red-500">{errors.email.message}</p>
                )}
              </div>
            </div>

            <div>
              <div className="flex items-center justify-between">
                <label
                  htmlFor="password"
                  className="block text-sm font-medium leading-6 text-gray-900"
                >
                  Password
                </label>
                <div className="text-sm">
                  <Link
                    to="/forgot-password"
                    className="font-semibold text-indigo-600 hover:text-indigo-500"
                  >
                    Forgot password?
                  </Link>
                </div>
              </div>
              <div className="mt-2">
                <input
                  id="password"
                  {...register("password", {
                    required: "password is required",
                  })}
                  type="password"
                  className="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
                />
                {errors.password && (
                  <p className="text-red-500">{errors.password.message}</p>
                )}
              </div>
              {error && <p className="text-red-500">{error.message}</p>}
            </div>

            <div>
              <button
                type="submit"
                className="flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
              >
                Sign in
              </button>
            </div>
          </form>

          <p className="mt-10 text-center text-sm text-gray-500">
            Not a member?{" "}
            <Link
              to="/signup"
              className="font-semibold leading-6 text-indigo-600 hover:text-indigo-500"
            >
              Create a account
            </Link>
          </p>
        </div>
      </div>
    </div>
  );
}
 
import React, { useState } from "react";
import { useSelector, useDispatch } from "react-redux";
import {
  checkUserAsync,
  increment,
  incrementAsync,
  selectError,
  selectLoggedInUser,
} from "../authSlice.js";
import { Link, Navigate } from "react-router-dom";
import { useForm } from "react-hook-form";

export function Login() {
  // const count = useSelector();
  const dispatch = useDispatch();
  const error = useSelector(selectError);
  const user = useSelector(selectLoggedInUser);
  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm();

  return (
    <div>
      {user && <Navigate to="/" replace={true}></Navigate>}
      <div className="flex min-h-full flex-1 flex-col justify-center px-6 py-12 lg:px-8">
        <div className="sm:mx-auto sm:w-full sm:max-w-sm">
          <img
            className="mx-auto h-10 w-auto"
            src="https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600"
            alt="SM Traders Logo"
          />
          <h2 className="mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900">
            Sign in to your account
          </h2>
        </div>

        <div className="mt-10 sm:mx-auto sm:w-full sm:max-w-sm">
          <form
            noValidate
            onSubmit={handleSubmit((data) => {
              dispatch(
                checkUserAsync({ email: data.email, password: data.password })
              );
              console.log(data);
            })}
            className="space-y-6"
            action="#"
            method="POST"
          >
            <div>
              <label
                htmlFor="email"
                className="block text-sm font-medium leading-6 text-gray-900"
              >
                Email address
              </label>
              <div className="mt-2">
                <input
                  id="email"
                  name="email"
                  type="email"
                  autoComplete="email"
                  {...register("email", {
                    required: "email is required",
                    pattern: {
                      value: /\b[\w\.-]+@[\w\.-]+\.\w{2,4}\b/gi,
                      message: "email is not valid",
                    },
                  })}
                  required
                  className="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
                />
                {errors.email && (
                  <p className="text-red-500">{errors.email.message}</p>
                )}
              </div>
            </div>

            <div>
              <div className="flex items-center justify-between">
                <label
                  htmlFor="password"
                  className="block text-sm font-medium leading-6 text-gray-900"
                >
                  Password
                </label>
                <div className="text-sm">
                  <Link
                    to="/forgot-password"
                    className="font-semibold text-indigo-600 hover:text-indigo-500"
                  >
                    Forgot password?
                  </Link>
                </div>
              </div>
              <div className="mt-2">
                <input
                  id="password"
                  {...register("password", {
                    required: "password is required",
                  })}
                  type="password"
                  className="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
                />
                {errors.password && (
                  <p className="text-red-500">{errors.password.message}</p>
                )}
              </div>
              {error && <p className="text-red-500">{error.message}</p>}
            </div>

            <div>
              <button
                type="submit"
                className="flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
              >
                Sign in
              </button>
            </div>
          </form>

          <p className="mt-10 text-center text-sm text-gray-500">
            Not a member?{" "}
            <Link
              to="/signup"
              className="font-semibold leading-6 text-indigo-600 hover:text-indigo-500"
            >
              Create a account
            </Link>
          </p>
        </div>
      </div>
    </div>
  );
}
 
"employe": [
    {
      "id": "1",
      "name": "John",
      "email": "john@gmail.com"
    },
    {
      "id": "2",
      "name": "John D",
      "email": "johnD@gmail.com"
    },
    {
      "id": "3",
      "name": "JohnP",
      "email": "johnP@gmail.com"
    }
  ]
 

    
    {
      "id": "802f",
      "email": "kazmiwrite@gmail.com",
      "password": "Sufi321321",
      "addresses": [],
      "role": "user"
    },
    {
      "id": "dcf7",
      "email": "kazmiwrite@gmail.com",
      "password": "Sufi321321",
      "addresses": [],
      "role": "user"
    }
 
export function createUser(userData) {
  return new Promise(async (resolve) => {
    const response = await fetch("http://localhost:8080/users", {
      method: "POST",
      body: JSON.stringify(userData),
      headers: { "content-type": "application/json" },
    });
    const data = await response.json();
    resolve({ data });
  });
}


// A mock function to mimic making an async request for data
export function checkUser(loginInfo) {
    return new Promise(async (resolve, reject) => {
      const email = loginInfo.email;
      const password = loginInfo.password;
      const response = await fetch("http://localhost:8080/users?email=" + email);
      const data = await response.json();
      // console.log({ data });
      if (data.length) {
        if (password === data[0].password) {
          resolve({ data: data[0] });
        } else {
          reject({ message: "wrong cred" });
        }
      } else {
        reject({ message: "user not found" });
      }
    });
  }
  
  export function signOut(userId) {
    return new Promise(async (resolve) => {
      resolve({ data: "success" });
    });
  }

  export function updateUser(update) {
    return new Promise(async (resolve) => {
      const response = await fetch("http://localhost:8080/users/"+update.id, {
        method: "PATCH",
        body: JSON.stringify(update),
        headers: { "content-type": "application/json" },
      });
      const data = await response.json();
      resolve({ data });
    });
  }
  
 
import { createAsyncThunk, createSlice } from "@reduxjs/toolkit";
import { checkUser, createUser, signOut } from "./authApi.js";
import { updateUser } from "./authApi.js";

const initialState = {
  loggedInUser: null,
  status: "idle",
  error: null,
};

// createUserAsync
export const createUserAsync = createAsyncThunk(
  "user/createUser",
  async (userData) => {
    const response = await createUser(userData);

    return response.data;
  }
);

export const checkUserAsync = createAsyncThunk(
  "user/checkUser",
  async (loginInfo) => {
    const response = await checkUser(loginInfo);

    return response.data;
  }
);

export const updateUserAsync = createAsyncThunk(
  "cart/updateUserAsync",
  async (update) => {
    const response = await updateUser(update);

    return response.data;
  }
);

export const signOutAsync = createAsyncThunk(
  "user/signOut",
  async (loginInfo) => {
    const response = await signOut(loginInfo);

    return response.data;
  }
);

export const authSlice = createSlice({
  name: "user",
  initialState,
  reducers: {
    // increment: (state) => {
    //   state.value += 1;
    // },
  },
  extraReducers: (builder) => {
    builder
      .addCase(createUserAsync.pending, (state) => {
        state.status = "loading";
      })
      .addCase(createUserAsync.fulfilled, (state, action) => {
        state.status = "idle";
        state.loggedInUser = action.payload;
      })
      .addCase(createUserAsync.rejected, (state, action) => {
        state.status = "idle";
        state.error = action.error;
      })
      .addCase(checkUserAsync.pending, (state) => {
        state.status = "loading";
      })
      .addCase(checkUserAsync.fulfilled, (state, action) => {
        state.status = "idle";
        state.loggedInUser = action.payload;
      })
      .addCase(checkUserAsync.rejected, (state, action) => {
        state.status = "idle";
        state.error = action.error;
      })
      .addCase(updateUserAsync.pending, (state) => {
        state.status = "loading";
      })
      .addCase(updateUserAsync.fulfilled, (state, action) => {
        state.status = "idle";
        state.loggedInUser = action.payload;
      })
      .addCase(updateUserAsync.rejected, (state, action) => {
        state.status = "idle";
        state.error = action.error;
      })
      .addCase(signOutAsync.pending, (state) => {
        state.status = "loading";
      })
      .addCase(signOutAsync.fulfilled, (state, action) => {
        state.status = "idle";
        state.loggedInUser = null;
      });
  },
});

export const selectLoggedInUser = (state) => state.auth.loggedInUser;
export const selectError = (state) => state.auth.error;
export const { increment } = authSlice.actions;

export default authSlice.reducer;

 
import React, { useState } from "react";
import { useSelector, useDispatch } from "react-redux";
import {
  checkUserAsync,
  increment,
  incrementAsync,
  selectError,
  selectLoggedInUser,
} from "../authSlice.js";
import { Link, Navigate } from "react-router-dom";
import { useForm } from "react-hook-form";

export function Login() {
  // const count = useSelector();
  const dispatch = useDispatch();
  const error = useSelector(selectError);
  const user = useSelector(selectLoggedInUser);
  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm();

  return (
    <div>
      {user && <Navigate to="/" replace={true}></Navigate>}
      <div className="flex min-h-full flex-1 flex-col justify-center px-6 py-12 lg:px-8">
        <div className="sm:mx-auto sm:w-full sm:max-w-sm">
          <img
            className="mx-auto h-10 w-auto"
            src="https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600"
            alt="SM Traders Logo"
          />
          <h2 className="mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900">
            Sign in to your account
          </h2>
        </div>

        <div className="mt-10 sm:mx-auto sm:w-full sm:max-w-sm">
          <form
            noValidate
            onSubmit={handleSubmit((data) => {
              dispatch(
                checkUserAsync({ email: data.email, password: data.password })
              );
              console.log(data);
            })}
            className="space-y-6"
            action="#"
            method="POST"
          >
            <div>
              <label
                htmlFor="email"
                className="block text-sm font-medium leading-6 text-gray-900"
              >
                Email address
              </label>
              <div className="mt-2">
                <input
                  id="email"
                  name="email"
                  type="email"
                  autoComplete="email"
                  {...register("email", {
                    required: "email is required",
                    pattern: {
                      value: /\b[\w\.-]+@[\w\.-]+\.\w{2,4}\b/gi,
                      message: "email is not valid",
                    },
                  })}
                  required
                  className="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
                />
                {errors.email && (
                  <p className="text-red-500">{errors.email.message}</p>
                )}
              </div>
            </div>

            <div>
              <div className="flex items-center justify-between">
                <label
                  htmlFor="password"
                  className="block text-sm font-medium leading-6 text-gray-900"
                >
                  Password
                </label>
                <div className="text-sm">
                  <Link
                    to="/forgot-password"
                    className="font-semibold text-indigo-600 hover:text-indigo-500"
                  >
                    Forgot password?
                  </Link>
                </div>
              </div>
              <div className="mt-2">
                <input
                  id="password"
                  {...register("password", {
                    required: "password is required",
                  })}
                  type="password"
                  className="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
                />
                {errors.password && (
                  <p className="text-red-500">{errors.password.message}</p>
                )}
              </div>
              {error && <p className="text-red-500">{error.message}</p>}
            </div>

            <div>
              <button
                type="submit"
                className="flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
              >
                Sign in
              </button>
            </div>
          </form>

          <p className="mt-10 text-center text-sm text-gray-500">
            Not a member?{" "}
            <Link
              to="/signup"
              className="font-semibold leading-6 text-indigo-600 hover:text-indigo-500"
            >
              Create a account
            </Link>
          </p>
        </div>
      </div>
    </div>
  );
}

 
import React from "react";
import ReactDOM from "react-dom";
import { Provider } from "react-redux";
import { store } from "./app/store";
import App from "./App";
// import { BrowserRouter } from "react-router-dom";

ReactDOM.render(
    <Provider store={store}>
      <App />
    </Provider>,
  document.getElementById("root")
);

 
../Features/auth/authSlice.js
 

ITEMS_PER_PAGE
 
../api/userApi
 
./features/userSlice
 

import userReducer from "../features/userSlice";
 
import React, { useEffect, useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import {
  fetchAllOrdersAsync,
  selectOrders,
  selectTotalOrders,
  updateOrderAsync,
} from "../../order/orderSlice";
import { XMarkIcon, EyeIcon, PencilIcon } from "@heroicons/react/24/outline";

function UserManagement() {
  const [page, setPage] = useState(1);
  const dispatch = useDispatch();
  const orders = useSelector(selectOrders);
  const totalOrders = useSelector(selectTotalOrders);
  const [editableOrderId, setEditableOrderId] = useState(-1);

  useEffect(() => {
    const pagination = { _page: page, _limit: ITEMS_PER_PAGE };
    dispatch(fetchAllOrdersAsync(pagination));
  }, [dispatch, page]);

  const handleEdit = (order) => {
    setEditableOrderId(order.id);
  };
  const handleShow = () => {
    console.log("show");
  };
  const handleUpdate = (e, order) => {
    const updateOrder = { ...order, status: e.target.value };
    dispatch(updateOrderAsync(updateOrder));
    setEditableOrderId(-1);
  };

  const chooseColor = (status) => {
    switch (status) {
      case "pending":
        return "bg-purple-200 text-purple-600"; 
      case "dispatached":
        return "bg-yello-200 text-yellow-600";
      case "delivered":
        return "bg-green-200 text-green-600";
      case "cencelled":
        return "bg-red-200 text-red-600";
      default:
        return "bg-purple-200 text-purple-600"; 
    }
  };
  return (
    <div className="overflow-x-auto">
      <div className=" bg-gray-100 flex items-center justify-center bg-gray-100 font-sans overflow-hidden">
        <div className="w-full ">
          <div className="bg-white shadow-md rounded my-6">
            <table className="min-w-max w-full table-auto">
              <thead> 
                <tr className="bg-gray-200 text-gray-600 uppercase text-sm leading-normal">
                  <th className="py-3 px-6 text-left">Order</th>
                  <th className="py-3 px-6 text-left">Client</th>
                  <th className="py-3 px-6 text-center">Total Amount </th>
                  <th className="py-3 px-6 text-center">Shiping </th>
                  <th className="py-3 px-6 text-center">Status</th>
                  <th className="py-3 px-6 text-center">Actions</th>
                </tr>
              </thead>
              <tbody className="text-gray-600 text-sm font-light">
                {orders.map((order) => (
                  <tr className="border-b border-gray-200 hover:bg-gray-100">
                    <td className="py-3 px-6 text-left whitespace-nowrap">
                      <div className="flex items-center">
                        <div className="mr-2"></div>
                        <span className="font-medium">{order.id}</span>
                      </div>
                    </td>
                    <td className="py-3 px-6 text-left">
                      {order.items.map((item) => (
                        <div className="flex items-center">
                          <div className="mr-2">
                            <img
                              className="w-6 h-6 rounded-full"
                              src={item.thumbnail}
                            />
                          </div>
                          <span>
                            {item.title} - {item.quantity} -{" "}
                            {discountPrice(item)}
                          </span>
                        </div>
                      ))}
                    </td>
                    <td className="py-3 px-6 text-center">
                      <div className="flex items-center justify-center">
                        {order.totalAmount}
                      </div>
                    </td>
                    <td className="py-3 px-6 text-center">
                      <div className="">
                        <div>
                          {" "}
                          <strong> {order.selectedAddress.name}</strong>
                        </div>
                        <div>{order.selectedAddress.street}</div>
                        <div>{order.selectedAddress.city}</div>
                        <div>{order.selectedAddress.state}</div>
                        <div>{order.selectedAddress.pinCode}</div>
                        <div>{order.selectedAddress.phone}</div>
                      </div>
                    </td>
                    <td className="py-3 px-6 text-center">
                      {order.id === editableOrderId ? (
                        <select onChange={(e) => handleUpdate(e, order)}>
                          <option value="pending">Pending</option>
                          <option value="dispatched">Dispatched</option>
                          <option value="delivered">Delivered</option>
                          <option value="cencelled">Cancelled</option>
                        </select>
                      ) : (
                        <span
                          className={`${chooseColor(
                            order.status
                          )} py-1 px-3 rounded-full text-xs`}
                        >
                          {order.status}
                        </span>
                      )}
                    </td>
                    <td className="py-3 px-6 text-center">
                      <div className="flex item-center justify-center">
                        <div className="w-4 mr-4 transform hover:text-purple-500 hover:scale-120">
                          <EyeIcon
                            className="w-7 h-7"
                            onClick={(e) => handleShow(order)}
                          ></EyeIcon>
                        </div>
                        <div className="w-6 mr-2 transform hover:text-purple-500 hover:scale-120">
                          <PencilIcon
                            className="w-7 h-7"
                            onClick={(e) => handleEdit(order)}
                          ></PencilIcon>
                        </div>
                      </div>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  );
}

export default UserManagement;
 
export function createUserRole(order) {
    return new Promise(async (resolve) => {
      const response = await fetch("http://localhost:8080/orders", {
        method: "POST",
        body: JSON.stringify(order),
        headers: { "content-type": "application/json" },
      });
      const data = await response.json();
      resolve({ data });
    });
  }
 

      "status"
 
 .addCase(fetchAllOrdersAsync.pending, (state) => {
      state.status = 'loading';
    })
    .addCase(fetchAllOrdersAsync.fulfilled, (state, action) => {
      state.status = 'idle';
      state.orders=action.payload.orders;
      state.totalOrders=action.payload.totalOrders
    })
    .addCase(updateOrderAsync.pending, (state) => {
      state.status = 'loading';
    })
    .addCase(updateOrderAsync.fulfilled, (state, action) => {
      state.status = 'idle';
      const index=state.orders.findIndex(order=>order.id===action.payload.id);
      state.orders[index]=action.payload;
    });
 



// export const fetchAllOrdersAsync = createAsyncThunk(
//   'order/fetchAllOrders',
//   async ({sort,pagination}) => {
//     const response = await fetchAllOrders(sort,pagination);

//     return response.data;
//   }
// );

export const fetchAllOrdersAsync = createAsyncThunk(
  'order/fetchAllOrders',
  async ({sort, pagination}) => {
    const response = await fetchAllOrders(sort,pagination);
    // The value we return becomes the `fulfilled` action payload
    return response.data;
  }
);

 


export const updateOrderAsync = createAsyncThunk(
  'order/updateOrder',
  async (amount) => {
    const response = await updateOrder(amount);

    return response.data;
  }
);
 

import { discountPrice, ITEMS_PER_PAGE } from "../../../app/constants";
 
AdminOrders
 
import React, { useState } from "react";

function UserManagement() {
  const [users, setUsers] = useState([
    { id: 1, name: "John Michael", job: "Manager", date: "23/04/18", role: "Admin", status: "Active" },
    { id: 2, name: "Alexa Liras", job: "Developer", date: "23/04/18", role: "User", status: "Inactive" },
    { id: 3, name: "Laurent Perrier", job: "Executive", date: "19/09/17", role: "User", status: "Active" },
    { id: 4, name: "Michael Levi", job: "Developer", date: "24/12/08", role: "Admin", status: "Inactive" },
    { id: 5, name: "Richard Gran", job: "Manager", date: "04/10/21", role: "User", status: "Active" },
  ]);

  const [newUser, setNewUser] = useState({ name: "", job: "", role: "User", status: "Active" });

  // Add a new user
  const handleAddUser = () => {
    if (newUser.name && newUser.job) {
      setUsers([
        ...users,
        { id: Date.now(), name: newUser.name, job: newUser.job, date: new Date().toLocaleDateString(), role: newUser.role, status: newUser.status },
      ]);
      setNewUser({ name: "", job: "", role: "User", status: "Active" });
    }
  };

  // Delete a user
  const handleDeleteUser = (id) => {
    setUsers(users.filter((user) => user.id !== id));
  };

  // Update user details
  const handleEditUser = (id, updatedDetails) => {
    setUsers(users.map((user) => (user.id === id ? { ...user, ...updatedDetails } : user)));
  };

  // Assign role
  const handleAssignRole = (id, role) => {
    setUsers(users.map((user) => (user.id === id ? { ...user, role } : user)));
  };

  return (
    <div className="p-4">
      <h2 className="mb-4 text-lg font-bold text-gray-800">User Management</h2>
      
      {/* Add User Section */}
      <div className="mb-6">
        <h3 className="text-sm font-bold">Add User</h3>
        <div className="flex items-center gap-4">
          <input
            type="text"
            placeholder="Name"
            className="p-2 border border-gray-300 rounded"
            value={newUser.name}
            onChange={(e) => setNewUser({ ...newUser, name: e.target.value })}
          />
          <input
            type="text"
            placeholder="Job"
            className="p-2 border border-gray-300 rounded"
            value={newUser.job}
            onChange={(e) => setNewUser({ ...newUser, job: e.target.value })}
          />
          <select
            className="p-2 border border-gray-300 rounded"
            value={newUser.role}
            onChange={(e) => setNewUser({ ...newUser, role: e.target.value })}
          >
            <option value="User">User</option>
            <option value="Admin">Admin</option>
          </select>
          <button onClick={handleAddUser} className="px-4 py-2 text-white bg-blue-500 rounded">Add User</button>
        </div>
      </div>

      {/* Users Table */}
      <div className="relative flex flex-col w-full overflow-scroll text-gray-700 bg-white shadow-md rounded-xl bg-clip-border">
        <table className="w-full text-left table-auto min-w-max">
          <thead>
            <tr>
              <th className="p-4 border-b border-gray-100 bg-gray-50">Name</th>
              <th className="p-4 border-b border-gray-100 bg-gray-50">Job</th>
              <th className="p-4 border-b border-gray-100 bg-gray-50">Date</th>
              <th className="p-4 border-b border-gray-100 bg-gray-50">Role</th>
              <th className="p-4 border-b border-gray-100 bg-gray-50">Status</th>
              <th className="p-4 border-b border-gray-100 bg-gray-50">Actions</th>
            </tr>
          </thead>
          <tbody>
            {users.map((user) => (
              <tr key={user.id}>
                <td className="p-4 border-b">{user.name}</td>
                <td className="p-4 border-b">{user.job}</td>
                <td className="p-4 border-b">{user.date}</td>
                <td className="p-4 border-b">{user.role}</td>
                <td className="p-4 border-b">{user.status}</td>
                <td className="p-4 border-b flex gap-2">
                  <button
                    onClick={() =>
                      handleEditUser(user.id, { name: "Edited Name", status: user.status === "Active" ? "Inactive" : "Active" })
                    }
                    className="px-2 py-1 text-white bg-green-500 rounded"
                  >
                    Edit
                  </button>
                  <button
                    onClick={() => handleDeleteUser(user.id)}
                    className="px-2 py-1 text-white bg-red-500 rounded"
                  >
                    Delete
                  </button>
                  <button
                    onClick={() => handleAssignRole(user.id, user.role === "Admin" ? "User" : "Admin")}
                    className="px-2 py-1 text-white bg-blue-500 rounded"
                  >
                    Assign Role
                  </button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
  );
}

export default UserManagement;

 
import React from "react";

function UserManagement() {
  return (
    <div>
      <div class="relative flex flex-col w-full h-full overflow-scroll text-gray-700 bg-white shadow-md rounded-xl bg-clip-border">
        <table class="w-full text-left table-auto min-w-max">
          <thead>
            <tr>
              <th class="p-4 border-b border-blue-gray-100 bg-blue-gray-50">
                <p class="block font-sans text-sm antialiased font-normal leading-none text-blue-gray-900 opacity-70">
                  Name
                </p>
              </th>
              <th class="p-4 border-b border-blue-gray-100 bg-blue-gray-50">
                <p class="block font-sans text-sm antialiased font-normal leading-none text-blue-gray-900 opacity-70">
                  Job
                </p>
              </th>
              <th class="p-4 border-b border-blue-gray-100 bg-blue-gray-50">
                <p class="block font-sans text-sm antialiased font-normal leading-none text-blue-gray-900 opacity-70">
                  Employed
                </p>
              </th>
              <th class="p-4 border-b border-blue-gray-100 bg-blue-gray-50">
                <p class="block font-sans text-sm antialiased font-normal leading-none text-blue-gray-900 opacity-70"></p>
              </th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td class="p-4 border-b border-blue-gray-50">
                <p class="block font-sans text-sm antialiased font-normal leading-normal text-blue-gray-900">
                  John Michael
                </p>
              </td>
              <td class="p-4 border-b border-blue-gray-50">
                <p class="block font-sans text-sm antialiased font-normal leading-normal text-blue-gray-900">
                  Manager
                </p>
              </td>
              <td class="p-4 border-b border-blue-gray-50">
                <p class="block font-sans text-sm antialiased font-normal leading-normal text-blue-gray-900">
                  23/04/18
                </p>
              </td>
              <td class="p-4 border-b border-blue-gray-50">
                <a
                  href="#"
                  class="block font-sans text-sm antialiased font-medium leading-normal text-blue-gray-900"
                >
                  Edit
                </a>
              </td>
            </tr>
            <tr>
              <td class="p-4 border-b border-blue-gray-50">
                <p class="block font-sans text-sm antialiased font-normal leading-normal text-blue-gray-900">
                  Alexa Liras
                </p>
              </td>
              <td class="p-4 border-b border-blue-gray-50">
                <p class="block font-sans text-sm antialiased font-normal leading-normal text-blue-gray-900">
                  Developer
                </p>
              </td>
              <td class="p-4 border-b border-blue-gray-50">
                <p class="block font-sans text-sm antialiased font-normal leading-normal text-blue-gray-900">
                  23/04/18
                </p>
              </td>
              <td class="p-4 border-b border-blue-gray-50">
                <a
                  href="#"
                  class="block font-sans text-sm antialiased font-medium leading-normal text-blue-gray-900"
                >
                  Edit
                </a>
              </td>
            </tr>
            <tr>
              <td class="p-4 border-b border-blue-gray-50">
                <p class="block font-sans text-sm antialiased font-normal leading-normal text-blue-gray-900">
                  Laurent Perrier
                </p>
              </td>
              <td class="p-4 border-b border-blue-gray-50">
                <p class="block font-sans text-sm antialiased font-normal leading-normal text-blue-gray-900">
                  Executive
                </p>
              </td>
              <td class="p-4 border-b border-blue-gray-50">
                <p class="block font-sans text-sm antialiased font-normal leading-normal text-blue-gray-900">
                  19/09/17
                </p>
              </td>
              <td class="p-4 border-b border-blue-gray-50">
                <a
                  href="#"
                  class="block font-sans text-sm antialiased font-medium leading-normal text-blue-gray-900"
                >
                  Edit
                </a>
              </td>
            </tr>
            <tr>
              <td class="p-4 border-b border-blue-gray-50">
                <p class="block font-sans text-sm antialiased font-normal leading-normal text-blue-gray-900">
                  Michael Levi
                </p>
              </td>
              <td class="p-4 border-b border-blue-gray-50">
                <p class="block font-sans text-sm antialiased font-normal leading-normal text-blue-gray-900">
                  Developer
                </p>
              </td>
              <td class="p-4 border-b border-blue-gray-50">
                <p class="block font-sans text-sm antialiased font-normal leading-normal text-blue-gray-900">
                  24/12/08
                </p>
              </td>
              <td class="p-4 border-b border-blue-gray-50">
                <a
                  href="#"
                  class="block font-sans text-sm antialiased font-medium leading-normal text-blue-gray-900"
                >
                  Edit
                </a>
              </td>
            </tr>
            <tr>
              <td class="p-4">
                <p class="block font-sans text-sm antialiased font-normal leading-normal text-blue-gray-900">
                  Richard Gran
                </p>
              </td>
              <td class="p-4">
                <p class="block font-sans text-sm antialiased font-normal leading-normal text-blue-gray-900">
                  Manager
                </p>
              </td>
              <td class="p-4">
                <p class="block font-sans text-sm antialiased font-normal leading-normal text-blue-gray-900">
                  04/10/21
                </p>
              </td>
              <td class="p-4">
                <a
                  href="#"
                  class="block font-sans text-sm antialiased font-medium leading-normal text-blue-gray-900"
                >
                  Edit
                </a>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
  );
}

export default UserManagement;

 
Admin Page
 
<div className="flex space-x-4">
                {navigation.map((item) => (
                  <a
                    key={item.name}
                    href={item.href}
                    aria-current={item.current ? "page" : undefined}
                    className={classNames(
                      item.current
                        ? "bg-gray-900 text-white"
                        : "text-gray-300 hover:bg-gray-700 hover:text-white",
                      "rounded-md px-3 py-2 text-sm font-medium"
                    )}
                  >
                    {item.name}
                  </a>
                ))}
              </div>
 

      <AdminPanel></AdminPanel>
 

  { name: "Admin", href: "#", current: false },
 

      hello
 

        <AdminPanel></AdminPanel>
 
 <MenuItems
                transition
                className="absolute right-0 z-10 mt-2 w-48 origin-top-right rounded-md bg-white py-1 shadow-lg ring-1 ring-black/5 transition focus:outline-none data-[closed]:scale-95 data-[closed]:transform data-[closed]:opacity-0 data-[enter]:duration-100 data-[leave]:duration-75 data-[enter]:ease-out data-[leave]:ease-in"
              >
                <MenuItem>
                  <a
                    href="#"
                    className="block px-4 py-2 text-sm text-gray-700 data-[focus]:bg-gray-100 data-[focus]:outline-none"
                  >
                    Your Profile
                  </a>
                </MenuItem>
                <MenuItem>
                  <a
                    href="#"
                    className="block px-4 py-2 text-sm text-gray-700 data-[focus]:bg-gray-100 data-[focus]:outline-none"
                  >
                    Settings
                  </a>
                </MenuItem>
                <MenuItem>
                  <a
                    href="#"
                    className="block px-4 py-2 text-sm text-gray-700 data-[focus]:bg-gray-100 data-[focus]:outline-none"
                  >
                    Sign out
                  </a>
                </MenuItem>
              </MenuItems>
 
../Features/authApi.js
 
../Features/authApi.js
 

  </BrowserRouter>,
 

  <BrowserRouter>
 
router
 
Router
 

  Route,
  Link,
 

import Navbar from "../features/navbar/Navbar";
 

import Footer from "../features/comman/Footer";
 

      <Footer></Footer>
 
../authSlice
 

      <Login></Login>
 
body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}
 

  "cart": [],
  "orders": [
    {
      "id": "9f6b",
      "items": [
        {
          "id": "8093",
          "title": "Essence Mascara Lash Princess lala",
          "description": "The Essence Mascara Lash Princess is a popular mascara known for its volumizing and lengthening effects. Achieve dramatic lashes with this long-lasting and cruelty-free formula.",
          "category": "skincare",
          "price": 12,
          "discountPercentage": 1,
          "rating": 0,
          "stock": 5,
          "tags": [
            "beauty",
            "mascara"
          ],
          "brand": "Foundation",
          "sku": "RCH45Q1A",
          "weight": 2,
          "dimensions": {
            "width": 23.17,
            "height": 14.43,
            "depth": 28.01
          },
          "warrantyInformation": "1 month warranty",
          "shippingInformation": "Ships in 1 month",
          "availabilityStatus": "Low Stock",
          "reviews": [
            {
              "rating": 2,
              "comment": "Very unhappy with my purchase!",
              "date": "2024-05-23T08:56:21.618Z",
              "reviewerName": "John Doe",
              "reviewerEmail": "john.doe@x.dummyjson.com"
            },
            {
              "rating": 2,
              "comment": "Not as described!",
              "date": "2024-05-23T08:56:21.618Z",
              "reviewerName": "Nolan Gonzalez",
              "reviewerEmail": "nolan.gonzalez@x.dummyjson.com"
            },
            {
              "rating": 5,
              "comment": "Very satisfied!",
              "date": "2024-05-23T08:56:21.618Z",
              "reviewerName": "Scarlett Wright",
              "reviewerEmail": "scarlett.wright@x.dummyjson.com"
            }
          ],
          "returnPolicy": "30 days return policy",
          "minimumOrderQuantity": 24,
          "meta": {
            "createdAt": "2024-05-23T08:56:21.618Z",
            "updatedAt": "2024-05-23T08:56:21.618Z",
            "barcode": "9164035109868",
            "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
          },
          "images": [
            "https://cdn.dummyjson.com/products/images/beauty/Essence%20Mascara%20Lash%20Princess/1.png",
            "https://static.beautytocare.com/cdn-cgi/image/width=1440,height=1200,f=auto/media/catalog/product//e/s/essence-lash-princess-curl-volume-mascara-12ml.jpg",
            "https://cdn.dummyjson.com/products/images/beauty/Essence%20Mascara%20Lash%20Princess/1.png",
            "https://cdn.dummyjson.com/products/images/beauty/Essence%20Mascara%20Lash%20Princess/thumbnail.png"
          ],
          "thumbnail": "https://cdn.dummyjson.com/products/images/beauty/Essence%20Mascara%20Lash%20Princess/thumbnail.png",
          "deleted": false,
          "productId": "1",
          "quantity": 1,
          "user": "8e1e"
        }
      ],
      "totalAmount": 12,
      "totalItems": 1,
      "user": {
        "id": "8e1e",
        "email": "demo@gmail.com",
        "password": "Demo@321",
        "addresses": [
          {
            "name": "demo",
            "email": "kazmiwrite@gmail.com",
            "city": "mzn",
            "state": "Uttar Pradesh",
            "pinCode": "122",
            "phone": "08057070230",
            "street": "India"
          }
        ],
        "role": "user"
      },
      "paymentMethod": "cash",
      "selectedAddress": {
        "name": "demo",
        "email": "kazmiwrite@gmail.com",
        "city": "mzn",
        "state": "Uttar Pradesh",
        "pinCode": "122",
        "phone": "08057070230",
        "street": "India"
      },
      "status": "pending"
    },
    {
      "id": "f817",
      "items": [
        {
          "id": "bfc1",
          "title": "gshock is good",
          "brand": "Boots",
          "category": "smartphones",
          "price": 2800,
          "discountPercentage": 23,
          "stock": 5,
          "thumbnail": "https://m.media-amazon.com/images/I/71girhyQcJL._SX679_.jpg",
          "images": [
            "https://m.media-amazon.com/images/I/71girhyQcJL._SX679_.jpg",
            "https://m.media-amazon.com/images/I/71girhyQcJL._SX679_.jpg",
            "https://m.media-amazon.com/images/I/71girhyQcJL._SX679_.jpg",
            "https://m.media-amazon.com/images/I/71girhyQcJL._SX679_.jpg"
          ],
          "rating": 0,
          "productId": "8f55",
          "quantity": 1,
          "user": "e87f"
        }
      ],
      "totalAmount": 2156,
      "totalItems": 1,
      "user": {
        "id": "e87f",
        "email": "sufi@gmail.com",
        "password": "Sufiya@321",
        "addresses": [
          {
            "name": "Sufi",
            "email": "kazmiwrite@gmail.com",
            "phone": "08057070230",
            "street": "Up Muzaffarnagar",
            "city": "muzaffarnagar",
            "state": "Uttar Pradesh",
            "pinCode": "21212121"
          }
        ],
        "role": "user"
      },
      "paymentMethod": "cash",
      "selectedAddress": {
        "name": "Sufi",
        "email": "kazmiwrite@gmail.com",
        "phone": "08057070230",
        "street": "Up Muzaffarnagar",
        "city": "muzaffarnagar",
        "state": "Uttar Pradesh",
        "pinCode": "21212121"
      },
      "status": "dispatched"
    },
    {
      "id": "ad9b",
      "items": [
        {
          "id": "194c",
          "title": "Powder Canister fila",
          "description": "The Powder Canister is a finely milled setting powder designed to set makeup and control shine. With a lightweight and translucent formula, it provides a smooth and matte finish.",
          "category": "skincare",
          "price": 14,
          "discountPercentage": 18,
          "rating": 0,
          "stock": 5,
          "tags": [
            "beauty",
            "face powder"
          ],
          "brand": "Foundation",
          "sku": "9EN8WLT2",
          "weight": 8,
          "dimensions": {
            "width": 24.16,
            "height": 10.7,
            "depth": 11.07
          },
          "warrantyInformation": "2 year warranty",
          "shippingInformation": "Ships in 1-2 business days",
          "availabilityStatus": "In Stock",
          "reviews": [
            {
              "rating": 5,
              "comment": "Very happy with my purchase!",
              "date": "2024-05-23T08:56:21.618Z",
              "reviewerName": "Ethan Thompson",
              "reviewerEmail": "ethan.thompson@x.dummyjson.com"
            },
            {
              "rating": 4,
              "comment": "Great value for money!",
              "date": "2024-05-23T08:56:21.618Z",
              "reviewerName": "Levi Hicks",
              "reviewerEmail": "levi.hicks@x.dummyjson.com"
            },
            {
              "rating": 5,
              "comment": "Highly impressed!",
              "date": "2024-05-23T08:56:21.618Z",
              "reviewerName": "Hazel Gardner",
              "reviewerEmail": "hazel.gardner@x.dummyjson.com"
            }
          ],
          "returnPolicy": "60 days return policy",
          "minimumOrderQuantity": 25,
          "meta": {
            "createdAt": "2024-05-23T08:56:21.618Z",
            "updatedAt": "2024-05-23T08:56:21.618Z",
            "barcode": "0516267971277",
            "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
          },
          "images": [
            "https://cdn.dummyjson.com/products/images/beauty/Powder%20Canister/1.png",
            "https://cdn.dummyjson.com/products/images/beauty/Powder%20Canister/1.png",
            "https://cdn.dummyjson.com/products/images/beauty/Powder%20Canister/1.png",
            "https://cdn.dummyjson.com/products/images/beauty/Eyeshadow%20Palette%20with%20Mirror/thumbnail.png"
          ],
          "thumbnail": "https://cdn.dummyjson.com/products/images/beauty/Eyeshadow%20Palette%20with%20Mirror/thumbnail.png",
          "deleted": false,
          "productId": "3",
          "quantity": 2,
          "user": "db6b"
        }
      ],
      "totalAmount": 22,
      "totalItems": 2,
      "user": {
        "id": "db6b",
        "email": "kazmi@gmail.com",
        "password": "Kazmi@321",
        "addresses": [
          {
            "name": "kazmi",
            "email": "kazmiwrite@gmail.com",
            "phone": "08057070230",
            "street": "Up Muzaffarnagar",
            "city": "muzaffarnagar",
            "state": "Uttar Pradesh",
            "pinCode": "212121212"
          }
        ],
        "role": "user"
      },
      "paymentMethod": "cash",
      "selectedAddress": {
        "name": "kazmi",
        "email": "kazmiwrite@gmail.com",
        "phone": "08057070230",
        "street": "Up Muzaffarnagar",
        "city": "muzaffarnagar",
        "state": "Uttar Pradesh",
        "pinCode": "212121212"
      },
      "status": "cencelled"
    }
  ]
 

    {
      "id": "73d8",
      "email": "admin@gmail.com",
      "password": "Admin@321",
      "addresses": [
        {
          "name": "adminnn",
          "email": "admin",
          "city": "admin",
          "state": "admin",
          "pinCode": "212121",
          "phone": "98989898",
          "street": "admin"
        }
      ],
      "role": "admin"
    },
    {
      "id": "8e1e",
      "email": "demo@gmail.com",
      "password": "Demo@321",
      "addresses": [
        {
          "name": "demO",
          "email": "kazmiwrite@gmail.com",
          "phone": "08057070230",
          "street": "India",
          "city": "mzn",
          "state": "Uttar Pradesh",
          "pinCode": "122"
        }
      ],
      "role": "user"
    },
    {
      "id": "e87f",
      "email": "sufi@gmail.com",
      "password": "Sufiya@321",
      "addresses": [
        {
          "name": "Sufi",
          "email": "kazmiwrite@gmail.com",
          "phone": "08057070230",
          "street": "Up Muzaffarnagar",
          "city": "muzaffarnagar",
          "state": "Uttar Pradesh",
          "pinCode": "21212121"
        },
        {
          "name": "Sufiii",
          "email": "kazmiwrite@gmail.com",
          "phone": "08057070230",
          "street": "Up Muzaffarnagar",
          "city": "muzaffarnagar",
          "state": "Uttar Pradesh",
          "pinCode": "21212121"
        }
      ],
      "role": "user"
    },
    {
      "id": "db6b",
      "email": "kazmi@gmail.com",
      "password": "Kazmi@321",
      "addresses": [
        {
          "name": "kazmi",
          "email": "kazmiwrite@gmail.com",
          "phone": "08057070230",
          "street": "Up Muzaffarnagar",
          "city": "muzaffarnagar",
          "state": "Uttar Pradesh",
          "pinCode": "212121212"
        }
      ],
      "role": "user"
    }
 
"brands": [
    {
      "value": "Lipstick",
      "label": "Lipstick",
      "checked": false,
      "id": "813c"
    },
    {
      "value": "Foundation",
      "label": "Foundation",
      "checked": false,
      "id": "7bee"
    },
    {
      "value": "Mascara",
      "label": "Mascara",
      "checked": false,
      "id": "fb9e"
    },
    {
      "value": "Eyeliner",
      "label": "Eyeliner",
      "checked": false,
      "id": "148c"
    },
    {
      "value": "Perfume",
      "label": "Perfume",
      "checked": false,
      "id": "95f5"
    },
    {
      "value": "Skincare",
      "label": "Skincare",
      "checked": false,
      "id": "bc37"
    },
    {
      "value": "Casual Shoes",
      "label": "Casual Shoes",
      "checked": false,
      "id": "28e0"
    },
    {
      "value": "Sports Shoes",
      "label": "Sports Shoes",
      "checked": false,
      "id": "15e4"
    },
    {
      "value": "Running Shoes",
      "label": "Running Shoes",
      "checked": false,
      "id": "801c"
    },
    {
      "value": "Sneakers",
      "label": "Sneakers",
      "checked": false,
      "id": "fde6"
    },
    {
      "value": "Sandals",
      "label": "Sandals",
      "checked": false,
      "id": "e480"
    },
    {
      "value": "Flip Flops",
      "label": "Flip Flops",
      "checked": false,
      "id": "9865"
    },
    {
      "value": "Boots",
      "label": "Boots",
      "checked": false,
      "id": "4139"
    },
    {
      "value": "Slippers",
      "label": "Slippers",
      "checked": false,
      "id": "61e6"
    },
    {
      "value": "Groceries",
      "label": "Groceries",
      "id": "e818"
    },
    {
      "value": "Fruits",
      "label": "Fruits",
      "id": "3fcd"
    },
    {
      "value": "Vegetables",
      "label": "Vegetables",
      "id": "6267"
    },
    {
      "value": "Seafood",
      "label": "Seafood",
      "id": "23a1"
    },
    {
      "value": "Condiments",
      "label": "Condiments",
      "id": "f8ac"
    },
    {
      "value": "Desserts",
      "label": "Desserts",
      "id": "6a6a"
    },
    {
      "value": "Beverages",
      "label": "Beverages",
      "id": "02a3"
    },
    {
      "value": "Pet Supplies",
      "label": "Pet Supplies",
      "id": "c4e6"
    },
    {
      "value": "Dairy",
      "label": "Dairy",
      "id": "63f9"
    }
  ],
 
"categories": [
    {
      "value": "smartphones",
      "label": "smartphones",
      "checked": false,
      "id": "d926"
    },
    {
      "value": "laptops",
      "label": "laptops",
      "checked": false,
      "id": "ce38"
    },
    {
      "value": "fragrances",
      "label": "fragrances",
      "checked": false,
      "id": "e4e3"
    },
    {
      "value": "skincare",
      "label": "skincare",
      "checked": false,
      "id": "13e3"
    },
    {
      "value": "groceries",
      "label": "groceries",
      "checked": false,
      "id": "659b"
    },
    {
      "value": "home-decoration",
      "label": "home decoration",
      "checked": false,
      "id": "65c4"
    },
    {
      "value": "furniture",
      "label": "furniture",
      "checked": false,
      "id": "cfde"
    },
    {
      "value": "tops",
      "label": "tops",
      "checked": false,
      "id": "c070"
    },
    {
      "value": "womens-dresses",
      "label": "womens dresses",
      "checked": false,
      "id": "534c"
    },
    {
      "value": "womens-shoes",
      "label": "womens shoes",
      "checked": false,
      "id": "f347"
    },
    {
      "value": "mens-shirts",
      "label": "mens shirts",
      "checked": false,
      "id": "87e4"
    },
    {
      "value": "mens-shoes",
      "label": "mens shoes",
      "checked": false,
      "id": "2bb6"
    },
    {
      "value": "mens-watches",
      "label": "mens watches",
      "checked": false,
      "id": "abec"
    },
    {
      "value": "womens-watches",
      "label": "womens watches",
      "checked": false,
      "id": "52bf"
    },
    {
      "value": "womens-bags",
      "label": "womens bags",
      "checked": false,
      "id": "74de"
    },
    {
      "value": "womens-jewellery",
      "label": "womens jewellery",
      "checked": false,
      "id": "7683"
    },
    {
      "value": "sunglasses",
      "label": "sunglasses",
      "checked": false,
      "id": "ffd0"
    },
    {
      "value": "automotive",
      "label": "automotive",
      "checked": false,
      "id": "cf58"
    },
    {
      "value": "motorcycle",
      "label": "motorcycle",
      "checked": false,
      "id": "f4e6"
    },
    {
      "value": "lighting",
      "label": "lighting",
      "checked": false,
      "id": "a5ab"
    }
  ],
 
"products": [
    {
      "id": "1",
        "title": "Essence Mascara Lash Princess lala",
        "description": "The Essence Mascara Lash Princess is a popular mascara known for its volumizing and lengthening effects. Achieve dramatic lashes with this long-lasting and cruelty-free formula.",
        "category": "skincare",
        "price": 12,
        "discountPercentage": 1,
        "rating": 0,
        "stock": 5,
      "tags": [
        "beauty",
        "mascara"
      ],
      "brand": "Foundation",
      "sku": "RCH45Q1A",
      "weight": 2,
      "dimensions": {
        "width": 23.17,
        "height": 14.43,
        "depth": 28.01
      },
      "warrantyInformation": "1 month warranty",
      "shippingInformation": "Ships in 1 month",
      "availabilityStatus": "Low Stock",
      "reviews": [
        {
          "rating": 2,
          "comment": "Very unhappy with my purchase!",
          "date": "2024-05-23T08:56:21.618Z",
          "reviewerName": "John Doe",
          "reviewerEmail": "john.doe@x.dummyjson.com"
        },
        {
          "rating": 2,
          "comment": "Not as described!",
          "date": "2024-05-23T08:56:21.618Z",
          "reviewerName": "Nolan Gonzalez",
          "reviewerEmail": "nolan.gonzalez@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Very satisfied!",
          "date": "2024-05-23T08:56:21.618Z",
          "reviewerName": "Scarlett Wright",
          "reviewerEmail": "scarlett.wright@x.dummyjson.com"
        }
      ],
      "returnPolicy": "30 days return policy",
      "minimumOrderQuantity": 24,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.618Z",
        "updatedAt": "2024-05-23T08:56:21.618Z",
        "barcode": "9164035109868",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/beauty/Essence%20Mascara%20Lash%20Princess/1.png",
        "https://static.beautytocare.com/cdn-cgi/image/width=1440,height=1200,f=auto/media/catalog/product//e/s/essence-lash-princess-curl-volume-mascara-12ml.jpg",
        "https://cdn.dummyjson.com/products/images/beauty/Essence%20Mascara%20Lash%20Princess/1.png",
        "https://cdn.dummyjson.com/products/images/beauty/Essence%20Mascara%20Lash%20Princess/thumbnail.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/beauty/Essence%20Mascara%20Lash%20Princess/thumbnail.png",
      "deleted": false
    },
    {
      "id": "2",
      "title": "Eyeshadow Palette with Mirror",
      "description": "The Eyeshadow Palette with Mirror offers a versatile range of eyeshadow shades for creating stunning eye looks. With a built-in mirror, it's convenient for on-the-go makeup application.",
      "category": "beauty",
      "price": 19.99,
      "discountPercentage": 5.5,
      "rating": 3.28,
      "stock": 44,
      "tags": [
        "beauty",
        "eyeshadow"
      ],
      "brand": "Glamour Beauty",
      "sku": "MVCFH27F",
      "weight": 3,
      "dimensions": {
        "width": 12.42,
        "height": 8.63,
        "depth": 29.13
      },
      "warrantyInformation": "1 year warranty",
      "shippingInformation": "Ships in 2 weeks",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 4,
          "comment": "Very satisfied!",
          "date": "2024-05-23T08:56:21.618Z",
          "reviewerName": "Liam Garcia",
          "reviewerEmail": "liam.garcia@x.dummyjson.com"
        },
        {
          "rating": 1,
          "comment": "Very disappointed!",
          "date": "2024-05-23T08:56:21.618Z",
          "reviewerName": "Nora Russell",
          "reviewerEmail": "nora.russell@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Highly impressed!",
          "date": "2024-05-23T08:56:21.618Z",
          "reviewerName": "Elena Baker",
          "reviewerEmail": "elena.baker@x.dummyjson.com"
        }
      ],
      "returnPolicy": "30 days return policy",
      "minimumOrderQuantity": 32,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.618Z",
        "updatedAt": "2024-05-23T08:56:21.618Z",
        "barcode": "2817839095220",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/beauty/Eyeshadow%20Palette%20with%20Mirror/1.png",
        "https://cdn.dummyjson.com/products/images/beauty/Eyeshadow%20Palette%20with%20Mirror/1.png",
        "https://cdn.dummyjson.com/products/images/beauty/Eyeshadow%20Palette%20with%20Mirror/1.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/beauty/Eyeshadow%20Palette%20with%20Mirror/thumbnail.png",
      "deleted": false
    },
    {
      "id": "3",
      "title": "Powder Canister fila",
      "description": "The Powder Canister is a finely milled setting powder designed to set makeup and control shine. With a lightweight and translucent formula, it provides a smooth and matte finish.",
      "category": "skincare",
      "price": 14,
      "discountPercentage": 18,
      "rating": 0,
      "stock": 5,
      "tags": [
        "beauty",
        "face powder"
      ],
      "brand": "Foundation",
      "sku": "9EN8WLT2",
      "weight": 8,
      "dimensions": {
        "width": 24.16,
        "height": 10.7,
        "depth": 11.07
      },
      "warrantyInformation": "2 year warranty",
      "shippingInformation": "Ships in 1-2 business days",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 5,
          "comment": "Very happy with my purchase!",
          "date": "2024-05-23T08:56:21.618Z",
          "reviewerName": "Ethan Thompson",
          "reviewerEmail": "ethan.thompson@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Great value for money!",
          "date": "2024-05-23T08:56:21.618Z",
          "reviewerName": "Levi Hicks",
          "reviewerEmail": "levi.hicks@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Highly impressed!",
          "date": "2024-05-23T08:56:21.618Z",
          "reviewerName": "Hazel Gardner",
          "reviewerEmail": "hazel.gardner@x.dummyjson.com"
        }
      ],
      "returnPolicy": "60 days return policy",
      "minimumOrderQuantity": 25,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.618Z",
        "updatedAt": "2024-05-23T08:56:21.618Z",
        "barcode": "0516267971277",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/beauty/Powder%20Canister/1.png",
        "https://cdn.dummyjson.com/products/images/beauty/Powder%20Canister/1.png",
        "https://cdn.dummyjson.com/products/images/beauty/Powder%20Canister/1.png",
        "https://cdn.dummyjson.com/products/images/beauty/Eyeshadow%20Palette%20with%20Mirror/thumbnail.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/beauty/Eyeshadow%20Palette%20with%20Mirror/thumbnail.png",
      "deleted": false
    },
    {
      "id": "4",
      "title": "Red Lipstick",
      "description": "The Red Lipstick is a classic and bold choice for adding a pop of color to your lips. With a creamy and pigmented formula, it provides a vibrant and long-lasting finish.",
      "category": "beauty",
      "price": 12.99,
      "discountPercentage": 19.03,
      "rating": 2.51,
      "stock": 68,
      "tags": [
        "beauty",
        "lipstick"
      ],
      "brand": "Chic Cosmetics",
      "sku": "O5IF1NTA",
      "weight": 5,
      "dimensions": {
        "width": 14.37,
        "height": 13.94,
        "depth": 14.6
      },
      "warrantyInformation": "Lifetime warranty",
      "shippingInformation": "Ships in 2 weeks",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 5,
          "comment": "Great product!",
          "date": "2024-05-23T08:56:21.619Z",
          "reviewerName": "Leo Rivera",
          "reviewerEmail": "leo.rivera@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Very pleased!",
          "date": "2024-05-23T08:56:21.619Z",
          "reviewerName": "Oscar Powers",
          "reviewerEmail": "oscar.powers@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Very pleased!",
          "date": "2024-05-23T08:56:21.619Z",
          "reviewerName": "Carter Rivera",
          "reviewerEmail": "carter.rivera@x.dummyjson.com"
        }
      ],
      "returnPolicy": "90 days return policy",
      "minimumOrderQuantity": 6,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.619Z",
        "updatedAt": "2024-05-23T08:56:21.619Z",
        "barcode": "9444582199406",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/beauty/Red%20Lipstick/1.png",
        "https://cdn.dummyjson.com/products/images/beauty/Red%20Lipstick/1.png",
        "https://cdn.dummyjson.com/products/images/beauty/Red%20Lipstick/1.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/beauty/Red%20Lipstick/thumbnail.png",
      "deleted": false
    },
    {
      "id": "5",
      "title": "Red Nail Polish",
      "description": "The Red Nail Polish offers a rich and glossy red hue for vibrant and polished nails. With a quick-drying formula, it provides a salon-quality finish at home.",
      "category": "beauty",
      "price": 8.99,
      "discountPercentage": 2.46,
      "rating": 3.91,
      "stock": 71,
      "tags": [
        "beauty",
        "nail polish"
      ],
      "brand": "Nail Couture",
      "sku": "YUIIIP4W",
      "weight": 9,
      "dimensions": {
        "width": 8.11,
        "height": 10.89,
        "depth": 29.06
      },
      "warrantyInformation": "1 year warranty",
      "shippingInformation": "Ships in 1 week",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 5,
          "comment": "Very pleased!",
          "date": "2024-05-23T08:56:21.619Z",
          "reviewerName": "Leo Rivera",
          "reviewerEmail": "leo.rivera@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Great product!",
          "date": "2024-05-23T08:56:21.619Z",
          "reviewerName": "Evan Reed",
          "reviewerEmail": "evan.reed@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Highly recommended!",
          "date": "2024-05-23T08:56:21.619Z",
          "reviewerName": "Evelyn Sanchez",
          "reviewerEmail": "evelyn.sanchez@x.dummyjson.com"
        }
      ],
      "returnPolicy": "No return policy",
      "minimumOrderQuantity": 46,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.619Z",
        "updatedAt": "2024-05-23T08:56:21.619Z",
        "barcode": "3212847902461",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/beauty/Red%20Nail%20Polish/1.png",
        "https://cdn.dummyjson.com/products/images/beauty/Red%20Nail%20Polish/1.png",
        "https://cdn.dummyjson.com/products/images/beauty/Red%20Nail%20Polish/1.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/beauty/Red%20Nail%20Polish/thumbnail.png",
      "deleted": false
    },
    {
      "id": "6",
      "title": "Calvin Klein CK One",
      "description": "CK One by Calvin Klein is a classic unisex fragrance, known for its fresh and clean scent. It's a versatile fragrance suitable for everyday wear.",
      "category": "fragrances",
      "price": 49.99,
      "discountPercentage": 0.32,
      "rating": 4.85,
      "stock": 17,
      "tags": [
        "fragrances",
        "perfumes"
      ],
      "brand": "Calvin Klein",
      "sku": "DZM2JQZE",
      "weight": 5,
      "dimensions": {
        "width": 11.53,
        "height": 14.44,
        "depth": 6.81
      },
      "warrantyInformation": "5 year warranty",
      "shippingInformation": "Ships overnight",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 5,
          "comment": "Great value for money!",
          "date": "2024-05-23T08:56:21.619Z",
          "reviewerName": "Sophia Brown",
          "reviewerEmail": "sophia.brown@x.dummyjson.com"
        },
        {
          "rating": 3,
          "comment": "Very disappointed!",
          "date": "2024-05-23T08:56:21.619Z",
          "reviewerName": "Madison Collins",
          "reviewerEmail": "madison.collins@x.dummyjson.com"
        },
        {
          "rating": 1,
          "comment": "Poor quality!",
          "date": "2024-05-23T08:56:21.619Z",
          "reviewerName": "Maya Reed",
          "reviewerEmail": "maya.reed@x.dummyjson.com"
        }
      ],
      "returnPolicy": "No return policy",
      "minimumOrderQuantity": 20,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.619Z",
        "updatedAt": "2024-05-23T08:56:21.619Z",
        "barcode": "2210136215089",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/fragrances/Calvin%20Klein%20CK%20One/1.png",
        "https://cdn.dummyjson.com/products/images/fragrances/Calvin%20Klein%20CK%20One/2.png",
        "https://cdn.dummyjson.com/products/images/fragrances/Calvin%20Klein%20CK%20One/3.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/fragrances/Calvin%20Klein%20CK%20One/thumbnail.png",
      "deleted": false
    },
    {
      "id": "7",
      "title": "Chanel Coco Noir Eau De",
      "description": "Coco Noir by Chanel is an elegant and mysterious fragrance, featuring notes of grapefruit, rose, and sandalwood. Perfect for evening occasions.",
      "category": "fragrances",
      "price": 129.99,
      "discountPercentage": 18.64,
      "rating": 2.76,
      "stock": 41,
      "tags": [
        "fragrances",
        "perfumes"
      ],
      "brand": "Chanel",
      "sku": "K71HBCGS",
      "weight": 4,
      "dimensions": {
        "width": 21.27,
        "height": 28,
        "depth": 11.89
      },
      "warrantyInformation": "1 week warranty",
      "shippingInformation": "Ships in 1 month",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 1,
          "comment": "Disappointing product!",
          "date": "2024-05-23T08:56:21.619Z",
          "reviewerName": "Lincoln Kelly",
          "reviewerEmail": "lincoln.kelly@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Great product!",
          "date": "2024-05-23T08:56:21.619Z",
          "reviewerName": "Lincoln Kelly",
          "reviewerEmail": "lincoln.kelly@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Excellent quality!",
          "date": "2024-05-23T08:56:21.619Z",
          "reviewerName": "Lucas Allen",
          "reviewerEmail": "lucas.allen@x.dummyjson.com"
        }
      ],
      "returnPolicy": "60 days return policy",
      "minimumOrderQuantity": 5,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.619Z",
        "updatedAt": "2024-05-23T08:56:21.619Z",
        "barcode": "1435582999795",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/fragrances/Chanel%20Coco%20Noir%20Eau%20De/1.png",
        "https://cdn.dummyjson.com/products/images/fragrances/Chanel%20Coco%20Noir%20Eau%20De/2.png",
        "https://cdn.dummyjson.com/products/images/fragrances/Chanel%20Coco%20Noir%20Eau%20De/3.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/fragrances/Chanel%20Coco%20Noir%20Eau%20De/thumbnail.png",
      "deleted": false
    },
    {
      "id": "8",
      "title": "Dior J'adore",
      "description": "J'adore by Dior is a luxurious and floral fragrance, known for its blend of ylang-ylang, rose, and jasmine. It embodies femininity and sophistication.",
      "category": "fragrances",
      "price": 89.99,
      "discountPercentage": 17.44,
      "rating": 3.31,
      "stock": 91,
      "tags": [
        "fragrances",
        "perfumes"
      ],
      "brand": "Dior",
      "sku": "E70NB03B",
      "weight": 10,
      "dimensions": {
        "width": 21.51,
        "height": 7,
        "depth": 26.51
      },
      "warrantyInformation": "Lifetime warranty",
      "shippingInformation": "Ships in 2 weeks",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 5,
          "comment": "Fast shipping!",
          "date": "2024-05-23T08:56:21.619Z",
          "reviewerName": "Zoe Nicholson",
          "reviewerEmail": "zoe.nicholson@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Excellent quality!",
          "date": "2024-05-23T08:56:21.619Z",
          "reviewerName": "Addison Wright",
          "reviewerEmail": "addison.wright@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Would buy again!",
          "date": "2024-05-23T08:56:21.619Z",
          "reviewerName": "Clara Berry",
          "reviewerEmail": "clara.berry@x.dummyjson.com"
        }
      ],
      "returnPolicy": "7 days return policy",
      "minimumOrderQuantity": 8,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.619Z",
        "updatedAt": "2024-05-23T08:56:21.619Z",
        "barcode": "0887083199279",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/fragrances/Dior%20J'adore/1.png",
        "https://cdn.dummyjson.com/products/images/fragrances/Dior%20J'adore/2.png",
        "https://cdn.dummyjson.com/products/images/fragrances/Dior%20J'adore/3.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/fragrances/Dior%20J'adore/thumbnail.png",
      "deleted": false
    },
    {
      "id": "9",
      "title": "Dolce Shine Eau de",
      "description": "Dolce Shine by Dolce & Gabbana is a vibrant and fruity fragrance, featuring notes of mango, jasmine, and blonde woods. It's a joyful and youthful scent.",
      "category": "fragrances",
      "price": 69.99,
      "discountPercentage": 11.47,
      "rating": 2.68,
      "stock": 3,
      "tags": [
        "fragrances",
        "perfumes"
      ],
      "brand": "Dolce & Gabbana",
      "sku": "1NBFK980",
      "weight": 5,
      "dimensions": {
        "width": 17,
        "height": 24.57,
        "depth": 13.3
      },
      "warrantyInformation": "5 year warranty",
      "shippingInformation": "Ships in 1-2 business days",
      "availabilityStatus": "Low Stock",
      "reviews": [
        {
          "rating": 4,
          "comment": "Very satisfied!",
          "date": "2024-05-23T08:56:21.619Z",
          "reviewerName": "Xavier Wright",
          "reviewerEmail": "xavier.wright@x.dummyjson.com"
        },
        {
          "rating": 1,
          "comment": "Poor quality!",
          "date": "2024-05-23T08:56:21.619Z",
          "reviewerName": "Mila Hernandez",
          "reviewerEmail": "mila.hernandez@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Very happy with my purchase!",
          "date": "2024-05-23T08:56:21.619Z",
          "reviewerName": "Sophia Brown",
          "reviewerEmail": "sophia.brown@x.dummyjson.com"
        }
      ],
      "returnPolicy": "30 days return policy",
      "minimumOrderQuantity": 9,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.619Z",
        "updatedAt": "2024-05-23T08:56:21.619Z",
        "barcode": "1939383392674",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/fragrances/Dolce%20Shine%20Eau%20de/1.png",
        "https://cdn.dummyjson.com/products/images/fragrances/Dolce%20Shine%20Eau%20de/2.png",
        "https://cdn.dummyjson.com/products/images/fragrances/Dolce%20Shine%20Eau%20de/3.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/fragrances/Dolce%20Shine%20Eau%20de/thumbnail.png"
    },
    {
      "id": "10",
      "title": "Gucci Bloom Eau de",
      "description": "Gucci Bloom by Gucci is a floral and captivating fragrance, with notes of tuberose, jasmine, and Rangoon creeper. It's a modern and romantic scent.",
      "category": "fragrances",
      "price": 79.99,
      "discountPercentage": 8.9,
      "rating": 2.69,
      "stock": 93,
      "tags": [
        "fragrances",
        "perfumes"
      ],
      "brand": "Gucci",
      "sku": "FFKZ6HOF",
      "weight": 10,
      "dimensions": {
        "width": 22.28,
        "height": 17.81,
        "depth": 27.18
      },
      "warrantyInformation": "No warranty",
      "shippingInformation": "Ships in 2 weeks",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 5,
          "comment": "Great value for money!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Aria Parker",
          "reviewerEmail": "aria.parker@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Excellent quality!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Natalie Harris",
          "reviewerEmail": "natalie.harris@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Fast shipping!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Ava Harris",
          "reviewerEmail": "ava.harris@x.dummyjson.com"
        }
      ],
      "returnPolicy": "No return policy",
      "minimumOrderQuantity": 10,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.620Z",
        "updatedAt": "2024-05-23T08:56:21.620Z",
        "barcode": "8232190382069",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/fragrances/Gucci%20Bloom%20Eau%20de/1.png",
        "https://cdn.dummyjson.com/products/images/fragrances/Gucci%20Bloom%20Eau%20de/2.png",
        "https://cdn.dummyjson.com/products/images/fragrances/Gucci%20Bloom%20Eau%20de/3.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/fragrances/Gucci%20Bloom%20Eau%20de/thumbnail.png"
    },
    {
      "id": "11",
      "title": "Annibale Colombo Bed",
      "description": "The Annibale Colombo Bed is a luxurious and elegant bed frame, crafted with high-quality materials for a comfortable and stylish bedroom.",
      "category": "furniture",
      "price": 1899.99,
      "discountPercentage": 0.29,
      "rating": 4.14,
      "stock": 47,
      "tags": [
        "furniture",
        "beds"
      ],
      "brand": "Annibale Colombo",
      "sku": "4KMDTZWF",
      "weight": 3,
      "dimensions": {
        "width": 28.75,
        "height": 26.88,
        "depth": 24.47
      },
      "warrantyInformation": "2 year warranty",
      "shippingInformation": "Ships overnight",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 4,
          "comment": "Great value for money!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Julian Newton",
          "reviewerEmail": "julian.newton@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Would buy again!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Madison Collins",
          "reviewerEmail": "madison.collins@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Would buy again!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Clara Berry",
          "reviewerEmail": "clara.berry@x.dummyjson.com"
        }
      ],
      "returnPolicy": "7 days return policy",
      "minimumOrderQuantity": 1,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.620Z",
        "updatedAt": "2024-05-23T08:56:21.620Z",
        "barcode": "7113807059215",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/furniture/Annibale%20Colombo%20Bed/1.png",
        "https://cdn.dummyjson.com/products/images/furniture/Annibale%20Colombo%20Bed/2.png",
        "https://cdn.dummyjson.com/products/images/furniture/Annibale%20Colombo%20Bed/3.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/furniture/Annibale%20Colombo%20Bed/thumbnail.png"
    },
    {
      "id": "12",
      "title": "Annibale Colombo Sofa",
      "description": "The Annibale Colombo Sofa is a sophisticated and comfortable seating option, featuring exquisite design and premium upholstery for your living room.",
      "category": "furniture",
      "price": 2499.99,
      "discountPercentage": 18.54,
      "rating": 3.08,
      "stock": 16,
      "tags": [
        "furniture",
        "sofas"
      ],
      "brand": "Annibale Colombo",
      "sku": "LUU95CQP",
      "weight": 3,
      "dimensions": {
        "width": 20.97,
        "height": 19.11,
        "depth": 25.81
      },
      "warrantyInformation": "1 month warranty",
      "shippingInformation": "Ships overnight",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 5,
          "comment": "Very satisfied!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Tyler Davis",
          "reviewerEmail": "tyler.davis@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Excellent quality!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Hannah Robinson",
          "reviewerEmail": "hannah.robinson@x.dummyjson.com"
        },
        {
          "rating": 3,
          "comment": "Waste of money!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Madison Collins",
          "reviewerEmail": "madison.collins@x.dummyjson.com"
        }
      ],
      "returnPolicy": "7 days return policy",
      "minimumOrderQuantity": 1,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.620Z",
        "updatedAt": "2024-05-23T08:56:21.620Z",
        "barcode": "0426785817074",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/furniture/Annibale%20Colombo%20Sofa/1.png",
        "https://cdn.dummyjson.com/products/images/furniture/Annibale%20Colombo%20Sofa/2.png",
        "https://cdn.dummyjson.com/products/images/furniture/Annibale%20Colombo%20Sofa/3.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/furniture/Annibale%20Colombo%20Sofa/thumbnail.png"
    },
    {
      "id": "13",
      "title": "Bedside Table African Cherry",
      "description": "The Bedside Table in African Cherry is a stylish and functional addition to your bedroom, providing convenient storage space and a touch of elegance.",
      "category": "furniture",
      "price": 299.99,
      "discountPercentage": 9.58,
      "rating": 4.48,
      "stock": 16,
      "tags": [
        "furniture",
        "bedside tables"
      ],
      "brand": "Furniture Co.",
      "sku": "OWPLTZYX",
      "weight": 10,
      "dimensions": {
        "width": 25.43,
        "height": 20.2,
        "depth": 24.95
      },
      "warrantyInformation": "6 months warranty",
      "shippingInformation": "Ships in 1-2 business days",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 5,
          "comment": "Very happy with my purchase!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "John Doe",
          "reviewerEmail": "john.doe@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Highly recommended!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Avery Carter",
          "reviewerEmail": "avery.carter@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Very pleased!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Evelyn Sanchez",
          "reviewerEmail": "evelyn.sanchez@x.dummyjson.com"
        }
      ],
      "returnPolicy": "No return policy",
      "minimumOrderQuantity": 5,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.620Z",
        "updatedAt": "2024-05-23T08:56:21.620Z",
        "barcode": "2913244159666",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/furniture/Bedside%20Table%20African%20Cherry/1.png",
        "https://cdn.dummyjson.com/products/images/furniture/Bedside%20Table%20African%20Cherry/2.png",
        "https://cdn.dummyjson.com/products/images/furniture/Bedside%20Table%20African%20Cherry/3.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/furniture/Bedside%20Table%20African%20Cherry/thumbnail.png"
    },
    {
      "id": "14",
      "title": "Knoll Saarinen Executive Conference Chair",
      "description": "The Knoll Saarinen Executive Conference Chair is a modern and ergonomic chair, perfect for your office or conference room with its timeless design.",
      "category": "furniture",
      "price": 499.99,
      "discountPercentage": 15.23,
      "rating": 4.11,
      "stock": 47,
      "tags": [
        "furniture",
        "office chairs"
      ],
      "brand": "Knoll",
      "sku": "RKHVJ4FE",
      "weight": 3,
      "dimensions": {
        "width": 16.59,
        "height": 21.46,
        "depth": 29.07
      },
      "warrantyInformation": "Lifetime warranty",
      "shippingInformation": "Ships in 3-5 business days",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 4,
          "comment": "Very happy with my purchase!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Leah Gutierrez",
          "reviewerEmail": "leah.gutierrez@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Would buy again!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Nolan Gonzalez",
          "reviewerEmail": "nolan.gonzalez@x.dummyjson.com"
        },
        {
          "rating": 2,
          "comment": "Waste of money!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Stella Morris",
          "reviewerEmail": "stella.morris@x.dummyjson.com"
        }
      ],
      "returnPolicy": "30 days return policy",
      "minimumOrderQuantity": 5,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.620Z",
        "updatedAt": "2024-05-23T08:56:21.620Z",
        "barcode": "0726316339746",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/furniture/Knoll%20Saarinen%20Executive%20Conference%20Chair/1.png",
        "https://cdn.dummyjson.com/products/images/furniture/Knoll%20Saarinen%20Executive%20Conference%20Chair/2.png",
        "https://cdn.dummyjson.com/products/images/furniture/Knoll%20Saarinen%20Executive%20Conference%20Chair/3.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/furniture/Knoll%20Saarinen%20Executive%20Conference%20Chair/thumbnail.png"
    },
    {
      "id": "15",
      "title": "Wooden Bathroom Sink With Mirror",
      "description": "The Wooden Bathroom Sink with Mirror is a unique and stylish addition to your bathroom, featuring a wooden sink countertop and a matching mirror.",
      "category": "furniture",
      "price": 799.99,
      "discountPercentage": 11.22,
      "rating": 3.26,
      "stock": 95,
      "tags": [
        "furniture",
        "bathroom"
      ],
      "brand": "Bath Trends",
      "sku": "7OLTIEVO",
      "weight": 6,
      "dimensions": {
        "width": 7.32,
        "height": 22.64,
        "depth": 12.37
      },
      "warrantyInformation": "6 months warranty",
      "shippingInformation": "Ships in 3-5 business days",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 5,
          "comment": "Highly recommended!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Charlotte Lopez",
          "reviewerEmail": "charlotte.lopez@x.dummyjson.com"
        },
        {
          "rating": 1,
          "comment": "Would not recommend!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "William Gonzalez",
          "reviewerEmail": "william.gonzalez@x.dummyjson.com"
        },
        {
          "rating": 2,
          "comment": "Not worth the price!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Ava Harrison",
          "reviewerEmail": "ava.harrison@x.dummyjson.com"
        }
      ],
      "returnPolicy": "7 days return policy",
      "minimumOrderQuantity": 1,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.620Z",
        "updatedAt": "2024-05-23T08:56:21.620Z",
        "barcode": "7839797529453",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/furniture/Wooden%20Bathroom%20Sink%20With%20Mirror/1.png",
        "https://cdn.dummyjson.com/products/images/furniture/Wooden%20Bathroom%20Sink%20With%20Mirror/2.png",
        "https://cdn.dummyjson.com/products/images/furniture/Wooden%20Bathroom%20Sink%20With%20Mirror/3.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/furniture/Wooden%20Bathroom%20Sink%20With%20Mirror/thumbnail.png"
    },
    {
      "id": "16",
      "title": "Apple",
      "description": "Fresh and crisp apples, perfect for snacking or incorporating into various recipes.",
      "category": "groceries",
      "price": 1.99,
      "discountPercentage": 1.97,
      "rating": 2.96,
      "stock": 9,
      "tags": [
        "fruits"
      ],
      "sku": "QTROUV79",
      "weight": 8,
      "dimensions": {
        "width": 8.29,
        "height": 5.58,
        "depth": 12.41
      },
      "warrantyInformation": "2 year warranty",
      "shippingInformation": "Ships in 2 weeks",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 4,
          "comment": "Great product!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Logan Lee",
          "reviewerEmail": "logan.lee@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Great product!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Elena Long",
          "reviewerEmail": "elena.long@x.dummyjson.com"
        },
        {
          "rating": 1,
          "comment": "Not as described!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Grayson Coleman",
          "reviewerEmail": "grayson.coleman@x.dummyjson.com"
        }
      ],
      "returnPolicy": "60 days return policy",
      "minimumOrderQuantity": 44,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.620Z",
        "updatedAt": "2024-05-23T08:56:21.620Z",
        "barcode": "2517819903837",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/groceries/Apple/1.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Apple/thumbnail.png"
    },
    {
      "id": "17",
      "title": "Beef Steak",
      "description": "High-quality beef steak, great for grilling or cooking to your preferred level of doneness.",
      "category": "groceries",
      "price": 12.99,
      "discountPercentage": 17.99,
      "rating": 2.83,
      "stock": 96,
      "tags": [
        "meat"
      ],
      "sku": "BWWA2MSO",
      "weight": 9,
      "dimensions": {
        "width": 23.35,
        "height": 13.48,
        "depth": 26.4
      },
      "warrantyInformation": "1 month warranty",
      "shippingInformation": "Ships overnight",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 4,
          "comment": "Very pleased!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Ethan Martinez",
          "reviewerEmail": "ethan.martinez@x.dummyjson.com"
        },
        {
          "rating": 3,
          "comment": "Disappointing product!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Owen Fisher",
          "reviewerEmail": "owen.fisher@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Very happy with my purchase!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Scarlett Wright",
          "reviewerEmail": "scarlett.wright@x.dummyjson.com"
        }
      ],
      "returnPolicy": "90 days return policy",
      "minimumOrderQuantity": 21,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.620Z",
        "updatedAt": "2024-05-23T08:56:21.620Z",
        "barcode": "8335515097879",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/groceries/Beef%20Steak/1.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Beef%20Steak/thumbnail.png"
    },
    {
      "id": "18",
      "title": "Cat Food",
      "description": "Nutritious cat food formulated to meet the dietary needs of your feline friend.",
      "category": "groceries",
      "price": 8.99,
      "discountPercentage": 9.57,
      "rating": 2.88,
      "stock": 13,
      "tags": [
        "pet supplies",
        "cat food"
      ],
      "sku": "C3F8QN6O",
      "weight": 9,
      "dimensions": {
        "width": 15.4,
        "height": 13.97,
        "depth": 25.13
      },
      "warrantyInformation": "3 months warranty",
      "shippingInformation": "Ships in 1-2 business days",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 5,
          "comment": "Very pleased!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Mateo Bennett",
          "reviewerEmail": "mateo.bennett@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Very pleased!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Aurora Barnes",
          "reviewerEmail": "aurora.barnes@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Great value for money!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Ellie Stewart",
          "reviewerEmail": "ellie.stewart@x.dummyjson.com"
        }
      ],
      "returnPolicy": "7 days return policy",
      "minimumOrderQuantity": 48,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.620Z",
        "updatedAt": "2024-05-23T08:56:21.620Z",
        "barcode": "5503491330693",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/groceries/Cat%20Food/1.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Cat%20Food/thumbnail.png"
    },
    {
      "id": "19",
      "title": "Chicken Meat",
      "description": "Fresh and tender chicken meat, suitable for various culinary preparations.",
      "category": "groceries",
      "price": 9.99,
      "discountPercentage": 10.46,
      "rating": 4.61,
      "stock": 69,
      "tags": [
        "meat"
      ],
      "sku": "G5YEHW7B",
      "weight": 7,
      "dimensions": {
        "width": 15.96,
        "height": 29.24,
        "depth": 26.25
      },
      "warrantyInformation": "Lifetime warranty",
      "shippingInformation": "Ships in 1 month",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 5,
          "comment": "Very satisfied!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Sophia Jones",
          "reviewerEmail": "sophia.jones@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Great value for money!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Maya Reed",
          "reviewerEmail": "maya.reed@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Highly recommended!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Harper Turner",
          "reviewerEmail": "harper.turner@x.dummyjson.com"
        }
      ],
      "returnPolicy": "7 days return policy",
      "minimumOrderQuantity": 46,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.620Z",
        "updatedAt": "2024-05-23T08:56:21.620Z",
        "barcode": "0966223559510",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/groceries/Chicken%20Meat/1.png",
        "https://cdn.dummyjson.com/products/images/groceries/Chicken%20Meat/2.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Chicken%20Meat/thumbnail.png"
    },
    {
      "id": "20",
      "title": "Cooking Oil",
      "description": "Versatile cooking oil suitable for frying, sautéing, and various culinary applications.",
      "category": "groceries",
      "price": 4.99,
      "discountPercentage": 18.89,
      "rating": 4.01,
      "stock": 22,
      "tags": [
        "cooking essentials"
      ],
      "sku": "Q6ZP1UY8",
      "weight": 8,
      "dimensions": {
        "width": 8.18,
        "height": 27.45,
        "depth": 27.88
      },
      "warrantyInformation": "Lifetime warranty",
      "shippingInformation": "Ships in 1 month",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 5,
          "comment": "Would buy again!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Mason Parker",
          "reviewerEmail": "mason.parker@x.dummyjson.com"
        },
        {
          "rating": 3,
          "comment": "Poor quality!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Jonathan Pierce",
          "reviewerEmail": "jonathan.pierce@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Would buy again!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Alexander Hernandez",
          "reviewerEmail": "alexander.hernandez@x.dummyjson.com"
        }
      ],
      "returnPolicy": "60 days return policy",
      "minimumOrderQuantity": 2,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.620Z",
        "updatedAt": "2024-05-23T08:56:21.620Z",
        "barcode": "6707669443381",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/groceries/Cooking%20Oil/1.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Cooking%20Oil/thumbnail.png"
    },
    {
      "id": "21",
      "title": "Cucumber",
      "description": "Crisp and hydrating cucumbers, ideal for salads, snacks, or as a refreshing side.",
      "category": "groceries",
      "price": 1.49,
      "discountPercentage": 11.44,
      "rating": 4.71,
      "stock": 22,
      "tags": [
        "vegetables"
      ],
      "sku": "6KGF2K6Z",
      "weight": 9,
      "dimensions": {
        "width": 11.04,
        "height": 20.5,
        "depth": 8.18
      },
      "warrantyInformation": "5 year warranty",
      "shippingInformation": "Ships overnight",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 4,
          "comment": "Very satisfied!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Elijah Hill",
          "reviewerEmail": "elijah.hill@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Fast shipping!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Liam Garcia",
          "reviewerEmail": "liam.garcia@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Excellent quality!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Ella Cook",
          "reviewerEmail": "ella.cook@x.dummyjson.com"
        }
      ],
      "returnPolicy": "30 days return policy",
      "minimumOrderQuantity": 7,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.620Z",
        "updatedAt": "2024-05-23T08:56:21.620Z",
        "barcode": "2597004869708",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/groceries/Cucumber/1.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Cucumber/thumbnail.png",
      "deleted": false
    },
    {
      "id": "22",
      "title": "Dog Food",
      "description": "Specially formulated dog food designed to provide essential nutrients for your canine companion.",
      "category": "groceries",
      "price": 10.99,
      "discountPercentage": 18.15,
      "rating": 2.74,
      "stock": 40,
      "tags": [
        "pet supplies",
        "dog food"
      ],
      "sku": "A6QRCH37",
      "weight": 2,
      "dimensions": {
        "width": 29.39,
        "height": 29.77,
        "depth": 20.54
      },
      "warrantyInformation": "1 year warranty",
      "shippingInformation": "Ships in 1 month",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 5,
          "comment": "Highly impressed!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Leo Rivera",
          "reviewerEmail": "leo.rivera@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Highly recommended!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Alexander Jones",
          "reviewerEmail": "alexander.jones@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Would buy again!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Addison Wright",
          "reviewerEmail": "addison.wright@x.dummyjson.com"
        }
      ],
      "returnPolicy": "90 days return policy",
      "minimumOrderQuantity": 29,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.620Z",
        "updatedAt": "2024-05-23T08:56:21.620Z",
        "barcode": "7957222289508",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/groceries/Dog%20Food/1.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Dog%20Food/thumbnail.png"
    },
    {
      "id": "23",
      "title": "Eggs",
      "description": "Fresh eggs, a versatile ingredient for baking, cooking, or breakfast.",
      "category": "groceries",
      "price": 2.99,
      "discountPercentage": 5.8,
      "rating": 4.46,
      "stock": 10,
      "tags": [
        "dairy"
      ],
      "sku": "YA617RI7",
      "weight": 4,
      "dimensions": {
        "width": 12.3,
        "height": 10.99,
        "depth": 15.53
      },
      "warrantyInformation": "3 year warranty",
      "shippingInformation": "Ships overnight",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 2,
          "comment": "Very unhappy with my purchase!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Mateo Perez",
          "reviewerEmail": "mateo.perez@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Very happy with my purchase!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Cameron Perez",
          "reviewerEmail": "cameron.perez@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Very happy with my purchase!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Aurora Barnes",
          "reviewerEmail": "aurora.barnes@x.dummyjson.com"
        }
      ],
      "returnPolicy": "30 days return policy",
      "minimumOrderQuantity": 43,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.620Z",
        "updatedAt": "2024-05-23T08:56:21.620Z",
        "barcode": "7095702028776",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/groceries/Eggs/1.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Eggs/thumbnail.png"
    },
    {
      "id": "24",
      "title": "Fish Steak",
      "description": "Quality fish steak, suitable for grilling, baking, or pan-searing.",
      "category": "groceries",
      "price": 14.99,
      "discountPercentage": 7,
      "rating": 4.83,
      "stock": 99,
      "tags": [
        "seafood"
      ],
      "sku": "XNIH1MTA",
      "weight": 8,
      "dimensions": {
        "width": 20.14,
        "height": 8.4,
        "depth": 10.01
      },
      "warrantyInformation": "1 year warranty",
      "shippingInformation": "Ships in 1 month",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 5,
          "comment": "Great value for money!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Michael Johnson",
          "reviewerEmail": "michael.johnson@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Would buy again!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Julian Newton",
          "reviewerEmail": "julian.newton@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Excellent quality!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Lila Hudson",
          "reviewerEmail": "lila.hudson@x.dummyjson.com"
        }
      ],
      "returnPolicy": "30 days return policy",
      "minimumOrderQuantity": 49,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.620Z",
        "updatedAt": "2024-05-23T08:56:21.620Z",
        "barcode": "4250692197342",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/groceries/Fish%20Steak/1.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Fish%20Steak/thumbnail.png"
    },
    {
      "id": "25",
      "title": "Green Bell Pepper",
      "description": "Fresh and vibrant green bell pepper, perfect for adding color and flavor to your dishes.",
      "category": "groceries",
      "price": 1.29,
      "discountPercentage": 15.5,
      "rating": 4.28,
      "stock": 89,
      "tags": [
        "vegetables"
      ],
      "sku": "HU7S7VQ0",
      "weight": 7,
      "dimensions": {
        "width": 7.32,
        "height": 14.31,
        "depth": 21.38
      },
      "warrantyInformation": "5 year warranty",
      "shippingInformation": "Ships overnight",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 4,
          "comment": "Excellent quality!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Maya Reed",
          "reviewerEmail": "maya.reed@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Would buy again!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Madison Collins",
          "reviewerEmail": "madison.collins@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Would buy again!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Ethan Thompson",
          "reviewerEmail": "ethan.thompson@x.dummyjson.com"
        }
      ],
      "returnPolicy": "30 days return policy",
      "minimumOrderQuantity": 1,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.620Z",
        "updatedAt": "2024-05-23T08:56:21.620Z",
        "barcode": "7583442707568",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/groceries/Green%20Bell%20Pepper/1.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Green%20Bell%20Pepper/thumbnail.png"
    },
    {
      "id": "26",
      "title": "Green Chili Pepper",
      "description": "Spicy green chili pepper, ideal for adding heat to your favorite recipes.",
      "category": "groceries",
      "price": 0.99,
      "discountPercentage": 18.51,
      "rating": 4.43,
      "stock": 8,
      "tags": [
        "vegetables"
      ],
      "sku": "Y4RM3JCB",
      "weight": 2,
      "dimensions": {
        "width": 18.67,
        "height": 21.17,
        "depth": 25.26
      },
      "warrantyInformation": "No warranty",
      "shippingInformation": "Ships in 1-2 business days",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 2,
          "comment": "Disappointing product!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Mateo Bennett",
          "reviewerEmail": "mateo.bennett@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Very pleased!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Natalie Price",
          "reviewerEmail": "natalie.price@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Very satisfied!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Avery Barnes",
          "reviewerEmail": "avery.barnes@x.dummyjson.com"
        }
      ],
      "returnPolicy": "30 days return policy",
      "minimumOrderQuantity": 43,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.620Z",
        "updatedAt": "2024-05-23T08:56:21.620Z",
        "barcode": "8400326844874",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/groceries/Green%20Chili%20Pepper/1.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Green%20Chili%20Pepper/thumbnail.png",
      "deleted": false
    },
    {
      "id": "27",
      "title": "Honey Jar",
      "description": "Pure and natural honey in a convenient jar, perfect for sweetening beverages or drizzling over food.",
      "category": "groceries",
      "price": 6.99,
      "discountPercentage": 1.91,
      "rating": 3.5,
      "stock": 25,
      "tags": [
        "condiments"
      ],
      "sku": "BTBNIIOU",
      "weight": 9,
      "dimensions": {
        "width": 26.53,
        "height": 27.11,
        "depth": 6.63
      },
      "warrantyInformation": "2 year warranty",
      "shippingInformation": "Ships overnight",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 4,
          "comment": "Fast shipping!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Nicholas Bailey",
          "reviewerEmail": "nicholas.bailey@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Awesome product!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Gabriel Hayes",
          "reviewerEmail": "gabriel.hayes@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Highly impressed!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "James Garcia",
          "reviewerEmail": "james.garcia@x.dummyjson.com"
        }
      ],
      "returnPolicy": "90 days return policy",
      "minimumOrderQuantity": 1,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.620Z",
        "updatedAt": "2024-05-23T08:56:21.620Z",
        "barcode": "0668665656044",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/groceries/Honey%20Jar/1.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Honey%20Jar/thumbnail.png",
      "deleted": false
    },
    {
      "id": "28",
      "title": "Ice Cream",
      "description": "Creamy and delicious ice cream, available in various flavors for a delightful treat.",
      "category": "groceries",
      "price": 5.49,
      "discountPercentage": 7.58,
      "rating": 3.77,
      "stock": 76,
      "tags": [
        "desserts"
      ],
      "sku": "VEZMU1EQ",
      "weight": 5,
      "dimensions": {
        "width": 17.66,
        "height": 24.49,
        "depth": 25.98
      },
      "warrantyInformation": "2 year warranty",
      "shippingInformation": "Ships in 2 weeks",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 5,
          "comment": "Great product!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Elena Baker",
          "reviewerEmail": "elena.baker@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Highly impressed!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Madeline Simpson",
          "reviewerEmail": "madeline.simpson@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Very happy with my purchase!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Caleb Nelson",
          "reviewerEmail": "caleb.nelson@x.dummyjson.com"
        }
      ],
      "returnPolicy": "No return policy",
      "minimumOrderQuantity": 19,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.620Z",
        "updatedAt": "2024-05-23T08:56:21.620Z",
        "barcode": "9603960319256",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/groceries/Ice%20Cream/1.png",
        "https://cdn.dummyjson.com/products/images/groceries/Ice%20Cream/2.png",
        "https://cdn.dummyjson.com/products/images/groceries/Ice%20Cream/3.png",
        "https://cdn.dummyjson.com/products/images/groceries/Ice%20Cream/4.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Ice%20Cream/thumbnail.png"
    },
    {
      "id": "29",
      "title": "Juice",
      "description": "Refreshing fruit juice, packed with vitamins and great for staying hydrated.",
      "category": "groceries",
      "price": 3.99,
      "discountPercentage": 5.45,
      "rating": 3.41,
      "stock": 99,
      "tags": [
        "beverages"
      ],
      "sku": "M2K19S06",
      "weight": 2,
      "dimensions": {
        "width": 8.97,
        "height": 12.26,
        "depth": 15.05
      },
      "warrantyInformation": "1 week warranty",
      "shippingInformation": "Ships in 1-2 business days",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 4,
          "comment": "Very satisfied!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Leo Rivera",
          "reviewerEmail": "leo.rivera@x.dummyjson.com"
        },
        {
          "rating": 2,
          "comment": "Not worth the price!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Ethan Martinez",
          "reviewerEmail": "ethan.martinez@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Excellent quality!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Max Parker",
          "reviewerEmail": "max.parker@x.dummyjson.com"
        }
      ],
      "returnPolicy": "90 days return policy",
      "minimumOrderQuantity": 26,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.620Z",
        "updatedAt": "2024-05-23T08:56:21.620Z",
        "barcode": "8546824122355",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/groceries/Juice/1.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Juice/thumbnail.png"
    },
    {
      "id": "30",
      "title": "Kiwi",
      "description": "Nutrient-rich kiwi, perfect for snacking or adding a tropical twist to your dishes.",
      "category": "groceries",
      "price": 2.49,
      "discountPercentage": 10.32,
      "rating": 4.37,
      "stock": 1,
      "tags": [
        "fruits"
      ],
      "sku": "0X3NORB9",
      "weight": 8,
      "dimensions": {
        "width": 27.3,
        "height": 7.48,
        "depth": 15.08
      },
      "warrantyInformation": "6 months warranty",
      "shippingInformation": "Ships in 3-5 business days",
      "availabilityStatus": "Low Stock",
      "reviews": [
        {
          "rating": 5,
          "comment": "Very pleased!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Nora Russell",
          "reviewerEmail": "nora.russell@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Very pleased!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Dylan Wells",
          "reviewerEmail": "dylan.wells@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Great product!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Noah Hernandez",
          "reviewerEmail": "noah.hernandez@x.dummyjson.com"
        }
      ],
      "returnPolicy": "7 days return policy",
      "minimumOrderQuantity": 8,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.620Z",
        "updatedAt": "2024-05-23T08:56:21.620Z",
        "barcode": "3325493172934",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/groceries/Kiwi/1.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Kiwi/thumbnail.png",
      "deleted": false
    },
    {
      "id": "a0fd",
      "title": "oppo is greate",
      "brand": "Lipstick",
      "category": "smartphones",
      "price": "121",
      "discountPercentage": "21",
      "stock": "12",
      "thumbnail": "https://www.google.com/imgres?q=clothes%20for%20men&imgurl=https%3A%2F%2Fassets.myntassets.com%2Fdpr_1.5%2Cq_60%2Cw_400%2Cc_limit%2Cfl_progressive%2Fassets%2Fimages%2F8717979%2F2019%2F3%2F20%2F585db9fe-1df0-458d-b218-6f514eabb9601553068826233-Mast--Harbour-Men-Shirts-4141553068825026-1.jpg&imgrefurl=https%3A%2F%2Fwww.myntra.com%2Fmen-clothing&docid=Eu752MzIP3AZjM&tbnid=J6Wdl-RIAQ9edM&vet=12ahUKEwjYo96Isd6FAxWmTGwGHUeKAUMQM3oECGgQAA..i&w=600&h=800&hcb=2&ved=2ahUKEwjYo96Isd6FAxWmTGwGHUeKAUMQM3oECGgQAA",
      "images": [
        "https://media.istockphoto.com/id/1394988455/photo/laptop-with-a-blank-screen-on-a-white-background.jpg?s=612x612&w=0&k=20&c=BXNMs3xZNXP__d22aVkeyfvgJ5T18r6HuUTEESYf_tE=",
        "https://media.istockphoto.com/id/1394988455/photo/laptop-with-a-blank-screen-on-a-white-background.jpg?s=612x612&w=0&k=20&c=BXNMs3xZNXP__d22aVkeyfvgJ5T18r6HuUTEESYf_tE=",
        "https://media.istockphoto.com/id/1394988455/photo/laptop-with-a-blank-screen-on-a-white-background.jpg?s=612x612&w=0&k=20&c=BXNMs3xZNXP__d22aVkeyfvgJ5T18r6HuUTEESYf_tE=",
        "https://www.google.com/imgres?q=clothes%20for%20men&imgurl=https%3A%2F%2Fassets.myntassets.com%2Fdpr_1.5%2Cq_60%2Cw_400%2Cc_limit%2Cfl_progressive%2Fassets%2Fimages%2F8717979%2F2019%2F3%2F20%2F585db9fe-1df0-458d-b218-6f514eabb9601553068826233-Mast--Harbour-Men-Shirts-4141553068825026-1.jpg&imgrefurl=https%3A%2F%2Fwww.myntra.com%2Fmen-clothing&docid=Eu752MzIP3AZjM&tbnid=J6Wdl-RIAQ9edM&vet=12ahUKEwjYo96Isd6FAxWmTGwGHUeKAUMQM3oECGgQAA..i&w=600&h=800&hcb=2&ved=2ahUKEwjYo96Isd6FAxWmTGwGHUeKAUMQM3oECGgQAA"
      ],
      "rating": 0,
      "deleted": false
    },
    {
      "id": "8f55",
      "title": "gshock is good",
      "brand": "Boots",
      "category": "smartphones",
      "price": 2800,
      "discountPercentage": 23,
      "stock": 5,
      "thumbnail": "https://m.media-amazon.com/images/I/71girhyQcJL._SX679_.jpg",
      "images": [
        "https://m.media-amazon.com/images/I/71girhyQcJL._SX679_.jpg",
        "https://m.media-amazon.com/images/I/71girhyQcJL._SX679_.jpg",
        "https://m.media-amazon.com/images/I/71girhyQcJL._SX679_.jpg",
        "https://m.media-amazon.com/images/I/71girhyQcJL._SX679_.jpg"
      ],
      "rating": 0
    },
    {
      "id": "ffd1",
      "title": "iphone 16 ",
      "brand": "Lipstick",
      "category": "smartphones",
      "price": 150000,
      "discountPercentage": 2,
      "stock": 1,
      "thumbnail": "https://m.media-amazon.com/images/I/31zA1lIK+tL._SX342_SY445_.jpg",
      "images": [
        "https://m.media-amazon.com/images/I/31zA1lIK+tL._SX342_SY445_.jpg",
        "https://m.media-amazon.com/images/I/31zA1lIK+tL._SX342_SY445_.jpg",
        "https://m.media-amazon.com/images/I/31zA1lIK+tL._SX342_SY445_.jpg",
        "https://m.media-amazon.com/images/I/31zA1lIK+tL._SX342_SY445_.jpg"
      ],
      "rating": 0,
      "deleted": false
    }
  ],
 

    "products": [
      {
        "id": "1",
          "title": "Essence Mascara Lash Princess lala",
          "description": "The Essence Mascara Lash Princess is a popular mascara known for its volumizing and lengthening effects. Achieve dramatic lashes with this long-lasting and cruelty-free formula.",
          "category": "skincare",
          "price": 12,
          "discountPercentage": 1,
          "rating": 0,
          "stock": 5,
        "tags": [
          "beauty",
          "mascara"
        ],
        "brand": "Foundation",
        "sku": "RCH45Q1A",
        "weight": 2,
        "dimensions": {
          "width": 23.17,
          "height": 14.43,
          "depth": 28.01
        },
        "warrantyInformation": "1 month warranty",
        "shippingInformation": "Ships in 1 month",
        "availabilityStatus": "Low Stock",
        "reviews": [
          {
            "rating": 2,
            "comment": "Very unhappy with my purchase!",
            "date": "2024-05-23T08:56:21.618Z",
            "reviewerName": "John Doe",
            "reviewerEmail": "john.doe@x.dummyjson.com"
          },
          {
            "rating": 2,
            "comment": "Not as described!",
            "date": "2024-05-23T08:56:21.618Z",
            "reviewerName": "Nolan Gonzalez",
            "reviewerEmail": "nolan.gonzalez@x.dummyjson.com"
          },
          {
            "rating": 5,
            "comment": "Very satisfied!",
            "date": "2024-05-23T08:56:21.618Z",
            "reviewerName": "Scarlett Wright",
            "reviewerEmail": "scarlett.wright@x.dummyjson.com"
          }
        ],
        "returnPolicy": "30 days return policy",
        "minimumOrderQuantity": 24,
        "meta": {
          "createdAt": "2024-05-23T08:56:21.618Z",
          "updatedAt": "2024-05-23T08:56:21.618Z",
          "barcode": "9164035109868",
          "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
        },
        "images": [
          "https://cdn.dummyjson.com/products/images/beauty/Essence%20Mascara%20Lash%20Princess/1.png",
          "https://static.beautytocare.com/cdn-cgi/image/width=1440,height=1200,f=auto/media/catalog/product//e/s/essence-lash-princess-curl-volume-mascara-12ml.jpg",
          "https://cdn.dummyjson.com/products/images/beauty/Essence%20Mascara%20Lash%20Princess/1.png",
          "https://cdn.dummyjson.com/products/images/beauty/Essence%20Mascara%20Lash%20Princess/thumbnail.png"
        ],
        "thumbnail": "https://cdn.dummyjson.com/products/images/beauty/Essence%20Mascara%20Lash%20Princess/thumbnail.png",
        "deleted": false
      },
      {
        "id": "2",
        "title": "Eyeshadow Palette with Mirror",
        "description": "The Eyeshadow Palette with Mirror offers a versatile range of eyeshadow shades for creating stunning eye looks. With a built-in mirror, it's convenient for on-the-go makeup application.",
        "category": "beauty",
        "price": 19.99,
        "discountPercentage": 5.5,
        "rating": 3.28,
        "stock": 44,
        "tags": [
          "beauty",
          "eyeshadow"
        ],
        "brand": "Glamour Beauty",
        "sku": "MVCFH27F",
        "weight": 3,
        "dimensions": {
          "width": 12.42,
          "height": 8.63,
          "depth": 29.13
        },
        "warrantyInformation": "1 year warranty",
        "shippingInformation": "Ships in 2 weeks",
        "availabilityStatus": "In Stock",
        "reviews": [
          {
            "rating": 4,
            "comment": "Very satisfied!",
            "date": "2024-05-23T08:56:21.618Z",
            "reviewerName": "Liam Garcia",
            "reviewerEmail": "liam.garcia@x.dummyjson.com"
          },
          {
            "rating": 1,
            "comment": "Very disappointed!",
            "date": "2024-05-23T08:56:21.618Z",
            "reviewerName": "Nora Russell",
            "reviewerEmail": "nora.russell@x.dummyjson.com"
          },
          {
            "rating": 5,
            "comment": "Highly impressed!",
            "date": "2024-05-23T08:56:21.618Z",
            "reviewerName": "Elena Baker",
            "reviewerEmail": "elena.baker@x.dummyjson.com"
          }
        ],
        "returnPolicy": "30 days return policy",
        "minimumOrderQuantity": 32,
        "meta": {
          "createdAt": "2024-05-23T08:56:21.618Z",
          "updatedAt": "2024-05-23T08:56:21.618Z",
          "barcode": "2817839095220",
          "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
        },
        "images": [
          "https://cdn.dummyjson.com/products/images/beauty/Eyeshadow%20Palette%20with%20Mirror/1.png",
          "https://cdn.dummyjson.com/products/images/beauty/Eyeshadow%20Palette%20with%20Mirror/1.png",
          "https://cdn.dummyjson.com/products/images/beauty/Eyeshadow%20Palette%20with%20Mirror/1.png"
        ],
        "thumbnail": "https://cdn.dummyjson.com/products/images/beauty/Eyeshadow%20Palette%20with%20Mirror/thumbnail.png",
        "deleted": false
      },
      {
        "id": "3",
        "title": "Powder Canister fila",
        "description": "The Powder Canister is a finely milled setting powder designed to set makeup and control shine. With a lightweight and translucent formula, it provides a smooth and matte finish.",
        "category": "skincare",
        "price": 14,
        "discountPercentage": 18,
        "rating": 0,
        "stock": 5,
        "tags": [
          "beauty",
          "face powder"
        ],
        "brand": "Foundation",
        "sku": "9EN8WLT2",
        "weight": 8,
        "dimensions": {
          "width": 24.16,
          "height": 10.7,
          "depth": 11.07
        },
        "warrantyInformation": "2 year warranty",
        "shippingInformation": "Ships in 1-2 business days",
        "availabilityStatus": "In Stock",
        "reviews": [
          {
            "rating": 5,
            "comment": "Very happy with my purchase!",
            "date": "2024-05-23T08:56:21.618Z",
            "reviewerName": "Ethan Thompson",
            "reviewerEmail": "ethan.thompson@x.dummyjson.com"
          },
          {
            "rating": 4,
            "comment": "Great value for money!",
            "date": "2024-05-23T08:56:21.618Z",
            "reviewerName": "Levi Hicks",
            "reviewerEmail": "levi.hicks@x.dummyjson.com"
          },
          {
            "rating": 5,
            "comment": "Highly impressed!",
            "date": "2024-05-23T08:56:21.618Z",
            "reviewerName": "Hazel Gardner",
            "reviewerEmail": "hazel.gardner@x.dummyjson.com"
          }
        ],
        "returnPolicy": "60 days return policy",
        "minimumOrderQuantity": 25,
        "meta": {
          "createdAt": "2024-05-23T08:56:21.618Z",
          "updatedAt": "2024-05-23T08:56:21.618Z",
          "barcode": "0516267971277",
          "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
        },
        "images": [
          "https://cdn.dummyjson.com/products/images/beauty/Powder%20Canister/1.png",
          "https://cdn.dummyjson.com/products/images/beauty/Powder%20Canister/1.png",
          "https://cdn.dummyjson.com/products/images/beauty/Powder%20Canister/1.png",
          "https://cdn.dummyjson.com/products/images/beauty/Eyeshadow%20Palette%20with%20Mirror/thumbnail.png"
        ],
        "thumbnail": "https://cdn.dummyjson.com/products/images/beauty/Eyeshadow%20Palette%20with%20Mirror/thumbnail.png",
        "deleted": false
      },
      {
        "id": "4",
        "title": "Red Lipstick",
        "description": "The Red Lipstick is a classic and bold choice for adding a pop of color to your lips. With a creamy and pigmented formula, it provides a vibrant and long-lasting finish.",
        "category": "beauty",
        "price": 12.99,
        "discountPercentage": 19.03,
        "rating": 2.51,
        "stock": 68,
        "tags": [
          "beauty",
          "lipstick"
        ],
        "brand": "Chic Cosmetics",
        "sku": "O5IF1NTA",
        "weight": 5,
        "dimensions": {
          "width": 14.37,
          "height": 13.94,
          "depth": 14.6
        },
        "warrantyInformation": "Lifetime warranty",
        "shippingInformation": "Ships in 2 weeks",
        "availabilityStatus": "In Stock",
        "reviews": [
          {
            "rating": 5,
            "comment": "Great product!",
            "date": "2024-05-23T08:56:21.619Z",
            "reviewerName": "Leo Rivera",
            "reviewerEmail": "leo.rivera@x.dummyjson.com"
          },
          {
            "rating": 4,
            "comment": "Very pleased!",
            "date": "2024-05-23T08:56:21.619Z",
            "reviewerName": "Oscar Powers",
            "reviewerEmail": "oscar.powers@x.dummyjson.com"
          },
          {
            "rating": 5,
            "comment": "Very pleased!",
            "date": "2024-05-23T08:56:21.619Z",
            "reviewerName": "Carter Rivera",
            "reviewerEmail": "carter.rivera@x.dummyjson.com"
          }
        ],
        "returnPolicy": "90 days return policy",
        "minimumOrderQuantity": 6,
        "meta": {
          "createdAt": "2024-05-23T08:56:21.619Z",
          "updatedAt": "2024-05-23T08:56:21.619Z",
          "barcode": "9444582199406",
          "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
        },
        "images": [
          "https://cdn.dummyjson.com/products/images/beauty/Red%20Lipstick/1.png",
          "https://cdn.dummyjson.com/products/images/beauty/Red%20Lipstick/1.png",
          "https://cdn.dummyjson.com/products/images/beauty/Red%20Lipstick/1.png"
        ],
        "thumbnail": "https://cdn.dummyjson.com/products/images/beauty/Red%20Lipstick/thumbnail.png",
        "deleted": false
      },
      {
        "id": "5",
        "title": "Red Nail Polish",
        "description": "The Red Nail Polish offers a rich and glossy red hue for vibrant and polished nails. With a quick-drying formula, it provides a salon-quality finish at home.",
        "category": "beauty",
        "price": 8.99,
        "discountPercentage": 2.46,
        "rating": 3.91,
        "stock": 71,
        "tags": [
          "beauty",
          "nail polish"
        ],
        "brand": "Nail Couture",
        "sku": "YUIIIP4W",
        "weight": 9,
        "dimensions": {
          "width": 8.11,
          "height": 10.89,
          "depth": 29.06
        },
        "warrantyInformation": "1 year warranty",
        "shippingInformation": "Ships in 1 week",
        "availabilityStatus": "In Stock",
        "reviews": [
          {
            "rating": 5,
            "comment": "Very pleased!",
            "date": "2024-05-23T08:56:21.619Z",
            "reviewerName": "Leo Rivera",
            "reviewerEmail": "leo.rivera@x.dummyjson.com"
          },
          {
            "rating": 5,
            "comment": "Great product!",
            "date": "2024-05-23T08:56:21.619Z",
            "reviewerName": "Evan Reed",
            "reviewerEmail": "evan.reed@x.dummyjson.com"
          },
          {
            "rating": 4,
            "comment": "Highly recommended!",
            "date": "2024-05-23T08:56:21.619Z",
            "reviewerName": "Evelyn Sanchez",
            "reviewerEmail": "evelyn.sanchez@x.dummyjson.com"
          }
        ],
        "returnPolicy": "No return policy",
        "minimumOrderQuantity": 46,
        "meta": {
          "createdAt": "2024-05-23T08:56:21.619Z",
          "updatedAt": "2024-05-23T08:56:21.619Z",
          "barcode": "3212847902461",
          "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
        },
        "images": [
          "https://cdn.dummyjson.com/products/images/beauty/Red%20Nail%20Polish/1.png",
          "https://cdn.dummyjson.com/products/images/beauty/Red%20Nail%20Polish/1.png",
          "https://cdn.dummyjson.com/products/images/beauty/Red%20Nail%20Polish/1.png"
        ],
        "thumbnail": "https://cdn.dummyjson.com/products/images/beauty/Red%20Nail%20Polish/thumbnail.png",
        "deleted": false
      },
      {
        "id": "6",
        "title": "Calvin Klein CK One",
        "description": "CK One by Calvin Klein is a classic unisex fragrance, known for its fresh and clean scent. It's a versatile fragrance suitable for everyday wear.",
        "category": "fragrances",
        "price": 49.99,
        "discountPercentage": 0.32,
        "rating": 4.85,
        "stock": 17,
        "tags": [
          "fragrances",
          "perfumes"
        ],
        "brand": "Calvin Klein",
        "sku": "DZM2JQZE",
        "weight": 5,
        "dimensions": {
          "width": 11.53,
          "height": 14.44,
          "depth": 6.81
        },
        "warrantyInformation": "5 year warranty",
        "shippingInformation": "Ships overnight",
        "availabilityStatus": "In Stock",
        "reviews": [
          {
            "rating": 5,
            "comment": "Great value for money!",
            "date": "2024-05-23T08:56:21.619Z",
            "reviewerName": "Sophia Brown",
            "reviewerEmail": "sophia.brown@x.dummyjson.com"
          },
          {
            "rating": 3,
            "comment": "Very disappointed!",
            "date": "2024-05-23T08:56:21.619Z",
            "reviewerName": "Madison Collins",
            "reviewerEmail": "madison.collins@x.dummyjson.com"
          },
          {
            "rating": 1,
            "comment": "Poor quality!",
            "date": "2024-05-23T08:56:21.619Z",
            "reviewerName": "Maya Reed",
            "reviewerEmail": "maya.reed@x.dummyjson.com"
          }
        ],
        "returnPolicy": "No return policy",
        "minimumOrderQuantity": 20,
        "meta": {
          "createdAt": "2024-05-23T08:56:21.619Z",
          "updatedAt": "2024-05-23T08:56:21.619Z",
          "barcode": "2210136215089",
          "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
        },
        "images": [
          "https://cdn.dummyjson.com/products/images/fragrances/Calvin%20Klein%20CK%20One/1.png",
          "https://cdn.dummyjson.com/products/images/fragrances/Calvin%20Klein%20CK%20One/2.png",
          "https://cdn.dummyjson.com/products/images/fragrances/Calvin%20Klein%20CK%20One/3.png"
        ],
        "thumbnail": "https://cdn.dummyjson.com/products/images/fragrances/Calvin%20Klein%20CK%20One/thumbnail.png",
        "deleted": false
      },
      {
        "id": "7",
        "title": "Chanel Coco Noir Eau De",
        "description": "Coco Noir by Chanel is an elegant and mysterious fragrance, featuring notes of grapefruit, rose, and sandalwood. Perfect for evening occasions.",
        "category": "fragrances",
        "price": 129.99,
        "discountPercentage": 18.64,
        "rating": 2.76,
        "stock": 41,
        "tags": [
          "fragrances",
          "perfumes"
        ],
        "brand": "Chanel",
        "sku": "K71HBCGS",
        "weight": 4,
        "dimensions": {
          "width": 21.27,
          "height": 28,
          "depth": 11.89
        },
        "warrantyInformation": "1 week warranty",
        "shippingInformation": "Ships in 1 month",
        "availabilityStatus": "In Stock",
        "reviews": [
          {
            "rating": 1,
            "comment": "Disappointing product!",
            "date": "2024-05-23T08:56:21.619Z",
            "reviewerName": "Lincoln Kelly",
            "reviewerEmail": "lincoln.kelly@x.dummyjson.com"
          },
          {
            "rating": 4,
            "comment": "Great product!",
            "date": "2024-05-23T08:56:21.619Z",
            "reviewerName": "Lincoln Kelly",
            "reviewerEmail": "lincoln.kelly@x.dummyjson.com"
          },
          {
            "rating": 4,
            "comment": "Excellent quality!",
            "date": "2024-05-23T08:56:21.619Z",
            "reviewerName": "Lucas Allen",
            "reviewerEmail": "lucas.allen@x.dummyjson.com"
          }
        ],
        "returnPolicy": "60 days return policy",
        "minimumOrderQuantity": 5,
        "meta": {
          "createdAt": "2024-05-23T08:56:21.619Z",
          "updatedAt": "2024-05-23T08:56:21.619Z",
          "barcode": "1435582999795",
          "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
        },
        "images": [
          "https://cdn.dummyjson.com/products/images/fragrances/Chanel%20Coco%20Noir%20Eau%20De/1.png",
          "https://cdn.dummyjson.com/products/images/fragrances/Chanel%20Coco%20Noir%20Eau%20De/2.png",
          "https://cdn.dummyjson.com/products/images/fragrances/Chanel%20Coco%20Noir%20Eau%20De/3.png"
        ],
        "thumbnail": "https://cdn.dummyjson.com/products/images/fragrances/Chanel%20Coco%20Noir%20Eau%20De/thumbnail.png",
        "deleted": false
      },
      {
        "id": "8",
        "title": "Dior J'adore",
        "description": "J'adore by Dior is a luxurious and floral fragrance, known for its blend of ylang-ylang, rose, and jasmine. It embodies femininity and sophistication.",
        "category": "fragrances",
        "price": 89.99,
        "discountPercentage": 17.44,
        "rating": 3.31,
        "stock": 91,
        "tags": [
          "fragrances",
          "perfumes"
        ],
        "brand": "Dior",
        "sku": "E70NB03B",
        "weight": 10,
        "dimensions": {
          "width": 21.51,
          "height": 7,
          "depth": 26.51
        },
        "warrantyInformation": "Lifetime warranty",
        "shippingInformation": "Ships in 2 weeks",
        "availabilityStatus": "In Stock",
        "reviews": [
          {
            "rating": 5,
            "comment": "Fast shipping!",
            "date": "2024-05-23T08:56:21.619Z",
            "reviewerName": "Zoe Nicholson",
            "reviewerEmail": "zoe.nicholson@x.dummyjson.com"
          },
          {
            "rating": 4,
            "comment": "Excellent quality!",
            "date": "2024-05-23T08:56:21.619Z",
            "reviewerName": "Addison Wright",
            "reviewerEmail": "addison.wright@x.dummyjson.com"
          },
          {
            "rating": 4,
            "comment": "Would buy again!",
            "date": "2024-05-23T08:56:21.619Z",
            "reviewerName": "Clara Berry",
            "reviewerEmail": "clara.berry@x.dummyjson.com"
          }
        ],
        "returnPolicy": "7 days return policy",
        "minimumOrderQuantity": 8,
        "meta": {
          "createdAt": "2024-05-23T08:56:21.619Z",
          "updatedAt": "2024-05-23T08:56:21.619Z",
          "barcode": "0887083199279",
          "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
        },
        "images": [
          "https://cdn.dummyjson.com/products/images/fragrances/Dior%20J'adore/1.png",
          "https://cdn.dummyjson.com/products/images/fragrances/Dior%20J'adore/2.png",
          "https://cdn.dummyjson.com/products/images/fragrances/Dior%20J'adore/3.png"
        ],
        "thumbnail": "https://cdn.dummyjson.com/products/images/fragrances/Dior%20J'adore/thumbnail.png",
        "deleted": false
      },
      {
        "id": "9",
        "title": "Dolce Shine Eau de",
        "description": "Dolce Shine by Dolce & Gabbana is a vibrant and fruity fragrance, featuring notes of mango, jasmine, and blonde woods. It's a joyful and youthful scent.",
        "category": "fragrances",
        "price": 69.99,
        "discountPercentage": 11.47,
        "rating": 2.68,
        "stock": 3,
        "tags": [
          "fragrances",
          "perfumes"
        ],
        "brand": "Dolce & Gabbana",
        "sku": "1NBFK980",
        "weight": 5,
        "dimensions": {
          "width": 17,
          "height": 24.57,
          "depth": 13.3
        },
        "warrantyInformation": "5 year warranty",
        "shippingInformation": "Ships in 1-2 business days",
        "availabilityStatus": "Low Stock",
        "reviews": [
          {
            "rating": 4,
            "comment": "Very satisfied!",
            "date": "2024-05-23T08:56:21.619Z",
            "reviewerName": "Xavier Wright",
            "reviewerEmail": "xavier.wright@x.dummyjson.com"
          },
          {
            "rating": 1,
            "comment": "Poor quality!",
            "date": "2024-05-23T08:56:21.619Z",
            "reviewerName": "Mila Hernandez",
            "reviewerEmail": "mila.hernandez@x.dummyjson.com"
          },
          {
            "rating": 5,
            "comment": "Very happy with my purchase!",
            "date": "2024-05-23T08:56:21.619Z",
            "reviewerName": "Sophia Brown",
            "reviewerEmail": "sophia.brown@x.dummyjson.com"
          }
        ],
        "returnPolicy": "30 days return policy",
        "minimumOrderQuantity": 9,
        "meta": {
          "createdAt": "2024-05-23T08:56:21.619Z",
          "updatedAt": "2024-05-23T08:56:21.619Z",
          "barcode": "1939383392674",
          "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
        },
        "images": [
          "https://cdn.dummyjson.com/products/images/fragrances/Dolce%20Shine%20Eau%20de/1.png",
          "https://cdn.dummyjson.com/products/images/fragrances/Dolce%20Shine%20Eau%20de/2.png",
          "https://cdn.dummyjson.com/products/images/fragrances/Dolce%20Shine%20Eau%20de/3.png"
        ],
        "thumbnail": "https://cdn.dummyjson.com/products/images/fragrances/Dolce%20Shine%20Eau%20de/thumbnail.png"
      },
      {
        "id": "10",
        "title": "Gucci Bloom Eau de",
        "description": "Gucci Bloom by Gucci is a floral and captivating fragrance, with notes of tuberose, jasmine, and Rangoon creeper. It's a modern and romantic scent.",
        "category": "fragrances",
        "price": 79.99,
        "discountPercentage": 8.9,
        "rating": 2.69,
        "stock": 93,
        "tags": [
          "fragrances",
          "perfumes"
        ],
        "brand": "Gucci",
        "sku": "FFKZ6HOF",
        "weight": 10,
        "dimensions": {
          "width": 22.28,
          "height": 17.81,
          "depth": 27.18
        },
        "warrantyInformation": "No warranty",
        "shippingInformation": "Ships in 2 weeks",
        "availabilityStatus": "In Stock",
        "reviews": [
          {
            "rating": 5,
            "comment": "Great value for money!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Aria Parker",
            "reviewerEmail": "aria.parker@x.dummyjson.com"
          },
          {
            "rating": 4,
            "comment": "Excellent quality!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Natalie Harris",
            "reviewerEmail": "natalie.harris@x.dummyjson.com"
          },
          {
            "rating": 4,
            "comment": "Fast shipping!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Ava Harris",
            "reviewerEmail": "ava.harris@x.dummyjson.com"
          }
        ],
        "returnPolicy": "No return policy",
        "minimumOrderQuantity": 10,
        "meta": {
          "createdAt": "2024-05-23T08:56:21.620Z",
          "updatedAt": "2024-05-23T08:56:21.620Z",
          "barcode": "8232190382069",
          "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
        },
        "images": [
          "https://cdn.dummyjson.com/products/images/fragrances/Gucci%20Bloom%20Eau%20de/1.png",
          "https://cdn.dummyjson.com/products/images/fragrances/Gucci%20Bloom%20Eau%20de/2.png",
          "https://cdn.dummyjson.com/products/images/fragrances/Gucci%20Bloom%20Eau%20de/3.png"
        ],
        "thumbnail": "https://cdn.dummyjson.com/products/images/fragrances/Gucci%20Bloom%20Eau%20de/thumbnail.png"
      },
      {
        "id": "11",
        "title": "Annibale Colombo Bed",
        "description": "The Annibale Colombo Bed is a luxurious and elegant bed frame, crafted with high-quality materials for a comfortable and stylish bedroom.",
        "category": "furniture",
        "price": 1899.99,
        "discountPercentage": 0.29,
        "rating": 4.14,
        "stock": 47,
        "tags": [
          "furniture",
          "beds"
        ],
        "brand": "Annibale Colombo",
        "sku": "4KMDTZWF",
        "weight": 3,
        "dimensions": {
          "width": 28.75,
          "height": 26.88,
          "depth": 24.47
        },
        "warrantyInformation": "2 year warranty",
        "shippingInformation": "Ships overnight",
        "availabilityStatus": "In Stock",
        "reviews": [
          {
            "rating": 4,
            "comment": "Great value for money!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Julian Newton",
            "reviewerEmail": "julian.newton@x.dummyjson.com"
          },
          {
            "rating": 5,
            "comment": "Would buy again!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Madison Collins",
            "reviewerEmail": "madison.collins@x.dummyjson.com"
          },
          {
            "rating": 4,
            "comment": "Would buy again!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Clara Berry",
            "reviewerEmail": "clara.berry@x.dummyjson.com"
          }
        ],
        "returnPolicy": "7 days return policy",
        "minimumOrderQuantity": 1,
        "meta": {
          "createdAt": "2024-05-23T08:56:21.620Z",
          "updatedAt": "2024-05-23T08:56:21.620Z",
          "barcode": "7113807059215",
          "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
        },
        "images": [
          "https://cdn.dummyjson.com/products/images/furniture/Annibale%20Colombo%20Bed/1.png",
          "https://cdn.dummyjson.com/products/images/furniture/Annibale%20Colombo%20Bed/2.png",
          "https://cdn.dummyjson.com/products/images/furniture/Annibale%20Colombo%20Bed/3.png"
        ],
        "thumbnail": "https://cdn.dummyjson.com/products/images/furniture/Annibale%20Colombo%20Bed/thumbnail.png"
      },
      {
        "id": "12",
        "title": "Annibale Colombo Sofa",
        "description": "The Annibale Colombo Sofa is a sophisticated and comfortable seating option, featuring exquisite design and premium upholstery for your living room.",
        "category": "furniture",
        "price": 2499.99,
        "discountPercentage": 18.54,
        "rating": 3.08,
        "stock": 16,
        "tags": [
          "furniture",
          "sofas"
        ],
        "brand": "Annibale Colombo",
        "sku": "LUU95CQP",
        "weight": 3,
        "dimensions": {
          "width": 20.97,
          "height": 19.11,
          "depth": 25.81
        },
        "warrantyInformation": "1 month warranty",
        "shippingInformation": "Ships overnight",
        "availabilityStatus": "In Stock",
        "reviews": [
          {
            "rating": 5,
            "comment": "Very satisfied!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Tyler Davis",
            "reviewerEmail": "tyler.davis@x.dummyjson.com"
          },
          {
            "rating": 5,
            "comment": "Excellent quality!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Hannah Robinson",
            "reviewerEmail": "hannah.robinson@x.dummyjson.com"
          },
          {
            "rating": 3,
            "comment": "Waste of money!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Madison Collins",
            "reviewerEmail": "madison.collins@x.dummyjson.com"
          }
        ],
        "returnPolicy": "7 days return policy",
        "minimumOrderQuantity": 1,
        "meta": {
          "createdAt": "2024-05-23T08:56:21.620Z",
          "updatedAt": "2024-05-23T08:56:21.620Z",
          "barcode": "0426785817074",
          "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
        },
        "images": [
          "https://cdn.dummyjson.com/products/images/furniture/Annibale%20Colombo%20Sofa/1.png",
          "https://cdn.dummyjson.com/products/images/furniture/Annibale%20Colombo%20Sofa/2.png",
          "https://cdn.dummyjson.com/products/images/furniture/Annibale%20Colombo%20Sofa/3.png"
        ],
        "thumbnail": "https://cdn.dummyjson.com/products/images/furniture/Annibale%20Colombo%20Sofa/thumbnail.png"
      },
      {
        "id": "13",
        "title": "Bedside Table African Cherry",
        "description": "The Bedside Table in African Cherry is a stylish and functional addition to your bedroom, providing convenient storage space and a touch of elegance.",
        "category": "furniture",
        "price": 299.99,
        "discountPercentage": 9.58,
        "rating": 4.48,
        "stock": 16,
        "tags": [
          "furniture",
          "bedside tables"
        ],
        "brand": "Furniture Co.",
        "sku": "OWPLTZYX",
        "weight": 10,
        "dimensions": {
          "width": 25.43,
          "height": 20.2,
          "depth": 24.95
        },
        "warrantyInformation": "6 months warranty",
        "shippingInformation": "Ships in 1-2 business days",
        "availabilityStatus": "In Stock",
        "reviews": [
          {
            "rating": 5,
            "comment": "Very happy with my purchase!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "John Doe",
            "reviewerEmail": "john.doe@x.dummyjson.com"
          },
          {
            "rating": 4,
            "comment": "Highly recommended!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Avery Carter",
            "reviewerEmail": "avery.carter@x.dummyjson.com"
          },
          {
            "rating": 4,
            "comment": "Very pleased!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Evelyn Sanchez",
            "reviewerEmail": "evelyn.sanchez@x.dummyjson.com"
          }
        ],
        "returnPolicy": "No return policy",
        "minimumOrderQuantity": 5,
        "meta": {
          "createdAt": "2024-05-23T08:56:21.620Z",
          "updatedAt": "2024-05-23T08:56:21.620Z",
          "barcode": "2913244159666",
          "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
        },
        "images": [
          "https://cdn.dummyjson.com/products/images/furniture/Bedside%20Table%20African%20Cherry/1.png",
          "https://cdn.dummyjson.com/products/images/furniture/Bedside%20Table%20African%20Cherry/2.png",
          "https://cdn.dummyjson.com/products/images/furniture/Bedside%20Table%20African%20Cherry/3.png"
        ],
        "thumbnail": "https://cdn.dummyjson.com/products/images/furniture/Bedside%20Table%20African%20Cherry/thumbnail.png"
      },
      {
        "id": "14",
        "title": "Knoll Saarinen Executive Conference Chair",
        "description": "The Knoll Saarinen Executive Conference Chair is a modern and ergonomic chair, perfect for your office or conference room with its timeless design.",
        "category": "furniture",
        "price": 499.99,
        "discountPercentage": 15.23,
        "rating": 4.11,
        "stock": 47,
        "tags": [
          "furniture",
          "office chairs"
        ],
        "brand": "Knoll",
        "sku": "RKHVJ4FE",
        "weight": 3,
        "dimensions": {
          "width": 16.59,
          "height": 21.46,
          "depth": 29.07
        },
        "warrantyInformation": "Lifetime warranty",
        "shippingInformation": "Ships in 3-5 business days",
        "availabilityStatus": "In Stock",
        "reviews": [
          {
            "rating": 4,
            "comment": "Very happy with my purchase!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Leah Gutierrez",
            "reviewerEmail": "leah.gutierrez@x.dummyjson.com"
          },
          {
            "rating": 4,
            "comment": "Would buy again!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Nolan Gonzalez",
            "reviewerEmail": "nolan.gonzalez@x.dummyjson.com"
          },
          {
            "rating": 2,
            "comment": "Waste of money!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Stella Morris",
            "reviewerEmail": "stella.morris@x.dummyjson.com"
          }
        ],
        "returnPolicy": "30 days return policy",
        "minimumOrderQuantity": 5,
        "meta": {
          "createdAt": "2024-05-23T08:56:21.620Z",
          "updatedAt": "2024-05-23T08:56:21.620Z",
          "barcode": "0726316339746",
          "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
        },
        "images": [
          "https://cdn.dummyjson.com/products/images/furniture/Knoll%20Saarinen%20Executive%20Conference%20Chair/1.png",
          "https://cdn.dummyjson.com/products/images/furniture/Knoll%20Saarinen%20Executive%20Conference%20Chair/2.png",
          "https://cdn.dummyjson.com/products/images/furniture/Knoll%20Saarinen%20Executive%20Conference%20Chair/3.png"
        ],
        "thumbnail": "https://cdn.dummyjson.com/products/images/furniture/Knoll%20Saarinen%20Executive%20Conference%20Chair/thumbnail.png"
      },
      {
        "id": "15",
        "title": "Wooden Bathroom Sink With Mirror",
        "description": "The Wooden Bathroom Sink with Mirror is a unique and stylish addition to your bathroom, featuring a wooden sink countertop and a matching mirror.",
        "category": "furniture",
        "price": 799.99,
        "discountPercentage": 11.22,
        "rating": 3.26,
        "stock": 95,
        "tags": [
          "furniture",
          "bathroom"
        ],
        "brand": "Bath Trends",
        "sku": "7OLTIEVO",
        "weight": 6,
        "dimensions": {
          "width": 7.32,
          "height": 22.64,
          "depth": 12.37
        },
        "warrantyInformation": "6 months warranty",
        "shippingInformation": "Ships in 3-5 business days",
        "availabilityStatus": "In Stock",
        "reviews": [
          {
            "rating": 5,
            "comment": "Highly recommended!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Charlotte Lopez",
            "reviewerEmail": "charlotte.lopez@x.dummyjson.com"
          },
          {
            "rating": 1,
            "comment": "Would not recommend!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "William Gonzalez",
            "reviewerEmail": "william.gonzalez@x.dummyjson.com"
          },
          {
            "rating": 2,
            "comment": "Not worth the price!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Ava Harrison",
            "reviewerEmail": "ava.harrison@x.dummyjson.com"
          }
        ],
        "returnPolicy": "7 days return policy",
        "minimumOrderQuantity": 1,
        "meta": {
          "createdAt": "2024-05-23T08:56:21.620Z",
          "updatedAt": "2024-05-23T08:56:21.620Z",
          "barcode": "7839797529453",
          "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
        },
        "images": [
          "https://cdn.dummyjson.com/products/images/furniture/Wooden%20Bathroom%20Sink%20With%20Mirror/1.png",
          "https://cdn.dummyjson.com/products/images/furniture/Wooden%20Bathroom%20Sink%20With%20Mirror/2.png",
          "https://cdn.dummyjson.com/products/images/furniture/Wooden%20Bathroom%20Sink%20With%20Mirror/3.png"
        ],
        "thumbnail": "https://cdn.dummyjson.com/products/images/furniture/Wooden%20Bathroom%20Sink%20With%20Mirror/thumbnail.png"
      },
      {
        "id": "16",
        "title": "Apple",
        "description": "Fresh and crisp apples, perfect for snacking or incorporating into various recipes.",
        "category": "groceries",
        "price": 1.99,
        "discountPercentage": 1.97,
        "rating": 2.96,
        "stock": 9,
        "tags": [
          "fruits"
        ],
        "sku": "QTROUV79",
        "weight": 8,
        "dimensions": {
          "width": 8.29,
          "height": 5.58,
          "depth": 12.41
        },
        "warrantyInformation": "2 year warranty",
        "shippingInformation": "Ships in 2 weeks",
        "availabilityStatus": "In Stock",
        "reviews": [
          {
            "rating": 4,
            "comment": "Great product!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Logan Lee",
            "reviewerEmail": "logan.lee@x.dummyjson.com"
          },
          {
            "rating": 4,
            "comment": "Great product!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Elena Long",
            "reviewerEmail": "elena.long@x.dummyjson.com"
          },
          {
            "rating": 1,
            "comment": "Not as described!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Grayson Coleman",
            "reviewerEmail": "grayson.coleman@x.dummyjson.com"
          }
        ],
        "returnPolicy": "60 days return policy",
        "minimumOrderQuantity": 44,
        "meta": {
          "createdAt": "2024-05-23T08:56:21.620Z",
          "updatedAt": "2024-05-23T08:56:21.620Z",
          "barcode": "2517819903837",
          "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
        },
        "images": [
          "https://cdn.dummyjson.com/products/images/groceries/Apple/1.png"
        ],
        "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Apple/thumbnail.png"
      },
      {
        "id": "17",
        "title": "Beef Steak",
        "description": "High-quality beef steak, great for grilling or cooking to your preferred level of doneness.",
        "category": "groceries",
        "price": 12.99,
        "discountPercentage": 17.99,
        "rating": 2.83,
        "stock": 96,
        "tags": [
          "meat"
        ],
        "sku": "BWWA2MSO",
        "weight": 9,
        "dimensions": {
          "width": 23.35,
          "height": 13.48,
          "depth": 26.4
        },
        "warrantyInformation": "1 month warranty",
        "shippingInformation": "Ships overnight",
        "availabilityStatus": "In Stock",
        "reviews": [
          {
            "rating": 4,
            "comment": "Very pleased!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Ethan Martinez",
            "reviewerEmail": "ethan.martinez@x.dummyjson.com"
          },
          {
            "rating": 3,
            "comment": "Disappointing product!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Owen Fisher",
            "reviewerEmail": "owen.fisher@x.dummyjson.com"
          },
          {
            "rating": 4,
            "comment": "Very happy with my purchase!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Scarlett Wright",
            "reviewerEmail": "scarlett.wright@x.dummyjson.com"
          }
        ],
        "returnPolicy": "90 days return policy",
        "minimumOrderQuantity": 21,
        "meta": {
          "createdAt": "2024-05-23T08:56:21.620Z",
          "updatedAt": "2024-05-23T08:56:21.620Z",
          "barcode": "8335515097879",
          "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
        },
        "images": [
          "https://cdn.dummyjson.com/products/images/groceries/Beef%20Steak/1.png"
        ],
        "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Beef%20Steak/thumbnail.png"
      },
      {
        "id": "18",
        "title": "Cat Food",
        "description": "Nutritious cat food formulated to meet the dietary needs of your feline friend.",
        "category": "groceries",
        "price": 8.99,
        "discountPercentage": 9.57,
        "rating": 2.88,
        "stock": 13,
        "tags": [
          "pet supplies",
          "cat food"
        ],
        "sku": "C3F8QN6O",
        "weight": 9,
        "dimensions": {
          "width": 15.4,
          "height": 13.97,
          "depth": 25.13
        },
        "warrantyInformation": "3 months warranty",
        "shippingInformation": "Ships in 1-2 business days",
        "availabilityStatus": "In Stock",
        "reviews": [
          {
            "rating": 5,
            "comment": "Very pleased!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Mateo Bennett",
            "reviewerEmail": "mateo.bennett@x.dummyjson.com"
          },
          {
            "rating": 5,
            "comment": "Very pleased!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Aurora Barnes",
            "reviewerEmail": "aurora.barnes@x.dummyjson.com"
          },
          {
            "rating": 5,
            "comment": "Great value for money!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Ellie Stewart",
            "reviewerEmail": "ellie.stewart@x.dummyjson.com"
          }
        ],
        "returnPolicy": "7 days return policy",
        "minimumOrderQuantity": 48,
        "meta": {
          "createdAt": "2024-05-23T08:56:21.620Z",
          "updatedAt": "2024-05-23T08:56:21.620Z",
          "barcode": "5503491330693",
          "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
        },
        "images": [
          "https://cdn.dummyjson.com/products/images/groceries/Cat%20Food/1.png"
        ],
        "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Cat%20Food/thumbnail.png"
      },
      {
        "id": "19",
        "title": "Chicken Meat",
        "description": "Fresh and tender chicken meat, suitable for various culinary preparations.",
        "category": "groceries",
        "price": 9.99,
        "discountPercentage": 10.46,
        "rating": 4.61,
        "stock": 69,
        "tags": [
          "meat"
        ],
        "sku": "G5YEHW7B",
        "weight": 7,
        "dimensions": {
          "width": 15.96,
          "height": 29.24,
          "depth": 26.25
        },
        "warrantyInformation": "Lifetime warranty",
        "shippingInformation": "Ships in 1 month",
        "availabilityStatus": "In Stock",
        "reviews": [
          {
            "rating": 5,
            "comment": "Very satisfied!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Sophia Jones",
            "reviewerEmail": "sophia.jones@x.dummyjson.com"
          },
          {
            "rating": 5,
            "comment": "Great value for money!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Maya Reed",
            "reviewerEmail": "maya.reed@x.dummyjson.com"
          },
          {
            "rating": 4,
            "comment": "Highly recommended!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Harper Turner",
            "reviewerEmail": "harper.turner@x.dummyjson.com"
          }
        ],
        "returnPolicy": "7 days return policy",
        "minimumOrderQuantity": 46,
        "meta": {
          "createdAt": "2024-05-23T08:56:21.620Z",
          "updatedAt": "2024-05-23T08:56:21.620Z",
          "barcode": "0966223559510",
          "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
        },
        "images": [
          "https://cdn.dummyjson.com/products/images/groceries/Chicken%20Meat/1.png",
          "https://cdn.dummyjson.com/products/images/groceries/Chicken%20Meat/2.png"
        ],
        "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Chicken%20Meat/thumbnail.png"
      },
      {
        "id": "20",
        "title": "Cooking Oil",
        "description": "Versatile cooking oil suitable for frying, sautéing, and various culinary applications.",
        "category": "groceries",
        "price": 4.99,
        "discountPercentage": 18.89,
        "rating": 4.01,
        "stock": 22,
        "tags": [
          "cooking essentials"
        ],
        "sku": "Q6ZP1UY8",
        "weight": 8,
        "dimensions": {
          "width": 8.18,
          "height": 27.45,
          "depth": 27.88
        },
        "warrantyInformation": "Lifetime warranty",
        "shippingInformation": "Ships in 1 month",
        "availabilityStatus": "In Stock",
        "reviews": [
          {
            "rating": 5,
            "comment": "Would buy again!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Mason Parker",
            "reviewerEmail": "mason.parker@x.dummyjson.com"
          },
          {
            "rating": 3,
            "comment": "Poor quality!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Jonathan Pierce",
            "reviewerEmail": "jonathan.pierce@x.dummyjson.com"
          },
          {
            "rating": 5,
            "comment": "Would buy again!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Alexander Hernandez",
            "reviewerEmail": "alexander.hernandez@x.dummyjson.com"
          }
        ],
        "returnPolicy": "60 days return policy",
        "minimumOrderQuantity": 2,
        "meta": {
          "createdAt": "2024-05-23T08:56:21.620Z",
          "updatedAt": "2024-05-23T08:56:21.620Z",
          "barcode": "6707669443381",
          "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
        },
        "images": [
          "https://cdn.dummyjson.com/products/images/groceries/Cooking%20Oil/1.png"
        ],
        "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Cooking%20Oil/thumbnail.png"
      },
      {
        "id": "21",
        "title": "Cucumber",
        "description": "Crisp and hydrating cucumbers, ideal for salads, snacks, or as a refreshing side.",
        "category": "groceries",
        "price": 1.49,
        "discountPercentage": 11.44,
        "rating": 4.71,
        "stock": 22,
        "tags": [
          "vegetables"
        ],
        "sku": "6KGF2K6Z",
        "weight": 9,
        "dimensions": {
          "width": 11.04,
          "height": 20.5,
          "depth": 8.18
        },
        "warrantyInformation": "5 year warranty",
        "shippingInformation": "Ships overnight",
        "availabilityStatus": "In Stock",
        "reviews": [
          {
            "rating": 4,
            "comment": "Very satisfied!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Elijah Hill",
            "reviewerEmail": "elijah.hill@x.dummyjson.com"
          },
          {
            "rating": 5,
            "comment": "Fast shipping!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Liam Garcia",
            "reviewerEmail": "liam.garcia@x.dummyjson.com"
          },
          {
            "rating": 4,
            "comment": "Excellent quality!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Ella Cook",
            "reviewerEmail": "ella.cook@x.dummyjson.com"
          }
        ],
        "returnPolicy": "30 days return policy",
        "minimumOrderQuantity": 7,
        "meta": {
          "createdAt": "2024-05-23T08:56:21.620Z",
          "updatedAt": "2024-05-23T08:56:21.620Z",
          "barcode": "2597004869708",
          "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
        },
        "images": [
          "https://cdn.dummyjson.com/products/images/groceries/Cucumber/1.png"
        ],
        "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Cucumber/thumbnail.png",
        "deleted": false
      },
      {
        "id": "22",
        "title": "Dog Food",
        "description": "Specially formulated dog food designed to provide essential nutrients for your canine companion.",
        "category": "groceries",
        "price": 10.99,
        "discountPercentage": 18.15,
        "rating": 2.74,
        "stock": 40,
        "tags": [
          "pet supplies",
          "dog food"
        ],
        "sku": "A6QRCH37",
        "weight": 2,
        "dimensions": {
          "width": 29.39,
          "height": 29.77,
          "depth": 20.54
        },
        "warrantyInformation": "1 year warranty",
        "shippingInformation": "Ships in 1 month",
        "availabilityStatus": "In Stock",
        "reviews": [
          {
            "rating": 5,
            "comment": "Highly impressed!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Leo Rivera",
            "reviewerEmail": "leo.rivera@x.dummyjson.com"
          },
          {
            "rating": 4,
            "comment": "Highly recommended!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Alexander Jones",
            "reviewerEmail": "alexander.jones@x.dummyjson.com"
          },
          {
            "rating": 4,
            "comment": "Would buy again!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Addison Wright",
            "reviewerEmail": "addison.wright@x.dummyjson.com"
          }
        ],
        "returnPolicy": "90 days return policy",
        "minimumOrderQuantity": 29,
        "meta": {
          "createdAt": "2024-05-23T08:56:21.620Z",
          "updatedAt": "2024-05-23T08:56:21.620Z",
          "barcode": "7957222289508",
          "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
        },
        "images": [
          "https://cdn.dummyjson.com/products/images/groceries/Dog%20Food/1.png"
        ],
        "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Dog%20Food/thumbnail.png"
      },
      {
        "id": "23",
        "title": "Eggs",
        "description": "Fresh eggs, a versatile ingredient for baking, cooking, or breakfast.",
        "category": "groceries",
        "price": 2.99,
        "discountPercentage": 5.8,
        "rating": 4.46,
        "stock": 10,
        "tags": [
          "dairy"
        ],
        "sku": "YA617RI7",
        "weight": 4,
        "dimensions": {
          "width": 12.3,
          "height": 10.99,
          "depth": 15.53
        },
        "warrantyInformation": "3 year warranty",
        "shippingInformation": "Ships overnight",
        "availabilityStatus": "In Stock",
        "reviews": [
          {
            "rating": 2,
            "comment": "Very unhappy with my purchase!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Mateo Perez",
            "reviewerEmail": "mateo.perez@x.dummyjson.com"
          },
          {
            "rating": 4,
            "comment": "Very happy with my purchase!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Cameron Perez",
            "reviewerEmail": "cameron.perez@x.dummyjson.com"
          },
          {
            "rating": 5,
            "comment": "Very happy with my purchase!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Aurora Barnes",
            "reviewerEmail": "aurora.barnes@x.dummyjson.com"
          }
        ],
        "returnPolicy": "30 days return policy",
        "minimumOrderQuantity": 43,
        "meta": {
          "createdAt": "2024-05-23T08:56:21.620Z",
          "updatedAt": "2024-05-23T08:56:21.620Z",
          "barcode": "7095702028776",
          "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
        },
        "images": [
          "https://cdn.dummyjson.com/products/images/groceries/Eggs/1.png"
        ],
        "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Eggs/thumbnail.png"
      },
      {
        "id": "24",
        "title": "Fish Steak",
        "description": "Quality fish steak, suitable for grilling, baking, or pan-searing.",
        "category": "groceries",
        "price": 14.99,
        "discountPercentage": 7,
        "rating": 4.83,
        "stock": 99,
        "tags": [
          "seafood"
        ],
        "sku": "XNIH1MTA",
        "weight": 8,
        "dimensions": {
          "width": 20.14,
          "height": 8.4,
          "depth": 10.01
        },
        "warrantyInformation": "1 year warranty",
        "shippingInformation": "Ships in 1 month",
        "availabilityStatus": "In Stock",
        "reviews": [
          {
            "rating": 5,
            "comment": "Great value for money!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Michael Johnson",
            "reviewerEmail": "michael.johnson@x.dummyjson.com"
          },
          {
            "rating": 4,
            "comment": "Would buy again!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Julian Newton",
            "reviewerEmail": "julian.newton@x.dummyjson.com"
          },
          {
            "rating": 5,
            "comment": "Excellent quality!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Lila Hudson",
            "reviewerEmail": "lila.hudson@x.dummyjson.com"
          }
        ],
        "returnPolicy": "30 days return policy",
        "minimumOrderQuantity": 49,
        "meta": {
          "createdAt": "2024-05-23T08:56:21.620Z",
          "updatedAt": "2024-05-23T08:56:21.620Z",
          "barcode": "4250692197342",
          "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
        },
        "images": [
          "https://cdn.dummyjson.com/products/images/groceries/Fish%20Steak/1.png"
        ],
        "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Fish%20Steak/thumbnail.png"
      },
      {
        "id": "25",
        "title": "Green Bell Pepper",
        "description": "Fresh and vibrant green bell pepper, perfect for adding color and flavor to your dishes.",
        "category": "groceries",
        "price": 1.29,
        "discountPercentage": 15.5,
        "rating": 4.28,
        "stock": 89,
        "tags": [
          "vegetables"
        ],
        "sku": "HU7S7VQ0",
        "weight": 7,
        "dimensions": {
          "width": 7.32,
          "height": 14.31,
          "depth": 21.38
        },
        "warrantyInformation": "5 year warranty",
        "shippingInformation": "Ships overnight",
        "availabilityStatus": "In Stock",
        "reviews": [
          {
            "rating": 4,
            "comment": "Excellent quality!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Maya Reed",
            "reviewerEmail": "maya.reed@x.dummyjson.com"
          },
          {
            "rating": 4,
            "comment": "Would buy again!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Madison Collins",
            "reviewerEmail": "madison.collins@x.dummyjson.com"
          },
          {
            "rating": 5,
            "comment": "Would buy again!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Ethan Thompson",
            "reviewerEmail": "ethan.thompson@x.dummyjson.com"
          }
        ],
        "returnPolicy": "30 days return policy",
        "minimumOrderQuantity": 1,
        "meta": {
          "createdAt": "2024-05-23T08:56:21.620Z",
          "updatedAt": "2024-05-23T08:56:21.620Z",
          "barcode": "7583442707568",
          "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
        },
        "images": [
          "https://cdn.dummyjson.com/products/images/groceries/Green%20Bell%20Pepper/1.png"
        ],
        "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Green%20Bell%20Pepper/thumbnail.png"
      },
      {
        "id": "26",
        "title": "Green Chili Pepper",
        "description": "Spicy green chili pepper, ideal for adding heat to your favorite recipes.",
        "category": "groceries",
        "price": 0.99,
        "discountPercentage": 18.51,
        "rating": 4.43,
        "stock": 8,
        "tags": [
          "vegetables"
        ],
        "sku": "Y4RM3JCB",
        "weight": 2,
        "dimensions": {
          "width": 18.67,
          "height": 21.17,
          "depth": 25.26
        },
        "warrantyInformation": "No warranty",
        "shippingInformation": "Ships in 1-2 business days",
        "availabilityStatus": "In Stock",
        "reviews": [
          {
            "rating": 2,
            "comment": "Disappointing product!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Mateo Bennett",
            "reviewerEmail": "mateo.bennett@x.dummyjson.com"
          },
          {
            "rating": 5,
            "comment": "Very pleased!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Natalie Price",
            "reviewerEmail": "natalie.price@x.dummyjson.com"
          },
          {
            "rating": 4,
            "comment": "Very satisfied!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Avery Barnes",
            "reviewerEmail": "avery.barnes@x.dummyjson.com"
          }
        ],
        "returnPolicy": "30 days return policy",
        "minimumOrderQuantity": 43,
        "meta": {
          "createdAt": "2024-05-23T08:56:21.620Z",
          "updatedAt": "2024-05-23T08:56:21.620Z",
          "barcode": "8400326844874",
          "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
        },
        "images": [
          "https://cdn.dummyjson.com/products/images/groceries/Green%20Chili%20Pepper/1.png"
        ],
        "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Green%20Chili%20Pepper/thumbnail.png",
        "deleted": false
      },
      {
        "id": "27",
        "title": "Honey Jar",
        "description": "Pure and natural honey in a convenient jar, perfect for sweetening beverages or drizzling over food.",
        "category": "groceries",
        "price": 6.99,
        "discountPercentage": 1.91,
        "rating": 3.5,
        "stock": 25,
        "tags": [
          "condiments"
        ],
        "sku": "BTBNIIOU",
        "weight": 9,
        "dimensions": {
          "width": 26.53,
          "height": 27.11,
          "depth": 6.63
        },
        "warrantyInformation": "2 year warranty",
        "shippingInformation": "Ships overnight",
        "availabilityStatus": "In Stock",
        "reviews": [
          {
            "rating": 4,
            "comment": "Fast shipping!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Nicholas Bailey",
            "reviewerEmail": "nicholas.bailey@x.dummyjson.com"
          },
          {
            "rating": 5,
            "comment": "Awesome product!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Gabriel Hayes",
            "reviewerEmail": "gabriel.hayes@x.dummyjson.com"
          },
          {
            "rating": 5,
            "comment": "Highly impressed!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "James Garcia",
            "reviewerEmail": "james.garcia@x.dummyjson.com"
          }
        ],
        "returnPolicy": "90 days return policy",
        "minimumOrderQuantity": 1,
        "meta": {
          "createdAt": "2024-05-23T08:56:21.620Z",
          "updatedAt": "2024-05-23T08:56:21.620Z",
          "barcode": "0668665656044",
          "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
        },
        "images": [
          "https://cdn.dummyjson.com/products/images/groceries/Honey%20Jar/1.png"
        ],
        "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Honey%20Jar/thumbnail.png",
        "deleted": false
      },
      {
        "id": "28",
        "title": "Ice Cream",
        "description": "Creamy and delicious ice cream, available in various flavors for a delightful treat.",
        "category": "groceries",
        "price": 5.49,
        "discountPercentage": 7.58,
        "rating": 3.77,
        "stock": 76,
        "tags": [
          "desserts"
        ],
        "sku": "VEZMU1EQ",
        "weight": 5,
        "dimensions": {
          "width": 17.66,
          "height": 24.49,
          "depth": 25.98
        },
        "warrantyInformation": "2 year warranty",
        "shippingInformation": "Ships in 2 weeks",
        "availabilityStatus": "In Stock",
        "reviews": [
          {
            "rating": 5,
            "comment": "Great product!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Elena Baker",
            "reviewerEmail": "elena.baker@x.dummyjson.com"
          },
          {
            "rating": 5,
            "comment": "Highly impressed!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Madeline Simpson",
            "reviewerEmail": "madeline.simpson@x.dummyjson.com"
          },
          {
            "rating": 5,
            "comment": "Very happy with my purchase!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Caleb Nelson",
            "reviewerEmail": "caleb.nelson@x.dummyjson.com"
          }
        ],
        "returnPolicy": "No return policy",
        "minimumOrderQuantity": 19,
        "meta": {
          "createdAt": "2024-05-23T08:56:21.620Z",
          "updatedAt": "2024-05-23T08:56:21.620Z",
          "barcode": "9603960319256",
          "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
        },
        "images": [
          "https://cdn.dummyjson.com/products/images/groceries/Ice%20Cream/1.png",
          "https://cdn.dummyjson.com/products/images/groceries/Ice%20Cream/2.png",
          "https://cdn.dummyjson.com/products/images/groceries/Ice%20Cream/3.png",
          "https://cdn.dummyjson.com/products/images/groceries/Ice%20Cream/4.png"
        ],
        "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Ice%20Cream/thumbnail.png"
      },
      {
        "id": "29",
        "title": "Juice",
        "description": "Refreshing fruit juice, packed with vitamins and great for staying hydrated.",
        "category": "groceries",
        "price": 3.99,
        "discountPercentage": 5.45,
        "rating": 3.41,
        "stock": 99,
        "tags": [
          "beverages"
        ],
        "sku": "M2K19S06",
        "weight": 2,
        "dimensions": {
          "width": 8.97,
          "height": 12.26,
          "depth": 15.05
        },
        "warrantyInformation": "1 week warranty",
        "shippingInformation": "Ships in 1-2 business days",
        "availabilityStatus": "In Stock",
        "reviews": [
          {
            "rating": 4,
            "comment": "Very satisfied!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Leo Rivera",
            "reviewerEmail": "leo.rivera@x.dummyjson.com"
          },
          {
            "rating": 2,
            "comment": "Not worth the price!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Ethan Martinez",
            "reviewerEmail": "ethan.martinez@x.dummyjson.com"
          },
          {
            "rating": 4,
            "comment": "Excellent quality!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Max Parker",
            "reviewerEmail": "max.parker@x.dummyjson.com"
          }
        ],
        "returnPolicy": "90 days return policy",
        "minimumOrderQuantity": 26,
        "meta": {
          "createdAt": "2024-05-23T08:56:21.620Z",
          "updatedAt": "2024-05-23T08:56:21.620Z",
          "barcode": "8546824122355",
          "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
        },
        "images": [
          "https://cdn.dummyjson.com/products/images/groceries/Juice/1.png"
        ],
        "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Juice/thumbnail.png"
      },
      {
        "id": "30",
        "title": "Kiwi",
        "description": "Nutrient-rich kiwi, perfect for snacking or adding a tropical twist to your dishes.",
        "category": "groceries",
        "price": 2.49,
        "discountPercentage": 10.32,
        "rating": 4.37,
        "stock": 1,
        "tags": [
          "fruits"
        ],
        "sku": "0X3NORB9",
        "weight": 8,
        "dimensions": {
          "width": 27.3,
          "height": 7.48,
          "depth": 15.08
        },
        "warrantyInformation": "6 months warranty",
        "shippingInformation": "Ships in 3-5 business days",
        "availabilityStatus": "Low Stock",
        "reviews": [
          {
            "rating": 5,
            "comment": "Very pleased!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Nora Russell",
            "reviewerEmail": "nora.russell@x.dummyjson.com"
          },
          {
            "rating": 5,
            "comment": "Very pleased!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Dylan Wells",
            "reviewerEmail": "dylan.wells@x.dummyjson.com"
          },
          {
            "rating": 5,
            "comment": "Great product!",
            "date": "2024-05-23T08:56:21.620Z",
            "reviewerName": "Noah Hernandez",
            "reviewerEmail": "noah.hernandez@x.dummyjson.com"
          }
        ],
        "returnPolicy": "7 days return policy",
        "minimumOrderQuantity": 8,
        "meta": {
          "createdAt": "2024-05-23T08:56:21.620Z",
          "updatedAt": "2024-05-23T08:56:21.620Z",
          "barcode": "3325493172934",
          "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
        },
        "images": [
          "https://cdn.dummyjson.com/products/images/groceries/Kiwi/1.png"
        ],
        "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Kiwi/thumbnail.png",
        "deleted": false
      },
      {
        "id": "a0fd",
        "title": "oppo is greate",
        "brand": "Lipstick",
        "category": "smartphones",
        "price": "121",
        "discountPercentage": "21",
        "stock": "12",
        "thumbnail": "https://www.google.com/imgres?q=clothes%20for%20men&imgurl=https%3A%2F%2Fassets.myntassets.com%2Fdpr_1.5%2Cq_60%2Cw_400%2Cc_limit%2Cfl_progressive%2Fassets%2Fimages%2F8717979%2F2019%2F3%2F20%2F585db9fe-1df0-458d-b218-6f514eabb9601553068826233-Mast--Harbour-Men-Shirts-4141553068825026-1.jpg&imgrefurl=https%3A%2F%2Fwww.myntra.com%2Fmen-clothing&docid=Eu752MzIP3AZjM&tbnid=J6Wdl-RIAQ9edM&vet=12ahUKEwjYo96Isd6FAxWmTGwGHUeKAUMQM3oECGgQAA..i&w=600&h=800&hcb=2&ved=2ahUKEwjYo96Isd6FAxWmTGwGHUeKAUMQM3oECGgQAA",
        "images": [
          "https://media.istockphoto.com/id/1394988455/photo/laptop-with-a-blank-screen-on-a-white-background.jpg?s=612x612&w=0&k=20&c=BXNMs3xZNXP__d22aVkeyfvgJ5T18r6HuUTEESYf_tE=",
          "https://media.istockphoto.com/id/1394988455/photo/laptop-with-a-blank-screen-on-a-white-background.jpg?s=612x612&w=0&k=20&c=BXNMs3xZNXP__d22aVkeyfvgJ5T18r6HuUTEESYf_tE=",
          "https://media.istockphoto.com/id/1394988455/photo/laptop-with-a-blank-screen-on-a-white-background.jpg?s=612x612&w=0&k=20&c=BXNMs3xZNXP__d22aVkeyfvgJ5T18r6HuUTEESYf_tE=",
          "https://www.google.com/imgres?q=clothes%20for%20men&imgurl=https%3A%2F%2Fassets.myntassets.com%2Fdpr_1.5%2Cq_60%2Cw_400%2Cc_limit%2Cfl_progressive%2Fassets%2Fimages%2F8717979%2F2019%2F3%2F20%2F585db9fe-1df0-458d-b218-6f514eabb9601553068826233-Mast--Harbour-Men-Shirts-4141553068825026-1.jpg&imgrefurl=https%3A%2F%2Fwww.myntra.com%2Fmen-clothing&docid=Eu752MzIP3AZjM&tbnid=J6Wdl-RIAQ9edM&vet=12ahUKEwjYo96Isd6FAxWmTGwGHUeKAUMQM3oECGgQAA..i&w=600&h=800&hcb=2&ved=2ahUKEwjYo96Isd6FAxWmTGwGHUeKAUMQM3oECGgQAA"
        ],
        "rating": 0,
        "deleted": false
      },
      {
        "id": "8f55",
        "title": "gshock is good",
        "brand": "Boots",
        "category": "smartphones",
        "price": 2800,
        "discountPercentage": 23,
        "stock": 5,
        "thumbnail": "https://m.media-amazon.com/images/I/71girhyQcJL._SX679_.jpg",
        "images": [
          "https://m.media-amazon.com/images/I/71girhyQcJL._SX679_.jpg",
          "https://m.media-amazon.com/images/I/71girhyQcJL._SX679_.jpg",
          "https://m.media-amazon.com/images/I/71girhyQcJL._SX679_.jpg",
          "https://m.media-amazon.com/images/I/71girhyQcJL._SX679_.jpg"
        ],
        "rating": 0
      },
      {
        "id": "ffd1",
        "title": "iphone 16 ",
        "brand": "Lipstick",
        "category": "smartphones",
        "price": 150000,
        "discountPercentage": 2,
        "stock": 1,
        "thumbnail": "https://m.media-amazon.com/images/I/31zA1lIK+tL._SX342_SY445_.jpg",
        "images": [
          "https://m.media-amazon.com/images/I/31zA1lIK+tL._SX342_SY445_.jpg",
          "https://m.media-amazon.com/images/I/31zA1lIK+tL._SX342_SY445_.jpg",
          "https://m.media-amazon.com/images/I/31zA1lIK+tL._SX342_SY445_.jpg",
          "https://m.media-amazon.com/images/I/31zA1lIK+tL._SX342_SY445_.jpg"
        ],
        "rating": 0,
        "deleted": false
      }
    ],
 

      .addCase(updateUserAsync.fulfilled, (state, action) => {
        state.status = "idle";
        state.userInfo = {
          ...action.payload,
          addresses: action.payload.addresses || [], // Ensure addresses is always an array
        };
      });
 
// Import your store
 
./store
 
import React from 'react'
import { Login } from './Features/auth/components/Login'

function App() {
  return (
    <div>
    <Login></Login>
    </div>
  )
}

export default App

 
../features/user/userSlice
 

    product: productReducer,
 

    cart:cartReducer,
    order:orderReducer ,
 

import productReducer from "../features/productslist/productSlice";
import authReducer from "../features/auth/authSlice";
import cartReducer from '../features/cart/cartSlice'
import orderReducer from '../features/order/orderSlice'
 
../user/userApi
 


export const updateUserAsync = createAsyncThunk(
  "user/updateUser",
  async (update) => {
    const response = await updateUser(update);

    return response.data;
  }
);
 
../user/userApi
 
./authApi
 
../authSlice
 

      hello
 


// If you want to start measuring performance in your app, pass a function
// to log results (for example: reportWebVitals(console.log))
// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
reportWebVitals();
 

import reportWebVitals from './reportWebVitals';
 
{
  "products": [
    {
      "id": "1",
        "title": "Essence Mascara Lash Princess lala",
        "description": "The Essence Mascara Lash Princess is a popular mascara known for its volumizing and lengthening effects. Achieve dramatic lashes with this long-lasting and cruelty-free formula.",
        "category": "skincare",
        "price": 12,
        "discountPercentage": 1,
        "rating": 0,
        "stock": 5,
      "tags": [
        "beauty",
        "mascara"
      ],
      "brand": "Foundation",
      "sku": "RCH45Q1A",
      "weight": 2,
      "dimensions": {
        "width": 23.17,
        "height": 14.43,
        "depth": 28.01
      },
      "warrantyInformation": "1 month warranty",
      "shippingInformation": "Ships in 1 month",
      "availabilityStatus": "Low Stock",
      "reviews": [
        {
          "rating": 2,
          "comment": "Very unhappy with my purchase!",
          "date": "2024-05-23T08:56:21.618Z",
          "reviewerName": "John Doe",
          "reviewerEmail": "john.doe@x.dummyjson.com"
        },
        {
          "rating": 2,
          "comment": "Not as described!",
          "date": "2024-05-23T08:56:21.618Z",
          "reviewerName": "Nolan Gonzalez",
          "reviewerEmail": "nolan.gonzalez@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Very satisfied!",
          "date": "2024-05-23T08:56:21.618Z",
          "reviewerName": "Scarlett Wright",
          "reviewerEmail": "scarlett.wright@x.dummyjson.com"
        }
      ],
      "returnPolicy": "30 days return policy",
      "minimumOrderQuantity": 24,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.618Z",
        "updatedAt": "2024-05-23T08:56:21.618Z",
        "barcode": "9164035109868",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/beauty/Essence%20Mascara%20Lash%20Princess/1.png",
        "https://static.beautytocare.com/cdn-cgi/image/width=1440,height=1200,f=auto/media/catalog/product//e/s/essence-lash-princess-curl-volume-mascara-12ml.jpg",
        "https://cdn.dummyjson.com/products/images/beauty/Essence%20Mascara%20Lash%20Princess/1.png",
        "https://cdn.dummyjson.com/products/images/beauty/Essence%20Mascara%20Lash%20Princess/thumbnail.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/beauty/Essence%20Mascara%20Lash%20Princess/thumbnail.png",
      "deleted": false
    },
    {
      "id": "2",
      "title": "Eyeshadow Palette with Mirror",
      "description": "The Eyeshadow Palette with Mirror offers a versatile range of eyeshadow shades for creating stunning eye looks. With a built-in mirror, it's convenient for on-the-go makeup application.",
      "category": "beauty",
      "price": 19.99,
      "discountPercentage": 5.5,
      "rating": 3.28,
      "stock": 44,
      "tags": [
        "beauty",
        "eyeshadow"
      ],
      "brand": "Glamour Beauty",
      "sku": "MVCFH27F",
      "weight": 3,
      "dimensions": {
        "width": 12.42,
        "height": 8.63,
        "depth": 29.13
      },
      "warrantyInformation": "1 year warranty",
      "shippingInformation": "Ships in 2 weeks",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 4,
          "comment": "Very satisfied!",
          "date": "2024-05-23T08:56:21.618Z",
          "reviewerName": "Liam Garcia",
          "reviewerEmail": "liam.garcia@x.dummyjson.com"
        },
        {
          "rating": 1,
          "comment": "Very disappointed!",
          "date": "2024-05-23T08:56:21.618Z",
          "reviewerName": "Nora Russell",
          "reviewerEmail": "nora.russell@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Highly impressed!",
          "date": "2024-05-23T08:56:21.618Z",
          "reviewerName": "Elena Baker",
          "reviewerEmail": "elena.baker@x.dummyjson.com"
        }
      ],
      "returnPolicy": "30 days return policy",
      "minimumOrderQuantity": 32,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.618Z",
        "updatedAt": "2024-05-23T08:56:21.618Z",
        "barcode": "2817839095220",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/beauty/Eyeshadow%20Palette%20with%20Mirror/1.png",
        "https://cdn.dummyjson.com/products/images/beauty/Eyeshadow%20Palette%20with%20Mirror/1.png",
        "https://cdn.dummyjson.com/products/images/beauty/Eyeshadow%20Palette%20with%20Mirror/1.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/beauty/Eyeshadow%20Palette%20with%20Mirror/thumbnail.png",
      "deleted": false
    },
    {
      "id": "3",
      "title": "Powder Canister fila",
      "description": "The Powder Canister is a finely milled setting powder designed to set makeup and control shine. With a lightweight and translucent formula, it provides a smooth and matte finish.",
      "category": "skincare",
      "price": 14,
      "discountPercentage": 18,
      "rating": 0,
      "stock": 5,
      "tags": [
        "beauty",
        "face powder"
      ],
      "brand": "Foundation",
      "sku": "9EN8WLT2",
      "weight": 8,
      "dimensions": {
        "width": 24.16,
        "height": 10.7,
        "depth": 11.07
      },
      "warrantyInformation": "2 year warranty",
      "shippingInformation": "Ships in 1-2 business days",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 5,
          "comment": "Very happy with my purchase!",
          "date": "2024-05-23T08:56:21.618Z",
          "reviewerName": "Ethan Thompson",
          "reviewerEmail": "ethan.thompson@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Great value for money!",
          "date": "2024-05-23T08:56:21.618Z",
          "reviewerName": "Levi Hicks",
          "reviewerEmail": "levi.hicks@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Highly impressed!",
          "date": "2024-05-23T08:56:21.618Z",
          "reviewerName": "Hazel Gardner",
          "reviewerEmail": "hazel.gardner@x.dummyjson.com"
        }
      ],
      "returnPolicy": "60 days return policy",
      "minimumOrderQuantity": 25,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.618Z",
        "updatedAt": "2024-05-23T08:56:21.618Z",
        "barcode": "0516267971277",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/beauty/Powder%20Canister/1.png",
        "https://cdn.dummyjson.com/products/images/beauty/Powder%20Canister/1.png",
        "https://cdn.dummyjson.com/products/images/beauty/Powder%20Canister/1.png",
        "https://cdn.dummyjson.com/products/images/beauty/Eyeshadow%20Palette%20with%20Mirror/thumbnail.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/beauty/Eyeshadow%20Palette%20with%20Mirror/thumbnail.png",
      "deleted": false
    },
    {
      "id": "4",
      "title": "Red Lipstick",
      "description": "The Red Lipstick is a classic and bold choice for adding a pop of color to your lips. With a creamy and pigmented formula, it provides a vibrant and long-lasting finish.",
      "category": "beauty",
      "price": 12.99,
      "discountPercentage": 19.03,
      "rating": 2.51,
      "stock": 68,
      "tags": [
        "beauty",
        "lipstick"
      ],
      "brand": "Chic Cosmetics",
      "sku": "O5IF1NTA",
      "weight": 5,
      "dimensions": {
        "width": 14.37,
        "height": 13.94,
        "depth": 14.6
      },
      "warrantyInformation": "Lifetime warranty",
      "shippingInformation": "Ships in 2 weeks",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 5,
          "comment": "Great product!",
          "date": "2024-05-23T08:56:21.619Z",
          "reviewerName": "Leo Rivera",
          "reviewerEmail": "leo.rivera@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Very pleased!",
          "date": "2024-05-23T08:56:21.619Z",
          "reviewerName": "Oscar Powers",
          "reviewerEmail": "oscar.powers@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Very pleased!",
          "date": "2024-05-23T08:56:21.619Z",
          "reviewerName": "Carter Rivera",
          "reviewerEmail": "carter.rivera@x.dummyjson.com"
        }
      ],
      "returnPolicy": "90 days return policy",
      "minimumOrderQuantity": 6,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.619Z",
        "updatedAt": "2024-05-23T08:56:21.619Z",
        "barcode": "9444582199406",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/beauty/Red%20Lipstick/1.png",
        "https://cdn.dummyjson.com/products/images/beauty/Red%20Lipstick/1.png",
        "https://cdn.dummyjson.com/products/images/beauty/Red%20Lipstick/1.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/beauty/Red%20Lipstick/thumbnail.png",
      "deleted": false
    },
    {
      "id": "5",
      "title": "Red Nail Polish",
      "description": "The Red Nail Polish offers a rich and glossy red hue for vibrant and polished nails. With a quick-drying formula, it provides a salon-quality finish at home.",
      "category": "beauty",
      "price": 8.99,
      "discountPercentage": 2.46,
      "rating": 3.91,
      "stock": 71,
      "tags": [
        "beauty",
        "nail polish"
      ],
      "brand": "Nail Couture",
      "sku": "YUIIIP4W",
      "weight": 9,
      "dimensions": {
        "width": 8.11,
        "height": 10.89,
        "depth": 29.06
      },
      "warrantyInformation": "1 year warranty",
      "shippingInformation": "Ships in 1 week",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 5,
          "comment": "Very pleased!",
          "date": "2024-05-23T08:56:21.619Z",
          "reviewerName": "Leo Rivera",
          "reviewerEmail": "leo.rivera@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Great product!",
          "date": "2024-05-23T08:56:21.619Z",
          "reviewerName": "Evan Reed",
          "reviewerEmail": "evan.reed@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Highly recommended!",
          "date": "2024-05-23T08:56:21.619Z",
          "reviewerName": "Evelyn Sanchez",
          "reviewerEmail": "evelyn.sanchez@x.dummyjson.com"
        }
      ],
      "returnPolicy": "No return policy",
      "minimumOrderQuantity": 46,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.619Z",
        "updatedAt": "2024-05-23T08:56:21.619Z",
        "barcode": "3212847902461",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/beauty/Red%20Nail%20Polish/1.png",
        "https://cdn.dummyjson.com/products/images/beauty/Red%20Nail%20Polish/1.png",
        "https://cdn.dummyjson.com/products/images/beauty/Red%20Nail%20Polish/1.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/beauty/Red%20Nail%20Polish/thumbnail.png",
      "deleted": false
    },
    {
      "id": "6",
      "title": "Calvin Klein CK One",
      "description": "CK One by Calvin Klein is a classic unisex fragrance, known for its fresh and clean scent. It's a versatile fragrance suitable for everyday wear.",
      "category": "fragrances",
      "price": 49.99,
      "discountPercentage": 0.32,
      "rating": 4.85,
      "stock": 17,
      "tags": [
        "fragrances",
        "perfumes"
      ],
      "brand": "Calvin Klein",
      "sku": "DZM2JQZE",
      "weight": 5,
      "dimensions": {
        "width": 11.53,
        "height": 14.44,
        "depth": 6.81
      },
      "warrantyInformation": "5 year warranty",
      "shippingInformation": "Ships overnight",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 5,
          "comment": "Great value for money!",
          "date": "2024-05-23T08:56:21.619Z",
          "reviewerName": "Sophia Brown",
          "reviewerEmail": "sophia.brown@x.dummyjson.com"
        },
        {
          "rating": 3,
          "comment": "Very disappointed!",
          "date": "2024-05-23T08:56:21.619Z",
          "reviewerName": "Madison Collins",
          "reviewerEmail": "madison.collins@x.dummyjson.com"
        },
        {
          "rating": 1,
          "comment": "Poor quality!",
          "date": "2024-05-23T08:56:21.619Z",
          "reviewerName": "Maya Reed",
          "reviewerEmail": "maya.reed@x.dummyjson.com"
        }
      ],
      "returnPolicy": "No return policy",
      "minimumOrderQuantity": 20,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.619Z",
        "updatedAt": "2024-05-23T08:56:21.619Z",
        "barcode": "2210136215089",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/fragrances/Calvin%20Klein%20CK%20One/1.png",
        "https://cdn.dummyjson.com/products/images/fragrances/Calvin%20Klein%20CK%20One/2.png",
        "https://cdn.dummyjson.com/products/images/fragrances/Calvin%20Klein%20CK%20One/3.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/fragrances/Calvin%20Klein%20CK%20One/thumbnail.png",
      "deleted": false
    },
    {
      "id": "7",
      "title": "Chanel Coco Noir Eau De",
      "description": "Coco Noir by Chanel is an elegant and mysterious fragrance, featuring notes of grapefruit, rose, and sandalwood. Perfect for evening occasions.",
      "category": "fragrances",
      "price": 129.99,
      "discountPercentage": 18.64,
      "rating": 2.76,
      "stock": 41,
      "tags": [
        "fragrances",
        "perfumes"
      ],
      "brand": "Chanel",
      "sku": "K71HBCGS",
      "weight": 4,
      "dimensions": {
        "width": 21.27,
        "height": 28,
        "depth": 11.89
      },
      "warrantyInformation": "1 week warranty",
      "shippingInformation": "Ships in 1 month",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 1,
          "comment": "Disappointing product!",
          "date": "2024-05-23T08:56:21.619Z",
          "reviewerName": "Lincoln Kelly",
          "reviewerEmail": "lincoln.kelly@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Great product!",
          "date": "2024-05-23T08:56:21.619Z",
          "reviewerName": "Lincoln Kelly",
          "reviewerEmail": "lincoln.kelly@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Excellent quality!",
          "date": "2024-05-23T08:56:21.619Z",
          "reviewerName": "Lucas Allen",
          "reviewerEmail": "lucas.allen@x.dummyjson.com"
        }
      ],
      "returnPolicy": "60 days return policy",
      "minimumOrderQuantity": 5,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.619Z",
        "updatedAt": "2024-05-23T08:56:21.619Z",
        "barcode": "1435582999795",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/fragrances/Chanel%20Coco%20Noir%20Eau%20De/1.png",
        "https://cdn.dummyjson.com/products/images/fragrances/Chanel%20Coco%20Noir%20Eau%20De/2.png",
        "https://cdn.dummyjson.com/products/images/fragrances/Chanel%20Coco%20Noir%20Eau%20De/3.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/fragrances/Chanel%20Coco%20Noir%20Eau%20De/thumbnail.png",
      "deleted": false
    },
    {
      "id": "8",
      "title": "Dior J'adore",
      "description": "J'adore by Dior is a luxurious and floral fragrance, known for its blend of ylang-ylang, rose, and jasmine. It embodies femininity and sophistication.",
      "category": "fragrances",
      "price": 89.99,
      "discountPercentage": 17.44,
      "rating": 3.31,
      "stock": 91,
      "tags": [
        "fragrances",
        "perfumes"
      ],
      "brand": "Dior",
      "sku": "E70NB03B",
      "weight": 10,
      "dimensions": {
        "width": 21.51,
        "height": 7,
        "depth": 26.51
      },
      "warrantyInformation": "Lifetime warranty",
      "shippingInformation": "Ships in 2 weeks",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 5,
          "comment": "Fast shipping!",
          "date": "2024-05-23T08:56:21.619Z",
          "reviewerName": "Zoe Nicholson",
          "reviewerEmail": "zoe.nicholson@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Excellent quality!",
          "date": "2024-05-23T08:56:21.619Z",
          "reviewerName": "Addison Wright",
          "reviewerEmail": "addison.wright@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Would buy again!",
          "date": "2024-05-23T08:56:21.619Z",
          "reviewerName": "Clara Berry",
          "reviewerEmail": "clara.berry@x.dummyjson.com"
        }
      ],
      "returnPolicy": "7 days return policy",
      "minimumOrderQuantity": 8,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.619Z",
        "updatedAt": "2024-05-23T08:56:21.619Z",
        "barcode": "0887083199279",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/fragrances/Dior%20J'adore/1.png",
        "https://cdn.dummyjson.com/products/images/fragrances/Dior%20J'adore/2.png",
        "https://cdn.dummyjson.com/products/images/fragrances/Dior%20J'adore/3.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/fragrances/Dior%20J'adore/thumbnail.png",
      "deleted": false
    },
    {
      "id": "9",
      "title": "Dolce Shine Eau de",
      "description": "Dolce Shine by Dolce & Gabbana is a vibrant and fruity fragrance, featuring notes of mango, jasmine, and blonde woods. It's a joyful and youthful scent.",
      "category": "fragrances",
      "price": 69.99,
      "discountPercentage": 11.47,
      "rating": 2.68,
      "stock": 3,
      "tags": [
        "fragrances",
        "perfumes"
      ],
      "brand": "Dolce & Gabbana",
      "sku": "1NBFK980",
      "weight": 5,
      "dimensions": {
        "width": 17,
        "height": 24.57,
        "depth": 13.3
      },
      "warrantyInformation": "5 year warranty",
      "shippingInformation": "Ships in 1-2 business days",
      "availabilityStatus": "Low Stock",
      "reviews": [
        {
          "rating": 4,
          "comment": "Very satisfied!",
          "date": "2024-05-23T08:56:21.619Z",
          "reviewerName": "Xavier Wright",
          "reviewerEmail": "xavier.wright@x.dummyjson.com"
        },
        {
          "rating": 1,
          "comment": "Poor quality!",
          "date": "2024-05-23T08:56:21.619Z",
          "reviewerName": "Mila Hernandez",
          "reviewerEmail": "mila.hernandez@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Very happy with my purchase!",
          "date": "2024-05-23T08:56:21.619Z",
          "reviewerName": "Sophia Brown",
          "reviewerEmail": "sophia.brown@x.dummyjson.com"
        }
      ],
      "returnPolicy": "30 days return policy",
      "minimumOrderQuantity": 9,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.619Z",
        "updatedAt": "2024-05-23T08:56:21.619Z",
        "barcode": "1939383392674",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/fragrances/Dolce%20Shine%20Eau%20de/1.png",
        "https://cdn.dummyjson.com/products/images/fragrances/Dolce%20Shine%20Eau%20de/2.png",
        "https://cdn.dummyjson.com/products/images/fragrances/Dolce%20Shine%20Eau%20de/3.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/fragrances/Dolce%20Shine%20Eau%20de/thumbnail.png"
    },
    {
      "id": "10",
      "title": "Gucci Bloom Eau de",
      "description": "Gucci Bloom by Gucci is a floral and captivating fragrance, with notes of tuberose, jasmine, and Rangoon creeper. It's a modern and romantic scent.",
      "category": "fragrances",
      "price": 79.99,
      "discountPercentage": 8.9,
      "rating": 2.69,
      "stock": 93,
      "tags": [
        "fragrances",
        "perfumes"
      ],
      "brand": "Gucci",
      "sku": "FFKZ6HOF",
      "weight": 10,
      "dimensions": {
        "width": 22.28,
        "height": 17.81,
        "depth": 27.18
      },
      "warrantyInformation": "No warranty",
      "shippingInformation": "Ships in 2 weeks",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 5,
          "comment": "Great value for money!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Aria Parker",
          "reviewerEmail": "aria.parker@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Excellent quality!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Natalie Harris",
          "reviewerEmail": "natalie.harris@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Fast shipping!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Ava Harris",
          "reviewerEmail": "ava.harris@x.dummyjson.com"
        }
      ],
      "returnPolicy": "No return policy",
      "minimumOrderQuantity": 10,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.620Z",
        "updatedAt": "2024-05-23T08:56:21.620Z",
        "barcode": "8232190382069",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/fragrances/Gucci%20Bloom%20Eau%20de/1.png",
        "https://cdn.dummyjson.com/products/images/fragrances/Gucci%20Bloom%20Eau%20de/2.png",
        "https://cdn.dummyjson.com/products/images/fragrances/Gucci%20Bloom%20Eau%20de/3.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/fragrances/Gucci%20Bloom%20Eau%20de/thumbnail.png"
    },
    {
      "id": "11",
      "title": "Annibale Colombo Bed",
      "description": "The Annibale Colombo Bed is a luxurious and elegant bed frame, crafted with high-quality materials for a comfortable and stylish bedroom.",
      "category": "furniture",
      "price": 1899.99,
      "discountPercentage": 0.29,
      "rating": 4.14,
      "stock": 47,
      "tags": [
        "furniture",
        "beds"
      ],
      "brand": "Annibale Colombo",
      "sku": "4KMDTZWF",
      "weight": 3,
      "dimensions": {
        "width": 28.75,
        "height": 26.88,
        "depth": 24.47
      },
      "warrantyInformation": "2 year warranty",
      "shippingInformation": "Ships overnight",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 4,
          "comment": "Great value for money!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Julian Newton",
          "reviewerEmail": "julian.newton@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Would buy again!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Madison Collins",
          "reviewerEmail": "madison.collins@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Would buy again!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Clara Berry",
          "reviewerEmail": "clara.berry@x.dummyjson.com"
        }
      ],
      "returnPolicy": "7 days return policy",
      "minimumOrderQuantity": 1,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.620Z",
        "updatedAt": "2024-05-23T08:56:21.620Z",
        "barcode": "7113807059215",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/furniture/Annibale%20Colombo%20Bed/1.png",
        "https://cdn.dummyjson.com/products/images/furniture/Annibale%20Colombo%20Bed/2.png",
        "https://cdn.dummyjson.com/products/images/furniture/Annibale%20Colombo%20Bed/3.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/furniture/Annibale%20Colombo%20Bed/thumbnail.png"
    },
    {
      "id": "12",
      "title": "Annibale Colombo Sofa",
      "description": "The Annibale Colombo Sofa is a sophisticated and comfortable seating option, featuring exquisite design and premium upholstery for your living room.",
      "category": "furniture",
      "price": 2499.99,
      "discountPercentage": 18.54,
      "rating": 3.08,
      "stock": 16,
      "tags": [
        "furniture",
        "sofas"
      ],
      "brand": "Annibale Colombo",
      "sku": "LUU95CQP",
      "weight": 3,
      "dimensions": {
        "width": 20.97,
        "height": 19.11,
        "depth": 25.81
      },
      "warrantyInformation": "1 month warranty",
      "shippingInformation": "Ships overnight",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 5,
          "comment": "Very satisfied!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Tyler Davis",
          "reviewerEmail": "tyler.davis@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Excellent quality!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Hannah Robinson",
          "reviewerEmail": "hannah.robinson@x.dummyjson.com"
        },
        {
          "rating": 3,
          "comment": "Waste of money!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Madison Collins",
          "reviewerEmail": "madison.collins@x.dummyjson.com"
        }
      ],
      "returnPolicy": "7 days return policy",
      "minimumOrderQuantity": 1,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.620Z",
        "updatedAt": "2024-05-23T08:56:21.620Z",
        "barcode": "0426785817074",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/furniture/Annibale%20Colombo%20Sofa/1.png",
        "https://cdn.dummyjson.com/products/images/furniture/Annibale%20Colombo%20Sofa/2.png",
        "https://cdn.dummyjson.com/products/images/furniture/Annibale%20Colombo%20Sofa/3.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/furniture/Annibale%20Colombo%20Sofa/thumbnail.png"
    },
    {
      "id": "13",
      "title": "Bedside Table African Cherry",
      "description": "The Bedside Table in African Cherry is a stylish and functional addition to your bedroom, providing convenient storage space and a touch of elegance.",
      "category": "furniture",
      "price": 299.99,
      "discountPercentage": 9.58,
      "rating": 4.48,
      "stock": 16,
      "tags": [
        "furniture",
        "bedside tables"
      ],
      "brand": "Furniture Co.",
      "sku": "OWPLTZYX",
      "weight": 10,
      "dimensions": {
        "width": 25.43,
        "height": 20.2,
        "depth": 24.95
      },
      "warrantyInformation": "6 months warranty",
      "shippingInformation": "Ships in 1-2 business days",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 5,
          "comment": "Very happy with my purchase!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "John Doe",
          "reviewerEmail": "john.doe@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Highly recommended!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Avery Carter",
          "reviewerEmail": "avery.carter@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Very pleased!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Evelyn Sanchez",
          "reviewerEmail": "evelyn.sanchez@x.dummyjson.com"
        }
      ],
      "returnPolicy": "No return policy",
      "minimumOrderQuantity": 5,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.620Z",
        "updatedAt": "2024-05-23T08:56:21.620Z",
        "barcode": "2913244159666",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/furniture/Bedside%20Table%20African%20Cherry/1.png",
        "https://cdn.dummyjson.com/products/images/furniture/Bedside%20Table%20African%20Cherry/2.png",
        "https://cdn.dummyjson.com/products/images/furniture/Bedside%20Table%20African%20Cherry/3.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/furniture/Bedside%20Table%20African%20Cherry/thumbnail.png"
    },
    {
      "id": "14",
      "title": "Knoll Saarinen Executive Conference Chair",
      "description": "The Knoll Saarinen Executive Conference Chair is a modern and ergonomic chair, perfect for your office or conference room with its timeless design.",
      "category": "furniture",
      "price": 499.99,
      "discountPercentage": 15.23,
      "rating": 4.11,
      "stock": 47,
      "tags": [
        "furniture",
        "office chairs"
      ],
      "brand": "Knoll",
      "sku": "RKHVJ4FE",
      "weight": 3,
      "dimensions": {
        "width": 16.59,
        "height": 21.46,
        "depth": 29.07
      },
      "warrantyInformation": "Lifetime warranty",
      "shippingInformation": "Ships in 3-5 business days",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 4,
          "comment": "Very happy with my purchase!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Leah Gutierrez",
          "reviewerEmail": "leah.gutierrez@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Would buy again!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Nolan Gonzalez",
          "reviewerEmail": "nolan.gonzalez@x.dummyjson.com"
        },
        {
          "rating": 2,
          "comment": "Waste of money!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Stella Morris",
          "reviewerEmail": "stella.morris@x.dummyjson.com"
        }
      ],
      "returnPolicy": "30 days return policy",
      "minimumOrderQuantity": 5,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.620Z",
        "updatedAt": "2024-05-23T08:56:21.620Z",
        "barcode": "0726316339746",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/furniture/Knoll%20Saarinen%20Executive%20Conference%20Chair/1.png",
        "https://cdn.dummyjson.com/products/images/furniture/Knoll%20Saarinen%20Executive%20Conference%20Chair/2.png",
        "https://cdn.dummyjson.com/products/images/furniture/Knoll%20Saarinen%20Executive%20Conference%20Chair/3.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/furniture/Knoll%20Saarinen%20Executive%20Conference%20Chair/thumbnail.png"
    },
    {
      "id": "15",
      "title": "Wooden Bathroom Sink With Mirror",
      "description": "The Wooden Bathroom Sink with Mirror is a unique and stylish addition to your bathroom, featuring a wooden sink countertop and a matching mirror.",
      "category": "furniture",
      "price": 799.99,
      "discountPercentage": 11.22,
      "rating": 3.26,
      "stock": 95,
      "tags": [
        "furniture",
        "bathroom"
      ],
      "brand": "Bath Trends",
      "sku": "7OLTIEVO",
      "weight": 6,
      "dimensions": {
        "width": 7.32,
        "height": 22.64,
        "depth": 12.37
      },
      "warrantyInformation": "6 months warranty",
      "shippingInformation": "Ships in 3-5 business days",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 5,
          "comment": "Highly recommended!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Charlotte Lopez",
          "reviewerEmail": "charlotte.lopez@x.dummyjson.com"
        },
        {
          "rating": 1,
          "comment": "Would not recommend!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "William Gonzalez",
          "reviewerEmail": "william.gonzalez@x.dummyjson.com"
        },
        {
          "rating": 2,
          "comment": "Not worth the price!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Ava Harrison",
          "reviewerEmail": "ava.harrison@x.dummyjson.com"
        }
      ],
      "returnPolicy": "7 days return policy",
      "minimumOrderQuantity": 1,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.620Z",
        "updatedAt": "2024-05-23T08:56:21.620Z",
        "barcode": "7839797529453",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/furniture/Wooden%20Bathroom%20Sink%20With%20Mirror/1.png",
        "https://cdn.dummyjson.com/products/images/furniture/Wooden%20Bathroom%20Sink%20With%20Mirror/2.png",
        "https://cdn.dummyjson.com/products/images/furniture/Wooden%20Bathroom%20Sink%20With%20Mirror/3.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/furniture/Wooden%20Bathroom%20Sink%20With%20Mirror/thumbnail.png"
    },
    {
      "id": "16",
      "title": "Apple",
      "description": "Fresh and crisp apples, perfect for snacking or incorporating into various recipes.",
      "category": "groceries",
      "price": 1.99,
      "discountPercentage": 1.97,
      "rating": 2.96,
      "stock": 9,
      "tags": [
        "fruits"
      ],
      "sku": "QTROUV79",
      "weight": 8,
      "dimensions": {
        "width": 8.29,
        "height": 5.58,
        "depth": 12.41
      },
      "warrantyInformation": "2 year warranty",
      "shippingInformation": "Ships in 2 weeks",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 4,
          "comment": "Great product!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Logan Lee",
          "reviewerEmail": "logan.lee@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Great product!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Elena Long",
          "reviewerEmail": "elena.long@x.dummyjson.com"
        },
        {
          "rating": 1,
          "comment": "Not as described!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Grayson Coleman",
          "reviewerEmail": "grayson.coleman@x.dummyjson.com"
        }
      ],
      "returnPolicy": "60 days return policy",
      "minimumOrderQuantity": 44,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.620Z",
        "updatedAt": "2024-05-23T08:56:21.620Z",
        "barcode": "2517819903837",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/groceries/Apple/1.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Apple/thumbnail.png"
    },
    {
      "id": "17",
      "title": "Beef Steak",
      "description": "High-quality beef steak, great for grilling or cooking to your preferred level of doneness.",
      "category": "groceries",
      "price": 12.99,
      "discountPercentage": 17.99,
      "rating": 2.83,
      "stock": 96,
      "tags": [
        "meat"
      ],
      "sku": "BWWA2MSO",
      "weight": 9,
      "dimensions": {
        "width": 23.35,
        "height": 13.48,
        "depth": 26.4
      },
      "warrantyInformation": "1 month warranty",
      "shippingInformation": "Ships overnight",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 4,
          "comment": "Very pleased!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Ethan Martinez",
          "reviewerEmail": "ethan.martinez@x.dummyjson.com"
        },
        {
          "rating": 3,
          "comment": "Disappointing product!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Owen Fisher",
          "reviewerEmail": "owen.fisher@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Very happy with my purchase!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Scarlett Wright",
          "reviewerEmail": "scarlett.wright@x.dummyjson.com"
        }
      ],
      "returnPolicy": "90 days return policy",
      "minimumOrderQuantity": 21,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.620Z",
        "updatedAt": "2024-05-23T08:56:21.620Z",
        "barcode": "8335515097879",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/groceries/Beef%20Steak/1.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Beef%20Steak/thumbnail.png"
    },
    {
      "id": "18",
      "title": "Cat Food",
      "description": "Nutritious cat food formulated to meet the dietary needs of your feline friend.",
      "category": "groceries",
      "price": 8.99,
      "discountPercentage": 9.57,
      "rating": 2.88,
      "stock": 13,
      "tags": [
        "pet supplies",
        "cat food"
      ],
      "sku": "C3F8QN6O",
      "weight": 9,
      "dimensions": {
        "width": 15.4,
        "height": 13.97,
        "depth": 25.13
      },
      "warrantyInformation": "3 months warranty",
      "shippingInformation": "Ships in 1-2 business days",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 5,
          "comment": "Very pleased!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Mateo Bennett",
          "reviewerEmail": "mateo.bennett@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Very pleased!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Aurora Barnes",
          "reviewerEmail": "aurora.barnes@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Great value for money!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Ellie Stewart",
          "reviewerEmail": "ellie.stewart@x.dummyjson.com"
        }
      ],
      "returnPolicy": "7 days return policy",
      "minimumOrderQuantity": 48,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.620Z",
        "updatedAt": "2024-05-23T08:56:21.620Z",
        "barcode": "5503491330693",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/groceries/Cat%20Food/1.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Cat%20Food/thumbnail.png"
    },
    {
      "id": "19",
      "title": "Chicken Meat",
      "description": "Fresh and tender chicken meat, suitable for various culinary preparations.",
      "category": "groceries",
      "price": 9.99,
      "discountPercentage": 10.46,
      "rating": 4.61,
      "stock": 69,
      "tags": [
        "meat"
      ],
      "sku": "G5YEHW7B",
      "weight": 7,
      "dimensions": {
        "width": 15.96,
        "height": 29.24,
        "depth": 26.25
      },
      "warrantyInformation": "Lifetime warranty",
      "shippingInformation": "Ships in 1 month",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 5,
          "comment": "Very satisfied!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Sophia Jones",
          "reviewerEmail": "sophia.jones@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Great value for money!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Maya Reed",
          "reviewerEmail": "maya.reed@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Highly recommended!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Harper Turner",
          "reviewerEmail": "harper.turner@x.dummyjson.com"
        }
      ],
      "returnPolicy": "7 days return policy",
      "minimumOrderQuantity": 46,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.620Z",
        "updatedAt": "2024-05-23T08:56:21.620Z",
        "barcode": "0966223559510",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/groceries/Chicken%20Meat/1.png",
        "https://cdn.dummyjson.com/products/images/groceries/Chicken%20Meat/2.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Chicken%20Meat/thumbnail.png"
    },
    {
      "id": "20",
      "title": "Cooking Oil",
      "description": "Versatile cooking oil suitable for frying, sautéing, and various culinary applications.",
      "category": "groceries",
      "price": 4.99,
      "discountPercentage": 18.89,
      "rating": 4.01,
      "stock": 22,
      "tags": [
        "cooking essentials"
      ],
      "sku": "Q6ZP1UY8",
      "weight": 8,
      "dimensions": {
        "width": 8.18,
        "height": 27.45,
        "depth": 27.88
      },
      "warrantyInformation": "Lifetime warranty",
      "shippingInformation": "Ships in 1 month",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 5,
          "comment": "Would buy again!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Mason Parker",
          "reviewerEmail": "mason.parker@x.dummyjson.com"
        },
        {
          "rating": 3,
          "comment": "Poor quality!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Jonathan Pierce",
          "reviewerEmail": "jonathan.pierce@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Would buy again!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Alexander Hernandez",
          "reviewerEmail": "alexander.hernandez@x.dummyjson.com"
        }
      ],
      "returnPolicy": "60 days return policy",
      "minimumOrderQuantity": 2,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.620Z",
        "updatedAt": "2024-05-23T08:56:21.620Z",
        "barcode": "6707669443381",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/groceries/Cooking%20Oil/1.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Cooking%20Oil/thumbnail.png"
    },
    {
      "id": "21",
      "title": "Cucumber",
      "description": "Crisp and hydrating cucumbers, ideal for salads, snacks, or as a refreshing side.",
      "category": "groceries",
      "price": 1.49,
      "discountPercentage": 11.44,
      "rating": 4.71,
      "stock": 22,
      "tags": [
        "vegetables"
      ],
      "sku": "6KGF2K6Z",
      "weight": 9,
      "dimensions": {
        "width": 11.04,
        "height": 20.5,
        "depth": 8.18
      },
      "warrantyInformation": "5 year warranty",
      "shippingInformation": "Ships overnight",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 4,
          "comment": "Very satisfied!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Elijah Hill",
          "reviewerEmail": "elijah.hill@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Fast shipping!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Liam Garcia",
          "reviewerEmail": "liam.garcia@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Excellent quality!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Ella Cook",
          "reviewerEmail": "ella.cook@x.dummyjson.com"
        }
      ],
      "returnPolicy": "30 days return policy",
      "minimumOrderQuantity": 7,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.620Z",
        "updatedAt": "2024-05-23T08:56:21.620Z",
        "barcode": "2597004869708",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/groceries/Cucumber/1.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Cucumber/thumbnail.png",
      "deleted": false
    },
    {
      "id": "22",
      "title": "Dog Food",
      "description": "Specially formulated dog food designed to provide essential nutrients for your canine companion.",
      "category": "groceries",
      "price": 10.99,
      "discountPercentage": 18.15,
      "rating": 2.74,
      "stock": 40,
      "tags": [
        "pet supplies",
        "dog food"
      ],
      "sku": "A6QRCH37",
      "weight": 2,
      "dimensions": {
        "width": 29.39,
        "height": 29.77,
        "depth": 20.54
      },
      "warrantyInformation": "1 year warranty",
      "shippingInformation": "Ships in 1 month",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 5,
          "comment": "Highly impressed!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Leo Rivera",
          "reviewerEmail": "leo.rivera@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Highly recommended!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Alexander Jones",
          "reviewerEmail": "alexander.jones@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Would buy again!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Addison Wright",
          "reviewerEmail": "addison.wright@x.dummyjson.com"
        }
      ],
      "returnPolicy": "90 days return policy",
      "minimumOrderQuantity": 29,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.620Z",
        "updatedAt": "2024-05-23T08:56:21.620Z",
        "barcode": "7957222289508",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/groceries/Dog%20Food/1.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Dog%20Food/thumbnail.png"
    },
    {
      "id": "23",
      "title": "Eggs",
      "description": "Fresh eggs, a versatile ingredient for baking, cooking, or breakfast.",
      "category": "groceries",
      "price": 2.99,
      "discountPercentage": 5.8,
      "rating": 4.46,
      "stock": 10,
      "tags": [
        "dairy"
      ],
      "sku": "YA617RI7",
      "weight": 4,
      "dimensions": {
        "width": 12.3,
        "height": 10.99,
        "depth": 15.53
      },
      "warrantyInformation": "3 year warranty",
      "shippingInformation": "Ships overnight",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 2,
          "comment": "Very unhappy with my purchase!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Mateo Perez",
          "reviewerEmail": "mateo.perez@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Very happy with my purchase!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Cameron Perez",
          "reviewerEmail": "cameron.perez@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Very happy with my purchase!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Aurora Barnes",
          "reviewerEmail": "aurora.barnes@x.dummyjson.com"
        }
      ],
      "returnPolicy": "30 days return policy",
      "minimumOrderQuantity": 43,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.620Z",
        "updatedAt": "2024-05-23T08:56:21.620Z",
        "barcode": "7095702028776",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/groceries/Eggs/1.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Eggs/thumbnail.png"
    },
    {
      "id": "24",
      "title": "Fish Steak",
      "description": "Quality fish steak, suitable for grilling, baking, or pan-searing.",
      "category": "groceries",
      "price": 14.99,
      "discountPercentage": 7,
      "rating": 4.83,
      "stock": 99,
      "tags": [
        "seafood"
      ],
      "sku": "XNIH1MTA",
      "weight": 8,
      "dimensions": {
        "width": 20.14,
        "height": 8.4,
        "depth": 10.01
      },
      "warrantyInformation": "1 year warranty",
      "shippingInformation": "Ships in 1 month",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 5,
          "comment": "Great value for money!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Michael Johnson",
          "reviewerEmail": "michael.johnson@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Would buy again!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Julian Newton",
          "reviewerEmail": "julian.newton@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Excellent quality!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Lila Hudson",
          "reviewerEmail": "lila.hudson@x.dummyjson.com"
        }
      ],
      "returnPolicy": "30 days return policy",
      "minimumOrderQuantity": 49,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.620Z",
        "updatedAt": "2024-05-23T08:56:21.620Z",
        "barcode": "4250692197342",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/groceries/Fish%20Steak/1.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Fish%20Steak/thumbnail.png"
    },
    {
      "id": "25",
      "title": "Green Bell Pepper",
      "description": "Fresh and vibrant green bell pepper, perfect for adding color and flavor to your dishes.",
      "category": "groceries",
      "price": 1.29,
      "discountPercentage": 15.5,
      "rating": 4.28,
      "stock": 89,
      "tags": [
        "vegetables"
      ],
      "sku": "HU7S7VQ0",
      "weight": 7,
      "dimensions": {
        "width": 7.32,
        "height": 14.31,
        "depth": 21.38
      },
      "warrantyInformation": "5 year warranty",
      "shippingInformation": "Ships overnight",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 4,
          "comment": "Excellent quality!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Maya Reed",
          "reviewerEmail": "maya.reed@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Would buy again!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Madison Collins",
          "reviewerEmail": "madison.collins@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Would buy again!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Ethan Thompson",
          "reviewerEmail": "ethan.thompson@x.dummyjson.com"
        }
      ],
      "returnPolicy": "30 days return policy",
      "minimumOrderQuantity": 1,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.620Z",
        "updatedAt": "2024-05-23T08:56:21.620Z",
        "barcode": "7583442707568",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/groceries/Green%20Bell%20Pepper/1.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Green%20Bell%20Pepper/thumbnail.png"
    },
    {
      "id": "26",
      "title": "Green Chili Pepper",
      "description": "Spicy green chili pepper, ideal for adding heat to your favorite recipes.",
      "category": "groceries",
      "price": 0.99,
      "discountPercentage": 18.51,
      "rating": 4.43,
      "stock": 8,
      "tags": [
        "vegetables"
      ],
      "sku": "Y4RM3JCB",
      "weight": 2,
      "dimensions": {
        "width": 18.67,
        "height": 21.17,
        "depth": 25.26
      },
      "warrantyInformation": "No warranty",
      "shippingInformation": "Ships in 1-2 business days",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 2,
          "comment": "Disappointing product!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Mateo Bennett",
          "reviewerEmail": "mateo.bennett@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Very pleased!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Natalie Price",
          "reviewerEmail": "natalie.price@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Very satisfied!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Avery Barnes",
          "reviewerEmail": "avery.barnes@x.dummyjson.com"
        }
      ],
      "returnPolicy": "30 days return policy",
      "minimumOrderQuantity": 43,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.620Z",
        "updatedAt": "2024-05-23T08:56:21.620Z",
        "barcode": "8400326844874",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/groceries/Green%20Chili%20Pepper/1.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Green%20Chili%20Pepper/thumbnail.png",
      "deleted": false
    },
    {
      "id": "27",
      "title": "Honey Jar",
      "description": "Pure and natural honey in a convenient jar, perfect for sweetening beverages or drizzling over food.",
      "category": "groceries",
      "price": 6.99,
      "discountPercentage": 1.91,
      "rating": 3.5,
      "stock": 25,
      "tags": [
        "condiments"
      ],
      "sku": "BTBNIIOU",
      "weight": 9,
      "dimensions": {
        "width": 26.53,
        "height": 27.11,
        "depth": 6.63
      },
      "warrantyInformation": "2 year warranty",
      "shippingInformation": "Ships overnight",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 4,
          "comment": "Fast shipping!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Nicholas Bailey",
          "reviewerEmail": "nicholas.bailey@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Awesome product!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Gabriel Hayes",
          "reviewerEmail": "gabriel.hayes@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Highly impressed!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "James Garcia",
          "reviewerEmail": "james.garcia@x.dummyjson.com"
        }
      ],
      "returnPolicy": "90 days return policy",
      "minimumOrderQuantity": 1,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.620Z",
        "updatedAt": "2024-05-23T08:56:21.620Z",
        "barcode": "0668665656044",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/groceries/Honey%20Jar/1.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Honey%20Jar/thumbnail.png",
      "deleted": false
    },
    {
      "id": "28",
      "title": "Ice Cream",
      "description": "Creamy and delicious ice cream, available in various flavors for a delightful treat.",
      "category": "groceries",
      "price": 5.49,
      "discountPercentage": 7.58,
      "rating": 3.77,
      "stock": 76,
      "tags": [
        "desserts"
      ],
      "sku": "VEZMU1EQ",
      "weight": 5,
      "dimensions": {
        "width": 17.66,
        "height": 24.49,
        "depth": 25.98
      },
      "warrantyInformation": "2 year warranty",
      "shippingInformation": "Ships in 2 weeks",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 5,
          "comment": "Great product!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Elena Baker",
          "reviewerEmail": "elena.baker@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Highly impressed!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Madeline Simpson",
          "reviewerEmail": "madeline.simpson@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Very happy with my purchase!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Caleb Nelson",
          "reviewerEmail": "caleb.nelson@x.dummyjson.com"
        }
      ],
      "returnPolicy": "No return policy",
      "minimumOrderQuantity": 19,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.620Z",
        "updatedAt": "2024-05-23T08:56:21.620Z",
        "barcode": "9603960319256",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/groceries/Ice%20Cream/1.png",
        "https://cdn.dummyjson.com/products/images/groceries/Ice%20Cream/2.png",
        "https://cdn.dummyjson.com/products/images/groceries/Ice%20Cream/3.png",
        "https://cdn.dummyjson.com/products/images/groceries/Ice%20Cream/4.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Ice%20Cream/thumbnail.png"
    },
    {
      "id": "29",
      "title": "Juice",
      "description": "Refreshing fruit juice, packed with vitamins and great for staying hydrated.",
      "category": "groceries",
      "price": 3.99,
      "discountPercentage": 5.45,
      "rating": 3.41,
      "stock": 99,
      "tags": [
        "beverages"
      ],
      "sku": "M2K19S06",
      "weight": 2,
      "dimensions": {
        "width": 8.97,
        "height": 12.26,
        "depth": 15.05
      },
      "warrantyInformation": "1 week warranty",
      "shippingInformation": "Ships in 1-2 business days",
      "availabilityStatus": "In Stock",
      "reviews": [
        {
          "rating": 4,
          "comment": "Very satisfied!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Leo Rivera",
          "reviewerEmail": "leo.rivera@x.dummyjson.com"
        },
        {
          "rating": 2,
          "comment": "Not worth the price!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Ethan Martinez",
          "reviewerEmail": "ethan.martinez@x.dummyjson.com"
        },
        {
          "rating": 4,
          "comment": "Excellent quality!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Max Parker",
          "reviewerEmail": "max.parker@x.dummyjson.com"
        }
      ],
      "returnPolicy": "90 days return policy",
      "minimumOrderQuantity": 26,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.620Z",
        "updatedAt": "2024-05-23T08:56:21.620Z",
        "barcode": "8546824122355",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/groceries/Juice/1.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Juice/thumbnail.png"
    },
    {
      "id": "30",
      "title": "Kiwi",
      "description": "Nutrient-rich kiwi, perfect for snacking or adding a tropical twist to your dishes.",
      "category": "groceries",
      "price": 2.49,
      "discountPercentage": 10.32,
      "rating": 4.37,
      "stock": 1,
      "tags": [
        "fruits"
      ],
      "sku": "0X3NORB9",
      "weight": 8,
      "dimensions": {
        "width": 27.3,
        "height": 7.48,
        "depth": 15.08
      },
      "warrantyInformation": "6 months warranty",
      "shippingInformation": "Ships in 3-5 business days",
      "availabilityStatus": "Low Stock",
      "reviews": [
        {
          "rating": 5,
          "comment": "Very pleased!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Nora Russell",
          "reviewerEmail": "nora.russell@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Very pleased!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Dylan Wells",
          "reviewerEmail": "dylan.wells@x.dummyjson.com"
        },
        {
          "rating": 5,
          "comment": "Great product!",
          "date": "2024-05-23T08:56:21.620Z",
          "reviewerName": "Noah Hernandez",
          "reviewerEmail": "noah.hernandez@x.dummyjson.com"
        }
      ],
      "returnPolicy": "7 days return policy",
      "minimumOrderQuantity": 8,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.620Z",
        "updatedAt": "2024-05-23T08:56:21.620Z",
        "barcode": "3325493172934",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/groceries/Kiwi/1.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/groceries/Kiwi/thumbnail.png",
      "deleted": false
    },
    {
      "id": "a0fd",
      "title": "oppo is greate",
      "brand": "Lipstick",
      "category": "smartphones",
      "price": "121",
      "discountPercentage": "21",
      "stock": "12",
      "thumbnail": "https://www.google.com/imgres?q=clothes%20for%20men&imgurl=https%3A%2F%2Fassets.myntassets.com%2Fdpr_1.5%2Cq_60%2Cw_400%2Cc_limit%2Cfl_progressive%2Fassets%2Fimages%2F8717979%2F2019%2F3%2F20%2F585db9fe-1df0-458d-b218-6f514eabb9601553068826233-Mast--Harbour-Men-Shirts-4141553068825026-1.jpg&imgrefurl=https%3A%2F%2Fwww.myntra.com%2Fmen-clothing&docid=Eu752MzIP3AZjM&tbnid=J6Wdl-RIAQ9edM&vet=12ahUKEwjYo96Isd6FAxWmTGwGHUeKAUMQM3oECGgQAA..i&w=600&h=800&hcb=2&ved=2ahUKEwjYo96Isd6FAxWmTGwGHUeKAUMQM3oECGgQAA",
      "images": [
        "https://media.istockphoto.com/id/1394988455/photo/laptop-with-a-blank-screen-on-a-white-background.jpg?s=612x612&w=0&k=20&c=BXNMs3xZNXP__d22aVkeyfvgJ5T18r6HuUTEESYf_tE=",
        "https://media.istockphoto.com/id/1394988455/photo/laptop-with-a-blank-screen-on-a-white-background.jpg?s=612x612&w=0&k=20&c=BXNMs3xZNXP__d22aVkeyfvgJ5T18r6HuUTEESYf_tE=",
        "https://media.istockphoto.com/id/1394988455/photo/laptop-with-a-blank-screen-on-a-white-background.jpg?s=612x612&w=0&k=20&c=BXNMs3xZNXP__d22aVkeyfvgJ5T18r6HuUTEESYf_tE=",
        "https://www.google.com/imgres?q=clothes%20for%20men&imgurl=https%3A%2F%2Fassets.myntassets.com%2Fdpr_1.5%2Cq_60%2Cw_400%2Cc_limit%2Cfl_progressive%2Fassets%2Fimages%2F8717979%2F2019%2F3%2F20%2F585db9fe-1df0-458d-b218-6f514eabb9601553068826233-Mast--Harbour-Men-Shirts-4141553068825026-1.jpg&imgrefurl=https%3A%2F%2Fwww.myntra.com%2Fmen-clothing&docid=Eu752MzIP3AZjM&tbnid=J6Wdl-RIAQ9edM&vet=12ahUKEwjYo96Isd6FAxWmTGwGHUeKAUMQM3oECGgQAA..i&w=600&h=800&hcb=2&ved=2ahUKEwjYo96Isd6FAxWmTGwGHUeKAUMQM3oECGgQAA"
      ],
      "rating": 0,
      "deleted": false
    },
    {
      "id": "8f55",
      "title": "gshock is good",
      "brand": "Boots",
      "category": "smartphones",
      "price": 2800,
      "discountPercentage": 23,
      "stock": 5,
      "thumbnail": "https://m.media-amazon.com/images/I/71girhyQcJL._SX679_.jpg",
      "images": [
        "https://m.media-amazon.com/images/I/71girhyQcJL._SX679_.jpg",
        "https://m.media-amazon.com/images/I/71girhyQcJL._SX679_.jpg",
        "https://m.media-amazon.com/images/I/71girhyQcJL._SX679_.jpg",
        "https://m.media-amazon.com/images/I/71girhyQcJL._SX679_.jpg"
      ],
      "rating": 0
    },
    {
      "id": "ffd1",
      "title": "iphone 16 ",
      "brand": "Lipstick",
      "category": "smartphones",
      "price": 150000,
      "discountPercentage": 2,
      "stock": 1,
      "thumbnail": "https://m.media-amazon.com/images/I/31zA1lIK+tL._SX342_SY445_.jpg",
      "images": [
        "https://m.media-amazon.com/images/I/31zA1lIK+tL._SX342_SY445_.jpg",
        "https://m.media-amazon.com/images/I/31zA1lIK+tL._SX342_SY445_.jpg",
        "https://m.media-amazon.com/images/I/31zA1lIK+tL._SX342_SY445_.jpg",
        "https://m.media-amazon.com/images/I/31zA1lIK+tL._SX342_SY445_.jpg"
      ],
      "rating": 0,
      "deleted": false
    }
  ],
  "categories": [
    {
      "value": "smartphones",
      "label": "smartphones",
      "checked": false,
      "id": "d926"
    },
    {
      "value": "laptops",
      "label": "laptops",
      "checked": false,
      "id": "ce38"
    },
    {
      "value": "fragrances",
      "label": "fragrances",
      "checked": false,
      "id": "e4e3"
    },
    {
      "value": "skincare",
      "label": "skincare",
      "checked": false,
      "id": "13e3"
    },
    {
      "value": "groceries",
      "label": "groceries",
      "checked": false,
      "id": "659b"
    },
    {
      "value": "home-decoration",
      "label": "home decoration",
      "checked": false,
      "id": "65c4"
    },
    {
      "value": "furniture",
      "label": "furniture",
      "checked": false,
      "id": "cfde"
    },
    {
      "value": "tops",
      "label": "tops",
      "checked": false,
      "id": "c070"
    },
    {
      "value": "womens-dresses",
      "label": "womens dresses",
      "checked": false,
      "id": "534c"
    },
    {
      "value": "womens-shoes",
      "label": "womens shoes",
      "checked": false,
      "id": "f347"
    },
    {
      "value": "mens-shirts",
      "label": "mens shirts",
      "checked": false,
      "id": "87e4"
    },
    {
      "value": "mens-shoes",
      "label": "mens shoes",
      "checked": false,
      "id": "2bb6"
    },
    {
      "value": "mens-watches",
      "label": "mens watches",
      "checked": false,
      "id": "abec"
    },
    {
      "value": "womens-watches",
      "label": "womens watches",
      "checked": false,
      "id": "52bf"
    },
    {
      "value": "womens-bags",
      "label": "womens bags",
      "checked": false,
      "id": "74de"
    },
    {
      "value": "womens-jewellery",
      "label": "womens jewellery",
      "checked": false,
      "id": "7683"
    },
    {
      "value": "sunglasses",
      "label": "sunglasses",
      "checked": false,
      "id": "ffd0"
    },
    {
      "value": "automotive",
      "label": "automotive",
      "checked": false,
      "id": "cf58"
    },
    {
      "value": "motorcycle",
      "label": "motorcycle",
      "checked": false,
      "id": "f4e6"
    },
    {
      "value": "lighting",
      "label": "lighting",
      "checked": false,
      "id": "a5ab"
    }
  ],
  "brands": [
    {
      "value": "Lipstick",
      "label": "Lipstick",
      "checked": false,
      "id": "813c"
    },
    {
      "value": "Foundation",
      "label": "Foundation",
      "checked": false,
      "id": "7bee"
    },
    {
      "value": "Mascara",
      "label": "Mascara",
      "checked": false,
      "id": "fb9e"
    },
    {
      "value": "Eyeliner",
      "label": "Eyeliner",
      "checked": false,
      "id": "148c"
    },
    {
      "value": "Perfume",
      "label": "Perfume",
      "checked": false,
      "id": "95f5"
    },
    {
      "value": "Skincare",
      "label": "Skincare",
      "checked": false,
      "id": "bc37"
    },
    {
      "value": "Casual Shoes",
      "label": "Casual Shoes",
      "checked": false,
      "id": "28e0"
    },
    {
      "value": "Sports Shoes",
      "label": "Sports Shoes",
      "checked": false,
      "id": "15e4"
    },
    {
      "value": "Running Shoes",
      "label": "Running Shoes",
      "checked": false,
      "id": "801c"
    },
    {
      "value": "Sneakers",
      "label": "Sneakers",
      "checked": false,
      "id": "fde6"
    },
    {
      "value": "Sandals",
      "label": "Sandals",
      "checked": false,
      "id": "e480"
    },
    {
      "value": "Flip Flops",
      "label": "Flip Flops",
      "checked": false,
      "id": "9865"
    },
    {
      "value": "Boots",
      "label": "Boots",
      "checked": false,
      "id": "4139"
    },
    {
      "value": "Slippers",
      "label": "Slippers",
      "checked": false,
      "id": "61e6"
    },
    {
      "value": "Groceries",
      "label": "Groceries",
      "id": "e818"
    },
    {
      "value": "Fruits",
      "label": "Fruits",
      "id": "3fcd"
    },
    {
      "value": "Vegetables",
      "label": "Vegetables",
      "id": "6267"
    },
    {
      "value": "Seafood",
      "label": "Seafood",
      "id": "23a1"
    },
    {
      "value": "Condiments",
      "label": "Condiments",
      "id": "f8ac"
    },
    {
      "value": "Desserts",
      "label": "Desserts",
      "id": "6a6a"
    },
    {
      "value": "Beverages",
      "label": "Beverages",
      "id": "02a3"
    },
    {
      "value": "Pet Supplies",
      "label": "Pet Supplies",
      "id": "c4e6"
    },
    {
      "value": "Dairy",
      "label": "Dairy",
      "id": "63f9"
    }
  ],
  "users": [
    {
      "id": "73d8",
      "email": "admin@gmail.com",
      "password": "Admin@321",
      "addresses": [
        {
          "name": "adminnn",
          "email": "admin",
          "city": "admin",
          "state": "admin",
          "pinCode": "212121",
          "phone": "98989898",
          "street": "admin"
        }
      ],
      "role": "admin"
    },
    {
      "id": "8e1e",
      "email": "demo@gmail.com",
      "password": "Demo@321",
      "addresses": [
        {
          "name": "demO",
          "email": "kazmiwrite@gmail.com",
          "phone": "08057070230",
          "street": "India",
          "city": "mzn",
          "state": "Uttar Pradesh",
          "pinCode": "122"
        }
      ],
      "role": "user"
    },
    {
      "id": "e87f",
      "email": "sufi@gmail.com",
      "password": "Sufiya@321",
      "addresses": [
        {
          "name": "Sufi",
          "email": "kazmiwrite@gmail.com",
          "phone": "08057070230",
          "street": "Up Muzaffarnagar",
          "city": "muzaffarnagar",
          "state": "Uttar Pradesh",
          "pinCode": "21212121"
        },
        {
          "name": "Sufiii",
          "email": "kazmiwrite@gmail.com",
          "phone": "08057070230",
          "street": "Up Muzaffarnagar",
          "city": "muzaffarnagar",
          "state": "Uttar Pradesh",
          "pinCode": "21212121"
        }
      ],
      "role": "user"
    },
    {
      "id": "db6b",
      "email": "kazmi@gmail.com",
      "password": "Kazmi@321",
      "addresses": [
        {
          "name": "kazmi",
          "email": "kazmiwrite@gmail.com",
          "phone": "08057070230",
          "street": "Up Muzaffarnagar",
          "city": "muzaffarnagar",
          "state": "Uttar Pradesh",
          "pinCode": "212121212"
        }
      ],
      "role": "user"
    }
  ],
  "cart": [],
  "orders": [
    {
      "id": "9f6b",
      "items": [
        {
          "id": "8093",
          "title": "Essence Mascara Lash Princess lala",
          "description": "The Essence Mascara Lash Princess is a popular mascara known for its volumizing and lengthening effects. Achieve dramatic lashes with this long-lasting and cruelty-free formula.",
          "category": "skincare",
          "price": 12,
          "discountPercentage": 1,
          "rating": 0,
          "stock": 5,
          "tags": [
            "beauty",
            "mascara"
          ],
          "brand": "Foundation",
          "sku": "RCH45Q1A",
          "weight": 2,
          "dimensions": {
            "width": 23.17,
            "height": 14.43,
            "depth": 28.01
          },
          "warrantyInformation": "1 month warranty",
          "shippingInformation": "Ships in 1 month",
          "availabilityStatus": "Low Stock",
          "reviews": [
            {
              "rating": 2,
              "comment": "Very unhappy with my purchase!",
              "date": "2024-05-23T08:56:21.618Z",
              "reviewerName": "John Doe",
              "reviewerEmail": "john.doe@x.dummyjson.com"
            },
            {
              "rating": 2,
              "comment": "Not as described!",
              "date": "2024-05-23T08:56:21.618Z",
              "reviewerName": "Nolan Gonzalez",
              "reviewerEmail": "nolan.gonzalez@x.dummyjson.com"
            },
            {
              "rating": 5,
              "comment": "Very satisfied!",
              "date": "2024-05-23T08:56:21.618Z",
              "reviewerName": "Scarlett Wright",
              "reviewerEmail": "scarlett.wright@x.dummyjson.com"
            }
          ],
          "returnPolicy": "30 days return policy",
          "minimumOrderQuantity": 24,
          "meta": {
            "createdAt": "2024-05-23T08:56:21.618Z",
            "updatedAt": "2024-05-23T08:56:21.618Z",
            "barcode": "9164035109868",
            "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
          },
          "images": [
            "https://cdn.dummyjson.com/products/images/beauty/Essence%20Mascara%20Lash%20Princess/1.png",
            "https://static.beautytocare.com/cdn-cgi/image/width=1440,height=1200,f=auto/media/catalog/product//e/s/essence-lash-princess-curl-volume-mascara-12ml.jpg",
            "https://cdn.dummyjson.com/products/images/beauty/Essence%20Mascara%20Lash%20Princess/1.png",
            "https://cdn.dummyjson.com/products/images/beauty/Essence%20Mascara%20Lash%20Princess/thumbnail.png"
          ],
          "thumbnail": "https://cdn.dummyjson.com/products/images/beauty/Essence%20Mascara%20Lash%20Princess/thumbnail.png",
          "deleted": false,
          "productId": "1",
          "quantity": 1,
          "user": "8e1e"
        }
      ],
      "totalAmount": 12,
      "totalItems": 1,
      "user": {
        "id": "8e1e",
        "email": "demo@gmail.com",
        "password": "Demo@321",
        "addresses": [
          {
            "name": "demo",
            "email": "kazmiwrite@gmail.com",
            "city": "mzn",
            "state": "Uttar Pradesh",
            "pinCode": "122",
            "phone": "08057070230",
            "street": "India"
          }
        ],
        "role": "user"
      },
      "paymentMethod": "cash",
      "selectedAddress": {
        "name": "demo",
        "email": "kazmiwrite@gmail.com",
        "city": "mzn",
        "state": "Uttar Pradesh",
        "pinCode": "122",
        "phone": "08057070230",
        "street": "India"
      },
      "status": "pending"
    },
    {
      "id": "f817",
      "items": [
        {
          "id": "bfc1",
          "title": "gshock is good",
          "brand": "Boots",
          "category": "smartphones",
          "price": 2800,
          "discountPercentage": 23,
          "stock": 5,
          "thumbnail": "https://m.media-amazon.com/images/I/71girhyQcJL._SX679_.jpg",
          "images": [
            "https://m.media-amazon.com/images/I/71girhyQcJL._SX679_.jpg",
            "https://m.media-amazon.com/images/I/71girhyQcJL._SX679_.jpg",
            "https://m.media-amazon.com/images/I/71girhyQcJL._SX679_.jpg",
            "https://m.media-amazon.com/images/I/71girhyQcJL._SX679_.jpg"
          ],
          "rating": 0,
          "productId": "8f55",
          "quantity": 1,
          "user": "e87f"
        }
      ],
      "totalAmount": 2156,
      "totalItems": 1,
      "user": {
        "id": "e87f",
        "email": "sufi@gmail.com",
        "password": "Sufiya@321",
        "addresses": [
          {
            "name": "Sufi",
            "email": "kazmiwrite@gmail.com",
            "phone": "08057070230",
            "street": "Up Muzaffarnagar",
            "city": "muzaffarnagar",
            "state": "Uttar Pradesh",
            "pinCode": "21212121"
          }
        ],
        "role": "user"
      },
      "paymentMethod": "cash",
      "selectedAddress": {
        "name": "Sufi",
        "email": "kazmiwrite@gmail.com",
        "phone": "08057070230",
        "street": "Up Muzaffarnagar",
        "city": "muzaffarnagar",
        "state": "Uttar Pradesh",
        "pinCode": "21212121"
      },
      "status": "dispatched"
    },
    {
      "id": "ad9b",
      "items": [
        {
          "id": "194c",
          "title": "Powder Canister fila",
          "description": "The Powder Canister is a finely milled setting powder designed to set makeup and control shine. With a lightweight and translucent formula, it provides a smooth and matte finish.",
          "category": "skincare",
          "price": 14,
          "discountPercentage": 18,
          "rating": 0,
          "stock": 5,
          "tags": [
            "beauty",
            "face powder"
          ],
          "brand": "Foundation",
          "sku": "9EN8WLT2",
          "weight": 8,
          "dimensions": {
            "width": 24.16,
            "height": 10.7,
            "depth": 11.07
          },
          "warrantyInformation": "2 year warranty",
          "shippingInformation": "Ships in 1-2 business days",
          "availabilityStatus": "In Stock",
          "reviews": [
            {
              "rating": 5,
              "comment": "Very happy with my purchase!",
              "date": "2024-05-23T08:56:21.618Z",
              "reviewerName": "Ethan Thompson",
              "reviewerEmail": "ethan.thompson@x.dummyjson.com"
            },
            {
              "rating": 4,
              "comment": "Great value for money!",
              "date": "2024-05-23T08:56:21.618Z",
              "reviewerName": "Levi Hicks",
              "reviewerEmail": "levi.hicks@x.dummyjson.com"
            },
            {
              "rating": 5,
              "comment": "Highly impressed!",
              "date": "2024-05-23T08:56:21.618Z",
              "reviewerName": "Hazel Gardner",
              "reviewerEmail": "hazel.gardner@x.dummyjson.com"
            }
          ],
          "returnPolicy": "60 days return policy",
          "minimumOrderQuantity": 25,
          "meta": {
            "createdAt": "2024-05-23T08:56:21.618Z",
            "updatedAt": "2024-05-23T08:56:21.618Z",
            "barcode": "0516267971277",
            "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
          },
          "images": [
            "https://cdn.dummyjson.com/products/images/beauty/Powder%20Canister/1.png",
            "https://cdn.dummyjson.com/products/images/beauty/Powder%20Canister/1.png",
            "https://cdn.dummyjson.com/products/images/beauty/Powder%20Canister/1.png",
            "https://cdn.dummyjson.com/products/images/beauty/Eyeshadow%20Palette%20with%20Mirror/thumbnail.png"
          ],
          "thumbnail": "https://cdn.dummyjson.com/products/images/beauty/Eyeshadow%20Palette%20with%20Mirror/thumbnail.png",
          "deleted": false,
          "productId": "3",
          "quantity": 2,
          "user": "db6b"
        }
      ],
      "totalAmount": 22,
      "totalItems": 2,
      "user": {
        "id": "db6b",
        "email": "kazmi@gmail.com",
        "password": "Kazmi@321",
        "addresses": [
          {
            "name": "kazmi",
            "email": "kazmiwrite@gmail.com",
            "phone": "08057070230",
            "street": "Up Muzaffarnagar",
            "city": "muzaffarnagar",
            "state": "Uttar Pradesh",
            "pinCode": "212121212"
          }
        ],
        "role": "user"
      },
      "paymentMethod": "cash",
      "selectedAddress": {
        "name": "kazmi",
        "email": "kazmiwrite@gmail.com",
        "phone": "08057070230",
        "street": "Up Muzaffarnagar",
        "city": "muzaffarnagar",
        "state": "Uttar Pradesh",
        "pinCode": "212121212"
      },
      "status": "cencelled"
    }
  ]
}
 
import React from 'react'
import { Login } from './features/auth/components/Login';
import { Signup } from './features/auth/components/Signup';
import Logout from './features/auth/components/Logout';
import AdminHome from './pages/AdminHome';
import ProtectedAdmin from './features/auth/components/ProtectedAdmin';
import Home from './pages/Home';
import AdminProductFormPage from './pages/AdminProductFormPage';
import AdminProductDetailPage from './pages/AdminProductDetailPage';
import PageNotFound from './pages/404';
import Protected from './features/auth/components/Protected';
import AdminOrdersPage from './pages/AdminOrdersPage';
import {
  createBrowserRouter,
  RouterProvider,
} from "react-router-dom";

const router = createBrowserRouter([
  {
    path: "/",
    element: (
      <Protected>
        <Home />
      </Protected>
    ),
  },
  {
    path: "/login",
    element: <Login></Login>,
  },
  {
    path: "/signup",
    element: <Signup></Signup>,
  },
  {
    path: "/logout",
    element: <Logout></Logout>,
  },
  {
    path: "/admin",
    element: (
      <ProtectedAdmin>
        <AdminHome></AdminHome>
      </ProtectedAdmin>
    ),
  },
  {
    path: "/admin/product-form/edit/:id",
    element: (
      <ProtectedAdmin>
        <AdminProductFormPage></AdminProductFormPage>
      </ProtectedAdmin>
    ),
  },
  {
    path: "/admin/orders",
    element: (
      <ProtectedAdmin>
        <AdminOrdersPage></AdminOrdersPage>
      </ProtectedAdmin>
    ),
  },
  {
    path: "*",
    element: <PageNotFound></PageNotFound>,
  },
]);

function App() {
  return (
    <div>
        <RouterProvider router={router} />
    </div>
  )
}

export default App

 
../../order/orderSlice
 

    dispatch(updateProductAsync(product)); // Dispatch the async update
 

  clearSelectedProduct,
 
../productslist/productSlice
 

      </Provider>
 

      <Provider>
 

  Route,
  Link,
 
 template={AlertTemplate}
 

  {
    path: "/cart",
    element: (
      <Protected>
        <CartPage></CartPage>
      </Protected>
    ),
  },
 

  {
    path: "/checkout",
    element: (
      <Protected>
        <CheckoutPage></CheckoutPage>
      </Protected>
    ),
  },
 

  {
    path: "/product-detail/:id",
    element: (
      <Protected>
        <ProductDetailPage></ProductDetailPage>
      </Protected>
    ),
  },
 

  {
    path: "/order-success/:id",
    element: <OrderSuccessPage></OrderSuccessPage>,
  },
 

  {
    path: "/orders",
    element: (
      <UserOrderPage></UserOrderPage>
      // we will add page later right now use
    ),
  },
 

  {
    path: "/profile",
    element: (
      <UserProfilePage></UserProfilePage>
      // we will add page later right now use
    ),
  },
 

  {
    path: "/forgot-password",
    element: <ForgotPasswordPage></ForgotPasswordPage>,
  },
 

  {
    path: "/admin/product-form",
    element: (
      <ProtectedAdmin>
        <AdminProductFormPage></AdminProductFormPage>
      </ProtectedAdmin>
    ),
  },
 
